var app=function(){"use strict";function e(){}function n(e,n){for(const t in n)e[t]=n[t];return e}function t(e){return e()}function s(){return Object.create(null)}function a(e){e.forEach(t)}function o(e){return"function"==typeof e}function l(e,n){return e!=e?n==n:e!==n||e&&"object"==typeof e||"function"==typeof e}function c(e,n,t){e.$$.on_destroy.push(function(e,n){const t=e.subscribe(n);return t.unsubscribe?()=>t.unsubscribe():t}(n,t))}function r(e,n,t){if(e){const s=i(e,n,t);return e[0](s)}}function i(e,t,s){return e[1]?n({},n(t.$$scope.ctx,e[1](s?s(t):{}))):t.$$scope.ctx}function p(e,t,s,a){return e[1]?n({},n(t.$$scope.changed||{},e[1](a?a(s):{}))):t.$$scope.changed||{}}function d(e,n){e.appendChild(n)}function u(e,n,t){e.insertBefore(n,t||null)}function h(e){e.parentNode.removeChild(e)}function m(e){return document.createElement(e)}function g(e){return document.createTextNode(e)}function f(){return g(" ")}function y(){return g("")}function b(e,n,t,s){return e.addEventListener(n,t,s),()=>e.removeEventListener(n,t,s)}function j(e,n,t){null==t?e.removeAttribute(n):e.getAttribute(n)!==t&&e.setAttribute(n,t)}function w(e,n){n=""+n,e.data!==n&&(e.data=n)}function x(e,n,t,s){e.style.setProperty(n,t,s?"important":"")}let $;function v(e){$=e}function k(e){(function(){if(!$)throw new Error("Function called outside component initialization");return $})().$$.on_mount.push(e)}const T=[],C=[],M=[],L=[],H=Promise.resolve();let S=!1;function _(e){M.push(e)}function B(){const e=new Set;do{for(;T.length;){const e=T.shift();v(e),I(e.$$)}for(;C.length;)C.pop()();for(let n=0;n<M.length;n+=1){const t=M[n];e.has(t)||(t(),e.add(t))}M.length=0}while(T.length);for(;L.length;)L.pop()();S=!1}function I(e){null!==e.fragment&&(e.update(e.dirty),a(e.before_update),e.fragment&&e.fragment.p(e.dirty,e.ctx),e.dirty=null,e.after_update.forEach(_))}const P=new Set;let E;function A(){E={r:0,c:[],p:E}}function q(){E.r||a(E.c),E=E.p}function G(e,n){e&&e.i&&(P.delete(e),e.i(n))}function D(e,n,t,s){if(e&&e.o){if(P.has(e))return;P.add(e),E.c.push(()=>{P.delete(e),s&&(t&&e.d(1),s())}),e.o(n)}}function N(e){e&&e.c()}function Y(e,n,s){const{fragment:l,on_mount:c,on_destroy:r,after_update:i}=e.$$;l&&l.m(n,s),_(()=>{const n=c.map(t).filter(o);r?r.push(...n):a(n),e.$$.on_mount=[]}),i.forEach(_)}function z(e,n){const t=e.$$;null!==t.fragment&&(a(t.on_destroy),t.fragment&&t.fragment.d(n),t.on_destroy=t.fragment=null,t.ctx={})}function O(e,n){e.$$.dirty||(T.push(e),S||(S=!0,H.then(B)),e.$$.dirty=s()),e.$$.dirty[n]=!0}function R(n,t,o,l,c,r){const i=$;v(n);const p=t.props||{},d=n.$$={fragment:null,ctx:null,props:r,update:e,not_equal:c,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:s(),dirty:null};let u=!1;var h;d.ctx=o?o(n,p,(e,t,s=t)=>(d.ctx&&c(d.ctx[e],d.ctx[e]=s)&&(d.bound[e]&&d.bound[e](s),u&&O(n,e)),t)):p,d.update(),u=!0,a(d.before_update),d.fragment=!!l&&l(d.ctx),t.target&&(t.hydrate?d.fragment&&d.fragment.l((h=t.target,Array.from(h.childNodes))):d.fragment&&d.fragment.c(),t.intro&&G(n.$$.fragment),Y(n,t.target,t.anchor),B()),v(i)}class U{$destroy(){z(this,1),this.$destroy=e}$on(e,n){const t=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return t.push(n),()=>{const e=t.indexOf(n);-1!==e&&t.splice(e,1)}}$set(){}}function W(n){let t;return{c(){(t=m("div")).innerHTML='<div class="banner svelte-19i87y2"><p class="svelte-19i87y2"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-19i87y2"></p> \n<p class="svelte-19i87y2">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-19i87y2"><a href="introduction" class="svelte-19i87y2">Introduction</a> \n<a href="getting-started" class="svelte-19i87y2">Getting Started</a></div>',j(t,"class","hero svelte-19i87y2")},m(e,n){u(e,t,n)},p:e,i:e,o:e,d(e){e&&h(t)}}}const F={fullscreen:!0};class K extends U{constructor(e){super(),R(this,e,null,W,l,{})}}const J=()=>({}),Z=()=>({}),Q=()=>({}),V=()=>({});function X(e){let n,t,s,a,o;const l=e.$$slots.result,c=r(l,e,V),g=e.$$slots.code,y=r(g,e,Z);return{c(){n=m("div"),t=m("div"),c&&c.c(),s=f(),a=m("div"),y&&y.c(),j(t,"class","result"),j(a,"class","code"),j(n,"class","example")},m(e,l){u(e,n,l),d(n,t),c&&c.m(t,null),d(n,s),d(n,a),y&&y.m(a,null),o=!0},p(e,n){c&&c.p&&e.$$scope&&c.p(p(l,n,e,Q),i(l,n,V)),y&&y.p&&e.$$scope&&y.p(p(g,n,e,J),i(g,n,Z))},i(e){o||(G(c,e),G(y,e),o=!0)},o(e){D(c,e),D(y,e),o=!1},d(e){e&&h(n),c&&c.d(e),y&&y.d(e)}}}function ee(e,n,t){let{$$slots:s={},$$scope:a}=n;return e.$set=(e=>{"$$scope"in e&&t("$$scope",a=e.$$scope)}),{$$slots:s,$$scope:a}}class ne extends U{constructor(e){super(),R(this,e,ee,X,l,{})}}var te="/svelte-docs/";function se(e){let n,t;return{c(){j(n=m("iframe"),"slot","result"),x(n,"height",e.iframe_height+"px"),j(n,"title","Result"),j(n,"scrolling","no"),j(n,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),j(n,"srcdoc",e.srcdoc),j(n,"class","svelte-y9biys"),t=b(n,"load",e.sendMessage)},m(t,s){u(t,n,s),e.iframe_1_binding(n)},p(e,t){e.iframe_height&&x(n,"height",t.iframe_height+"px")},d(s){s&&h(n),e.iframe_1_binding(null),t()}}}function ae(e){let n,t,s=e.code.trim()+"";return{c(){n=m("pre"),t=m("code"),j(n,"slot","code"),j(n,"class","hljs svelte-y9biys")},m(e,a){u(e,n,a),d(n,t),t.innerHTML=s},p(e,n){e.code&&s!==(s=n.code.trim()+"")&&(t.innerHTML=s)},d(e){e&&h(n)}}}function oe(n){let t;return{c(){t=f()},m(e,n){u(e,t,n)},p:e,d(e){e&&h(t)}}}function le(e){let n;const t=new ne({props:{$$slots:{default:[oe],code:[ae],result:[se]},$$scope:{ctx:e}}});return{c(){N(t.$$.fragment)},m(e,s){Y(t,e,s),n=!0},p(e,n){const s={};(e.$$scope||e.code||e.iframe_height||e.iframe)&&(s.$$scope={changed:e,ctx:n}),t.$set(s)},i(e){n||(G(t.$$.fragment,e),n=!0)},o(e){D(t.$$.fragment,e),n=!1},d(e){z(t,e)}}}let ce=1;function re(e,n,t){let s,{name:a}=n,{code:o}=n,l=ce++,c=70;const r=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${te}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",function(e){e.data.iframe_id&&e.data.iframe_id===l&&e.data.hasOwnProperty("HEIGHT")&&t("iframe_height",c=e.data.HEIGHT)}),e.$set=(e=>{"name"in e&&t("name",a=e.name),"code"in e&&t("code",o=e.code)}),{name:a,code:o,iframe:s,iframe_height:c,srcdoc:r,sendMessage:function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},iframe_1_binding:function(e){C[e?"unshift":"push"](()=>{t("iframe",s=e)})}}}class ie extends U{constructor(e){super(),R(this,e,re,le,l,{name:0,code:0})}}function pe(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,j,w,x,$,v,k,T,C,M,L,H,S,_,B,I,P,E,A,q,O,R,U;const W=new ie({props:{name:"Ex_0_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">&nbsp;\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>'}}),F=new ie({props:{name:"Ex_1_39fd83e225ff0ad6956224cded64370c",code:'\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n'}}),K=new ie({props:{name:"Ex_2_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),J=new ie({props:{name:"Ex_3_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),Z=new ie({props:{name:"Ex_4_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span>'}});return{c(){(t=m("h1")).textContent="Example code block",s=f(),(a=m("p")).innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=f(),(l=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=&#39;Button&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',c=f(),N(W.$$.fragment),r=f(),(i=m("h3")).textContent="Hide script and/or style blocks",p=f(),(d=m("p")).innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",g=f(),(y=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=&#39;Button&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',b=f(),N(F.$$.fragment),j=f(),(w=m("h3")).textContent="Import in examples",x=f(),($=m("p")).innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",v=f(),N(K.$$.fragment),k=f(),(T=m("p")).textContent="Also you can import any local file by relative path according documents directory root:",C=f(),N(J.$$.fragment),M=f(),(L=m("p")).innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',H=f(),(S=m("pre")).innerHTML='<code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:{\n    <span class="hljs-string">&#39;./Button.svelte&#39;</span>: <span class="hljs-string">&#39;./../mylib/Button.svelte&#39;</span>,\n    <span class="hljs-string">&#39;my-button-package&#39;</span>: <span class="hljs-string">&#39;./../mylib/Button.svelte&#39;</span>\n},\n...</code>',_=f(),N(Z.$$.fragment),B=f(),(I=m("h3")).textContent="Styling",P=f(),(E=m("p")).innerHTML="Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",A=f(),(q=m("p")).innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',O=f(),(R=m("p")).innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),Y(W,e,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),Y(F,e,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),Y(K,e,n),u(e,k,n),u(e,T,n),u(e,C,n),Y(J,e,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),Y(Z,e,n),u(e,B,n),u(e,I,n),u(e,P,n),u(e,E,n),u(e,A,n),u(e,q,n),u(e,O,n),u(e,R,n),U=!0},p:e,i(e){U||(G(W.$$.fragment,e),G(F.$$.fragment,e),G(K.$$.fragment,e),G(J.$$.fragment,e),G(Z.$$.fragment,e),U=!0)},o(e){D(W.$$.fragment,e),D(F.$$.fragment,e),D(K.$$.fragment,e),D(J.$$.fragment,e),D(Z.$$.fragment,e),U=!1},d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),z(W,e),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),z(F,e),e&&h(j),e&&h(w),e&&h(x),e&&h($),e&&h(v),z(K,e),e&&h(k),e&&h(T),e&&h(C),z(J,e),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),z(Z,e),e&&h(B),e&&h(I),e&&h(P),e&&h(E),e&&h(A),e&&h(q),e&&h(O),e&&h(R)}}}function de(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,w,x,$,v,k,T,C,M,L,H,S,_,B,I,P,E,A,q,G,D,N,Y,z,O,R,U;return{c(){(t=m("h1")).textContent="Properties",s=f(),(a=m("p")).textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=f(),(l=m("p")).innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",c=f(),(r=m("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#39;text&#39;</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',i=f(),(p=m("p")).textContent="There are four properties:",d=f(),(g=m("ol")).innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",y=f(),(b=m("p")).textContent="So lets create fancy table of properties for this component:",w=f(),(x=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | &#39;text&#39;,&#39;number&#39;,&#39;range&#39;,&#39;date&#39;(&#39;text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code>',$=f(),(v=m("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',k=f(),(T=m("p")).textContent="Now user of your component will know all about its properties.",C=f(),(M=m("h3")).textContent="Describing property",L=f(),(H=m("ul")).innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",S=f(),(_=m("h3")).textContent="Autogenerated properties",B=f(),(I=m("p")).innerHTML="Another way to describre properties, retrieve it right from the Svelte component. But you should add special comment lines above each property. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:",P=f(),(E=m("pre")).innerHTML='<code class="language-html">\n// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-comment">/* Name of the input | string */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/* Type of the input | &#39;text&#39;,&#39;number&#39;,&#39;range&#39;,&#39;date&#39; */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#39;text&#39;</span>;\n    <span class="hljs-comment">/* Should the input be disabled | bool */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/* Size of the input | number/string */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',A=f(),(q=m("p")).textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",G=f(),(D=m("p")).textContent="Then just place a path to the this component inside Properties code block:",N=f(),(Y=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code>',z=f(),(O=m("p")).textContent="And get the result:",R=f(),(U=m("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',j(v,"class","properties"),j(U,"class","properties")},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),u(e,B,n),u(e,I,n),u(e,P,n),u(e,E,n),u(e,A,n),u(e,q,n),u(e,G,n),u(e,D,n),u(e,N,n),u(e,Y,n),u(e,z,n),u(e,O,n),u(e,R,n),u(e,U,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(w),e&&h(x),e&&h($),e&&h(v),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(I),e&&h(P),e&&h(E),e&&h(A),e&&h(q),e&&h(G),e&&h(D),e&&h(N),e&&h(Y),e&&h(z),e&&h(O),e&&h(R),e&&h(U)}}}function ue(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=m("h1")).textContent="Basepath option",s=f(),(a=m("p")).innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=f(),(l=m("p")).innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',c=f(),(r=m("p")).innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=f(),(p=m("blockquote")).innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>"},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p)}}}function he(n){let t,s,a;return{c(){(t=m("h1")).textContent="Configuration",s=f(),(a=m("p")).innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a)}}}function me(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,j,w;return{c(){(t=m("h1")).textContent="incCSS option",s=f(),(a=m("p")).textContent="If you want to use global CSS styles for result in the Example code block. You can easy include them with this option.",o=f(),(l=m("p")).textContent="Suppose you have following structure of your project:",c=f(),(r=m("pre")).innerHTML='<code class="language-javascript">\nmy-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   ├── counter.css\n│   └── Counter.svelte\n└── ...</code>',i=f(),(p=m("p")).innerHTML="Add <em>global css</em> using <code>incCSS</code> option:",d=f(),(g=m("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">&#39;./../mycomponent/counter.css&#39;</span>,\n    ...\n]</code>',y=f(),(b=m("p")).textContent="Same way you can import any CSS from NPM packages(don't forget to install it before):",j=f(),(w=m("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">&#39;node_modules/thebestcssframework/styles.min.css&#39;</span>,\n    ...\n]</code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,j,n),u(e,w,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(j),e&&h(w)}}}function ge(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,j,w,x,$,v,k,T,C;return{c(){(t=m("h1")).textContent="incPKG option",s=f(),(a=m("p")).innerHTML="If you want use your local components in Examples code block you should link it with vitrual package name in <code>incPKG</code> option.",o=f(),(l=m("p")).textContent="Suppose you have following structure of your project:",c=f(),(r=m("pre")).innerHTML='<code class="language-javascript">\nmy-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code>',i=f(),(p=m("p")).innerHTML="And want to import <code>mycomponents/Counter.svelte</code> in your Example code block, you may use relative path(from the docs root) like this:",d=f(),(g=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from &#39;./../mycomponent/Counter.svelte&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>',y=f(),(b=m("p")).textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",j=f(),(w=m("p")).innerHTML="So you can add <em>virtual package</em> using <code>incPKG</code> option:",x=f(),($=m("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incPKG</span>:{\n    ...\n    <span class="hljs-string">&quot;my-counter-package&quot;</span>: <span class="hljs-string">&quot;./../mycomponent/Counter.svelte&quot;</span>,\n    ...\n}</code>',v=f(),(k=m("p")).innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",T=f(),(C=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from &#39;my-counter-package&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),u(e,k,n),u(e,T,n),u(e,C,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(j),e&&h(w),e&&h(x),e&&h($),e&&h(v),e&&h(k),e&&h(T),e&&h(C)}}}function fe(n){let t,s,a,o,l,c,r;return{c(){(t=m("h1")).textContent="Pathes option",s=f(),(a=m("p")).textContent="There are two pathes you can change.",o=f(),(l=m("ul")).innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",c=f(),(r=m("blockquote")).innerHTML="<p>In most cases you don&#39;t need to change these options.</p>"},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r)}}}function ye(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=m("h1")).textContent="Preprocess option",s=f(),(a=m("p")).innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=f(),(l=m("pre")).innerHTML='<code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;svelte-preprocess-markdown&#39;</span>);\n\n<span class="hljs-built_in">module</span>.exports={\n    ...\n    preprocess: [\n        ...\n        markdown({<span class="hljs-attr">filetype</span>: <span class="hljs-string">&#39;svelte&#39;</span>}),\n        ...\n    ]\n    ...\n}</code>',c=f(),(r=m("p")).textContent="Then all your examples will be preprocessed:",i=f(),(p=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = &#39;World&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, {name}!</span>\n<span class="hljs-code">    ```</span></code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p)}}}function be(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,j,w,x,$,v,k,T,C,M,L,H,S,_,B,I,P,E,A;return{c(){(t=m("h1")).textContent="Getting started",s=f(),(a=m("h3")).textContent="Initialize Svelte-docs",o=f(),(l=m("p")).textContent="Just run this command in the root directory of your project:",c=f(),(r=m("pre")).innerHTML='<code class="language-bash">\nnpm init svelte-docs</code>',i=f(),(p=m("p")).textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=f(),(g=m("h3")).textContent="Edit your docs",y=f(),(b=m("p")).textContent="Switch to the created directory, ex.:",j=f(),(w=m("pre")).innerHTML='<code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code>',x=f(),($=m("p")).textContent="Run docs in development mode on the local server:",v=f(),(k=m("pre")).innerHTML='<code class="language-bash">\nnpm run dev</code>',T=f(),(C=m("p")).innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',M=f(),(L=m("p")).innerHTML="Now you can edit files in <code>src/pages</code> directory and browser will be reloaded on each save. ",H=f(),(S=m("h3")).textContent="Build the documentation site",_=f(),(B=m("p")).textContent="As soon as documentation ready for release you need to run the build:",I=f(),(P=m("pre")).innerHTML='<code class="language-bash">\nnpm run build</code>',E=f(),(A=m("p")).innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),u(e,B,n),u(e,I,n),u(e,P,n),u(e,E,n),u(e,A,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(j),e&&h(w),e&&h(x),e&&h($),e&&h(v),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(I),e&&h(P),e&&h(E),e&&h(A)}}}function je(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,w,x,$,v,k,T,C,M,L,H,S,_,B,I,P,E,A,q;const O=new ie({props:{name:"Ex_0_9753583d5391f3de0f3ee9487b6cf8d9",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>'}});return{c(){(t=m("h1")).textContent="Introdcing",s=f(),(a=m("h2")).textContent="Features",o=f(),(l=m("p")).innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',c=f(),(r=m("blockquote")).innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',i=f(),(p=m("ul")).innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',d=f(),(g=m("h2")).textContent="Zero-config",y=f(),(b=m("p")).textContent="Just run:",w=f(),(x=m("pre")).innerHTML='<code class="language-bash">\nnpm init svelte-docs</code>',$=f(),(v=m("p")).innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',k=f(),(T=m("h2")).textContent="Builtins",C=f(),(M=m("h3")).textContent="Examples",L=f(),(H=m("p")).textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",S=f(),N(O.$$.fragment),_=f(),(B=m("h3")).textContent="Properties",I=f(),(P=m("p")).innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component&#39;s <code>*.svelte</code> file.",E=f(),(A=m("dl")).innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",j(A,"class","properties")},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),Y(O,e,n),u(e,_,n),u(e,B,n),u(e,I,n),u(e,P,n),u(e,E,n),u(e,A,n),q=!0},p:e,i(e){q||(G(O.$$.fragment,e),q=!0)},o(e){D(O.$$.fragment,e),q=!1},d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(w),e&&h(x),e&&h($),e&&h(v),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),z(O,e),e&&h(_),e&&h(B),e&&h(I),e&&h(P),e&&h(E),e&&h(A)}}}function we(n){let t,s,a,o,l,c,r,i,p,d,g,y,b;return{c(){(t=m("h1")).textContent="Publishing on Github Pages",s=f(),(a=m("p")).innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=f(),(l=m("p")).textContent="To do it just run command in you documents source directory at any time:",c=f(),(r=m("pre")).innerHTML='<code class="language-bash">\nnpm run deploy</code>',i=f(),(p=m("p")).textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=f(),(g=m("blockquote")).innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",y=f(),(b=m("blockquote")).innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b)}}}function xe(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,j,w,x,$,v,k;return{c(){(t=m("h1")).textContent="Theming",s=f(),(a=m("p")).innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=f(),(l=m("h3")).textContent="Themes",c=f(),(r=m("p")).innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=f(),(p=m("h3")).textContent="Colors",d=f(),(g=m("p")).innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",y=f(),(b=m("h3")).textContent="Styles",j=f(),(w=m("p")).innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",x=f(),($=m("h3")).textContent="Layout",v=f(),(k=m("p")).innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),u(e,k,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(j),e&&h(w),e&&h(x),e&&h($),e&&h(v),e&&h(k)}}}function $e(n){let t,s,a,o,l,c,r,i,p,d,g,y,b,j,w,x,$,v,k,T,C,M,L,H,S,_,B,I,P,E,A,q,G,D,N,Y,z,O,R,U,W,F,K;return{c(){(t=m("h1")).textContent="Includes",s=f(),(a=m("p")).innerHTML="In the <code>src/includes</code> directory live little MDSv components which you can include in any page you want. There are some default files used by theme:",o=f(),(l=m("h3")).textContent="sidebar.md",c=f(),(r=m("p")).textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",i=f(),(p=m("p")).textContent="Let's look on example:",d=f(),(g=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-bullet">\n* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',y=f(),(b=m("p")).innerHTML="Usually it is just a list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/pages</code> directory. ",j=f(),(w=m("p")).innerHTML='URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/pages/components/button.md</code> file. Please see <a href="writing/routing">Routing</a> section for more info about URL.',x=f(),($=m("p")).textContent="External URLs will be opened in new window.",v=f(),(k=m("h3")).textContent="logo.md",T=f(),(C=m("p")).textContent="Commonly used for showing any logotype.  Just write something like:",M=f(),(L=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-section"># MyComponent #</span></code>',H=f(),(S=m("p")).textContent="Or you can use an image as your logotype:",_=f(),(B=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-section"># ![Logo](static/logo.png) #</span></code>',I=f(),(P=m("h3")).textContent="topbar.md",E=f(),(A=m("p")).textContent="There you can manage right section of the topbar. For example add some links there:",q=f(),(G=m("pre")).innerHTML='<code class="language-markdown"><span class="hljs-bullet">\n* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',D=f(),(N=m("h3")).textContent="error.md",Y=f(),(z=m("p")).textContent="Just an error message which will be shown when user try to load unexistent URL.",O=f(),(R=m("h2")).textContent="Custom includes",U=f(),(W=m("p")).innerHTML="You are free to add any <code>*.md</code> files there which you can to include on any page you want using special import path:",F=f(),(K=m("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@INCLUDES/banner.md&#39;</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Banner</span> /&gt;</span></code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n),u(e,y,n),u(e,b,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,$,n),u(e,v,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),u(e,B,n),u(e,I,n),u(e,P,n),u(e,E,n),u(e,A,n),u(e,q,n),u(e,G,n),u(e,D,n),u(e,N,n),u(e,Y,n),u(e,z,n),u(e,O,n),u(e,R,n),u(e,U,n),u(e,W,n),u(e,F,n),u(e,K,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g),e&&h(y),e&&h(b),e&&h(j),e&&h(w),e&&h(x),e&&h($),e&&h(v),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(I),e&&h(P),e&&h(E),e&&h(A),e&&h(q),e&&h(G),e&&h(D),e&&h(N),e&&h(Y),e&&h(z),e&&h(O),e&&h(R),e&&h(U),e&&h(W),e&&h(F),e&&h(K)}}}function ve(n){let t,s,o,l,c,r,i,p;return{c(){t=m("span"),(s=m("span")).textContent="-",o=f(),l=m("span"),c=g(n.count),r=f(),(i=m("span")).textContent="+",j(s,"class","minus svelte-1kq48qn"),j(l,"class","value svelte-1kq48qn"),j(i,"class","plus svelte-1kq48qn"),j(t,"class","counter svelte-1kq48qn"),p=[b(s,"click",n.click_handler),b(i,"click",n.click_handler_1)]},m(e,n){u(e,t,n),d(t,s),d(t,o),d(t,l),d(l,c),d(t,r),d(t,i)},p(e,n){e.count&&w(c,n.count)},i:e,o:e,d(e){e&&h(t),a(p)}}}function ke(e,n,t){let s=0;return{count:s,click_handler:e=>t("count",s--,s),click_handler_1:e=>t("count",s++,s)}}class Te extends U{constructor(e){super(),R(this,e,ke,ve,l,{})}}function Ce(n){let t;return{c(){(t=m("blockquote")).innerHTML="<p><em>MDSv is really cool!</em></p>"},m(e,n){u(e,t,n)},p:e,i:e,o:e,d(e){e&&h(t)}}}class Me extends U{constructor(e){super(),R(this,e,null,Ce,l,{})}}function Le(e,n,t){const s=Object.create(e);return s.item=n[t],s}function He(e){let n,t,s,a=e.item+"";return{c(){n=m("ul"),t=m("li"),s=g(a)},m(e,a){u(e,n,a),d(n,t),d(t,s)},p(e,n){e.items&&a!==(a=n.item+"")&&w(s,a)},d(e){e&&h(n)}}}function Se(e){let n,t,s,o,l,c,r,i,p,g,y,j,w,x,$,v,k,T,C,M,L,H,S,_,B,I,P,E,A,q,O,R,U,W,F,K,J,Z,Q,V,X=e.items,ee=[];for(let n=0;n<X.length;n+=1)ee[n]=He(Le(e,X,n));const ne=new Te({}),te=new Me({});return{c(){(n=m("h1")).textContent="What is MDSv",t=f(),(s=m("p")).textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",o=f(),(l=m("p")).innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',c=f(),(r=m("p")).textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=f(),(p=m("p")).textContent="This document also wrote in MDSv format, so we can do this right inside the document...",g=f(),(y=m("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">&#39;item0&#39;</span>,<span class="hljs-string">&#39;item1&#39;</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{ items = [...items,<span class="hljs-string">&#39;item&#39;</span>+items.length] }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>{ items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n{#each item as item}\n* {item}\n{/each}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{add}</span>&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{del}</span>&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code>',j=f(),(w=m("p")).textContent="... and get the result:",x=f();for(let e=0;e<ee.length;e+=1)ee[e].c();$=f(),(v=m("button")).textContent="Add Item",k=f(),(T=m("button")).textContent="Del Item",C=f(),(M=m("p")).textContent="Or we can import any Svelte component and use it where we want:",L=f(),(H=m("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from &#39;./Counter.svelte&#39;;</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span></code>',S=f(),(_=m("p")).textContent="... and it will work:",B=f(),I=m("p"),(P=m("em")).textContent="The counter:",E=f(),N(ne.$$.fragment),A=f(),(q=m("p")).innerHTML="You even can import other <code>*.md</code> files:",O=f(),(R=m("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from &#39;./spoiler.md&#39;;</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code>',U=f(),(W=m("p")).textContent="... and it will be included in the specified place:",F=f(),K=m("p"),(J=m("strong")).textContent="Spoiler:",Z=f(),N(te.$$.fragment),V=[b(v,"click",e.add),b(T,"click",e.del)]},m(e,a){u(e,n,a),u(e,t,a),u(e,s,a),u(e,o,a),u(e,l,a),u(e,c,a),u(e,r,a),u(e,i,a),u(e,p,a),u(e,g,a),u(e,y,a),u(e,j,a),u(e,w,a),u(e,x,a);for(let n=0;n<ee.length;n+=1)ee[n].m(e,a);u(e,$,a),u(e,v,a),u(e,k,a),u(e,T,a),u(e,C,a),u(e,M,a),u(e,L,a),u(e,H,a),u(e,S,a),u(e,_,a),u(e,B,a),u(e,I,a),d(I,P),d(I,E),Y(ne,I,null),u(e,A,a),u(e,q,a),u(e,O,a),u(e,R,a),u(e,U,a),u(e,W,a),u(e,F,a),u(e,K,a),d(K,J),d(K,Z),Y(te,K,null),Q=!0},p(e,n){if(e.items){let t;for(X=n.items,t=0;t<X.length;t+=1){const s=Le(n,X,t);ee[t]?ee[t].p(e,s):(ee[t]=He(s),ee[t].c(),ee[t].m($.parentNode,$))}for(;t<ee.length;t+=1)ee[t].d(1);ee.length=X.length}},i(e){Q||(G(ne.$$.fragment,e),G(te.$$.fragment,e),Q=!0)},o(e){D(ne.$$.fragment,e),D(te.$$.fragment,e),Q=!1},d(e){e&&h(n),e&&h(t),e&&h(s),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(g),e&&h(y),e&&h(j),e&&h(w),e&&h(x),function(e,n){for(let t=0;t<e.length;t+=1)e[t]&&e[t].d(n)}(ee,e),e&&h($),e&&h(v),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(I),z(ne),e&&h(A),e&&h(q),e&&h(O),e&&h(R),e&&h(U),e&&h(W),e&&h(F),e&&h(K),z(te),a(V)}}}function _e(e,n,t){let s=["item0","item1"];return{items:s,add:function(){t("items",s=[...s,"item"+s.length])},del:function(){t("items",s=s.slice(0,-1))}}}function Be(n){let t,s,a,o,l,c,r;return{c(){(t=m("h1")).textContent="Routing",s=f(),(a=m("p")).innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/pages</code> directory:",o=f(),(l=m("pre")).innerHTML='<code class="language-bash">\nsrc                     <span class="hljs-comment">#  URL path part:</span>\n└── pages               <span class="hljs-comment">#</span>\n    ├── components      <span class="hljs-comment">#</span>\n    │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    ├── install.md      <span class="hljs-comment">#  install</span>\n    └── index.md         <span class="hljs-comment">#  / </span></code>',c=f(),(r=m("p")).innerHTML="You can make links anywhere in your docs with URL part based on file hierarchy. For example, if you want to link to the <code>src/pages/components/button.md</code> you should use this href attribute for the <code>a</code> element - <code>components/button</code>. Or in markdown - <code>[Button](component/button)</code>."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r)}}}function Ie(n){let t,s,a,o,l,c,r,i,p,d,g;return{c(){(t=m("h1")).textContent="Pages configuration",s=f(),(a=m("p")).textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=f(),(l=m("h3")).textContent="fullscreen",c=f(),(r=m("p")).innerHTML="By default all pages has a layout with left sidebar. But if you set the <code>fullscreen</code> option this way:",i=f(),(p=m("pre")).innerHTML='<code class="language-markdown">\n---\n<span class="hljs-section">fullscreen: true\n---</span>\n... </code>',d=f(),(g=m("p")).textContent="... page will render without sidebar."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g)}}}function Pe(n){let t,s,a,o,l,c,r,i,p,d,g;return{c(){(t=m("h1")).textContent="Static files",s=f(),(a=m("p")).innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/pages/static</code> directory.",o=f(),(l=m("p")).innerHTML="For example, if you placed image in the <code>src/pages/static/great-success.png</code> then you can include it by following code:",c=f(),(r=m("pre")).innerHTML='<code class="language-markdown">\n![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code>',i=f(),(p=m("p")).textContent="... and get image on your page:",d=f(),(g=m("p")).innerHTML='<img src="static/great-success.png" alt="Great Success">;'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,g,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(g)}}}function Ee(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=m("h1")).textContent="Structure",s=f(),(a=m("p")).textContent="Let's see the structure of the doc's project directory:",o=f(),(l=m("pre")).innerHTML='<code class="language-bash">\nsrc\n├── includes\n├── pages\n├── static\n└── theme   \n...\nsvelte-docs.config.js</code>',c=f(),(r=m("p")).innerHTML="It is very simple, sources of you documentation are live in <code>src</code> directory:",i=f(),(p=m("ul")).innerHTML="<li><strong>includes</strong> - there are small pieces of the MDSv code that can be reusable within any document page</li> \n<li><strong>pages</strong> - all pages of your documentation are stored in this directory</li> \n<li><strong>static</strong> - place here any static assets using in your documentation (files, images, icons and etc.)</li> \n<li><strong>theme</strong> - it is CSS and svelte files of the current theme which might be changed for appearance tunning</li>"},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p)}}}function Ae(n){let t,s,a;return{c(){(t=m("h1")).textContent="Page not found!",s=f(),(a=m("p")).innerHTML='<a href="/">Go to start page</a>',j(t,"class","svelte-aiue6m"),j(a,"class","svelte-aiue6m")},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a)}}}class qe extends U{constructor(e){super(),R(this,e,null,Ae,l,{})}}function Ge(n){let t;const s=new qe({});return{c(){N(s.$$.fragment)},m(e,n){Y(s,e,n),t=!0},p:e,i(e){t||(G(s.$$.fragment,e),t=!0)},o(e){D(s.$$.fragment,e),t=!1},d(e){z(s,e)}}}class De extends U{constructor(e){super(),R(this,e,null,Ge,l,{})}}const Ne=[];function Ye(n,t=e){let s;const a=[];function o(e){if(l(n,e)&&(n=e,s)){const e=!Ne.length;for(let e=0;e<a.length;e+=1){const t=a[e];t[1](),Ne.push(t,n)}if(e){for(let e=0;e<Ne.length;e+=2)Ne[e][0](Ne[e+1]);Ne.length=0}}}return{set:o,update:function(e){o(e(n))},subscribe:function(l,c=e){const r=[l,c];return a.push(r),1===a.length&&(s=t(o)||e),l(n),()=>{const e=a.indexOf(r);-1!==e&&a.splice(e,1),0===a.length&&(s(),s=null)}}}}const ze=Ye(function(){let e=location.pathname;return e=function(e){const n=Ue();return e.startsWith(n)&&(e=e.slice(n.length)),e.startsWith("/")&&(e=e.slice(1)),e.endsWith("/")&&(e=e.slice(0,-1)),e}(e)}());function Oe(e){history.pushState({},"",""===e?Ue():e),ze.set(e)}function Re(e){const n=e.target.closest("a");if(!n)return;const t=n.getAttribute("href");if(t){if(!/^\w+:\/\//.test(t))return e.preventDefault(),/^\/$/.test(t)?Oe(""):Oe(t);n.setAttribute("target","_blank")}}function Ue(){let e=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===e?"/":e}const We=[{url:"",component:K,meta:F},{url:"builtins/example",component:class extends U{constructor(e){super(),R(this,e,null,pe,l,{})}},meta:{}},{url:"builtins/properties",component:class extends U{constructor(e){super(),R(this,e,null,de,l,{})}},meta:{}},{url:"config/basepath",component:class extends U{constructor(e){super(),R(this,e,null,ue,l,{})}},meta:{}},{url:"config/file",component:class extends U{constructor(e){super(),R(this,e,null,he,l,{})}},meta:{}},{url:"config/inccss",component:class extends U{constructor(e){super(),R(this,e,null,me,l,{})}},meta:{}},{url:"config/incpkg",component:class extends U{constructor(e){super(),R(this,e,null,ge,l,{})}},meta:{}},{url:"config/pathes",component:class extends U{constructor(e){super(),R(this,e,null,fe,l,{})}},meta:{}},{url:"config/preprocess",component:class extends U{constructor(e){super(),R(this,e,null,ye,l,{})}},meta:{}},{url:"getting-started",component:class extends U{constructor(e){super(),R(this,e,null,be,l,{})}},meta:{}},{url:"index",component:K,meta:F},{url:"introduction",component:class extends U{constructor(e){super(),R(this,e,null,je,l,{})}},meta:{}},{url:"publishing/ghpages",component:class extends U{constructor(e){super(),R(this,e,null,we,l,{})}},meta:{}},{url:"theming",component:class extends U{constructor(e){super(),R(this,e,null,xe,l,{})}},meta:{}},{url:"writing/includes",component:class extends U{constructor(e){super(),R(this,e,null,$e,l,{})}},meta:{}},{url:"writing/mdsv",component:class extends U{constructor(e){super(),R(this,e,_e,Se,l,{})}},meta:{}},{url:"writing/routing",component:class extends U{constructor(e){super(),R(this,e,null,Be,l,{})}},meta:{}},{url:"writing/settings",component:class extends U{constructor(e){super(),R(this,e,null,Ie,l,{})}},meta:{}},{url:"writing/static",component:class extends U{constructor(e){super(),R(this,e,null,Pe,l,{})}},meta:{}},{url:"writing/structure",component:class extends U{constructor(e){super(),R(this,e,null,Ee,l,{})}},meta:{}}],Fe=function(n,t,s){const l=!Array.isArray(n),c=l?[n]:n,r=t.length<2;return{subscribe:Ye(s,n=>{let s=!1;const i=[];let p=0,d=e;const u=()=>{if(p)return;d();const s=t(l?i[0]:i,n);r?n(s):d=o(s)?s:e},h=c.map((e,n)=>e.subscribe(e=>{i[n]=e,p&=~(1<<n),s&&u()},()=>{p|=1<<n}));return s=!0,u(),function(){a(h),d()}}).subscribe}}(ze,e=>{const n=We.filter(n=>n.url===e);return n.length>0?n[0]:{url:"404",component:De,meta:{fullscreen:!0}}});function Ke(e){let n;return{c(){(n=m("h1")).innerHTML='<a href="/"><img src="static/logo.svg" alt="LOGO" class="svelte-1m9fc3n"></a>'},m(e,t){u(e,n,t)},d(e){e&&h(n)}}}function Je(n){let t,s=""!==n.$current_page.url&&Ke();return{c(){s&&s.c(),t=y()},m(e,n){s&&s.m(e,n),u(e,t,n)},p(e,n){""!==n.$current_page.url?s||((s=Ke()).c(),s.m(t.parentNode,t)):s&&(s.d(1),s=null)},i:e,o:e,d(e){s&&s.d(e),e&&h(t)}}}function Ze(e,n,t){let s;return c(e,Fe,e=>t("$current_page",s=e)),{$current_page:s}}class Qe extends U{constructor(e){super(),R(this,e,Ze,Je,l,{})}}function Ve(n){let t;return{c(){(t=m("ul")).innerHTML='<li><a href="getting-started">Docs</a></li> \n<li><a href="https://github.com/alexxnb/svelte-docs">Github</a></li>'},m(e,n){u(e,t,n)},p:e,i:e,o:e,d(e){e&&h(t)}}}class Xe extends U{constructor(e){super(),R(this,e,null,Ve,l,{})}}function en(n){let t,s,a,o;const l=new Qe({}),c=new Xe({});return{c(){t=m("section"),N(l.$$.fragment),s=f(),a=m("section"),N(c.$$.fragment)},m(e,n){u(e,t,n),Y(l,t,null),u(e,s,n),u(e,a,n),Y(c,a,null),o=!0},p:e,i(e){o||(G(l.$$.fragment,e),G(c.$$.fragment,e),o=!0)},o(e){D(l.$$.fragment,e),D(c.$$.fragment,e),o=!1},d(e){e&&h(t),z(l),e&&h(s),e&&h(a),z(c)}}}class nn extends U{constructor(e){super(),R(this,e,null,en,l,{})}}function tn(n){let t;return{c(){(t=m("ul")).innerHTML='<li><a href="introduction">Introduction</a></li> \n<li><a href="getting-started">Getting Started</a></li> \n<li>Writing docs<ul><li><a href="writing/mdsv">What is MDSv</a></li> \n<li><a href="writing/structure">Structure</a></li> \n<li><a href="writing/includes">Includes</a></li> \n<li><a href="writing/routing">Routing</a></li> \n<li><a href="writing/static">Static files</a></li> \n<li><a href="writing/settings">Page settings</a></li></ul></li> \n<li><a href="config/file">Configuration</a><ul><li><a href="config/basepath">basepath</a></li> \n<li><a href="config/pathes">pathes</a></li> \n<li><a href="config/incpkg">incPKG</a></li> \n<li><a href="config/inccss">incCSS</a></li> \n<li><a href="config/preprocess">preprocess</a></li></ul></li> \n<li>Builtins<ul><li><a href="builtins/example">Example</a></li> \n<li><a href="builtins/properties">Properties</a></li></ul></li> \n<li><a href="theming">Theming</a></li> \n<li>Publishing<ul><li><a href="publishing/ghpages">GitHub Pages</a></li></ul></li>'},m(e,n){u(e,t,n)},p:e,i:e,o:e,d(e){e&&h(t)}}}class sn extends U{constructor(e){super(),R(this,e,null,tn,l,{})}}function an(n){let t;const s=new sn({});return{c(){N(s.$$.fragment)},m(e,n){Y(s,e,n),t=!0},p:e,i(e){t||(G(s.$$.fragment,e),t=!0)},o(e){D(s.$$.fragment,e),t=!1},d(e){z(s,e)}}}class on extends U{constructor(e){super(),R(this,e,null,an,l,{})}}function ln(e){let n,t;var s=e.$current_page.component;if(s)var a=new s({});return{c(){n=m("article"),a&&N(a.$$.fragment)},m(e,s){u(e,n,s),a&&Y(a,n,null),t=!0},p(e,t){if(s!==(s=t.$current_page.component)){if(a){A();const e=a;D(e.$$.fragment,1,0,()=>{z(e,1)}),q()}s?(N((a=new s({})).$$.fragment),G(a.$$.fragment,1),Y(a,n,null)):a=null}},i(e){t||(a&&G(a.$$.fragment,e),t=!0)},o(e){a&&D(a.$$.fragment,e),t=!1},d(e){e&&h(n),a&&z(a)}}}function cn(e,n,t){let s;return c(e,Fe,e=>t("$current_page",s=e)),Fe.subscribe(()=>{window.scrollTo(0,0)}),{$current_page:s}}class rn extends U{constructor(e){super(),R(this,e,cn,ln,l,{})}}function pn(e){let n,t,s,a,l,c,r;const i=new on({}),p=new rn({});return{c(){n=m("span"),t=f(),s=m("nav"),N(i.$$.fragment),l=f(),c=m("main"),N(p.$$.fragment),j(n,"class","showSidebar"),j(n,"tabindex","0")},m(e,o){u(e,n,o),u(e,t,o),u(e,s,o),Y(i,s,null),a=function(e){return{destroy:Fe.subscribe(n=>{e.querySelectorAll("a").forEach(e=>{e.getAttribute("href")===n.url?e.classList.add("active"):e.classList.remove("active")})})}}.call(null,s)||{},u(e,l,o),u(e,c,o),Y(p,c,null),r=!0},i(e){r||(G(i.$$.fragment,e),G(p.$$.fragment,e),r=!0)},o(e){D(i.$$.fragment,e),D(p.$$.fragment,e),r=!1},d(e){e&&h(n),e&&h(t),e&&h(s),z(i),a&&o(a.destroy)&&a.destroy(),e&&h(l),e&&h(c),z(p)}}}function dn(e){let n,t;const s=new rn({});return{c(){n=m("main"),N(s.$$.fragment),j(n,"class","fullscreen")},m(e,a){u(e,n,a),Y(s,n,null),t=!0},i(e){t||(G(s.$$.fragment,e),t=!0)},o(e){D(s.$$.fragment,e),t=!1},d(e){e&&h(n),z(s)}}}function un(e){let n,t,s,a,o,l;const c=new nn({}),r=[dn,pn],i=[];function p(e,n){return n.$current_page.meta.fullscreen?0:1}return s=p(0,e),a=i[s]=r[s](e),{c(){n=m("header"),N(c.$$.fragment),t=f(),a.c(),o=y()},m(e,a){u(e,n,a),Y(c,n,null),u(e,t,a),i[s].m(e,a),u(e,o,a),l=!0},p(e,n){let t=s;(s=p(0,n))!==t&&(A(),D(i[t],1,1,()=>{i[t]=null}),q(),(a=i[s])||(a=i[s]=r[s](n)).c(),G(a,1),a.m(o.parentNode,o))},i(e){l||(G(c.$$.fragment,e),G(a),l=!0)},o(e){D(c.$$.fragment,e),D(a),l=!1},d(e){e&&h(n),z(c),e&&h(t),i[s].d(e),e&&h(o)}}}function hn(e,n,t){let s;return c(e,Fe,e=>t("$current_page",s=e)),{$current_page:s}}class mn extends U{constructor(e){super(),R(this,e,hn,un,l,{})}}function gn(n){let t;const s=new mn({});return{c(){N(s.$$.fragment)},m(e,n){Y(s,e,n),t=!0},p:e,i(e){t||(G(s.$$.fragment,e),t=!0)},o(e){D(s.$$.fragment,e),t=!1},d(e){z(s,e)}}}function fn(e){return k(()=>(addEventListener("click",Re),function(){removeEventListener("click",Re)})),{}}return new class extends U{constructor(e){super(),R(this,e,fn,gn,l,{})}}({target:document.body,props:{}})}();
