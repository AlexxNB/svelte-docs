var app=function(){"use strict";function e(){}function n(e,n){for(const t in n)e[t]=n[t];return e}function t(e){return e()}function s(){return Object.create(null)}function a(e){e.forEach(t)}function o(e){return"function"==typeof e}function l(e,n){return e!=e?n==n:e!==n||e&&"object"==typeof e||"function"==typeof e}function c(e,n,t){e.$$.on_destroy.push(function(e,n){const t=e.subscribe(n);return t.unsubscribe?()=>t.unsubscribe():t}(n,t))}function r(e,n,t){if(e){const s=i(e,n,t);return e[0](s)}}function i(e,t,s){return e[1]?n({},n(t.$$scope.ctx,e[1](s?s(t):{}))):t.$$scope.ctx}function p(e,t,s,a){return e[1]?n({},n(t.$$scope.changed||{},e[1](a?a(s):{}))):t.$$scope.changed||{}}function d(e,n){e.appendChild(n)}function u(e,n,t){e.insertBefore(n,t||null)}function h(e){e.parentNode.removeChild(e)}function m(e,n){for(let t=0;t<e.length;t+=1)e[t]&&e[t].d(n)}function g(e){return document.createElement(e)}function f(e){return document.createTextNode(e)}function b(){return f(" ")}function y(){return f("")}function j(e,n,t,s){return e.addEventListener(n,t,s),()=>e.removeEventListener(n,t,s)}function w(e,n,t){null==t?e.removeAttribute(n):e.getAttribute(n)!==t&&e.setAttribute(n,t)}function x(e,n){n=""+n,e.data!==n&&(e.data=n)}function v(e,n,t,s){e.style.setProperty(n,t,s?"important":"")}function $(e,n,t){e.classList[t?"add":"remove"](n)}let k;function T(e){k=e}function C(e){(function(){if(!k)throw new Error("Function called outside component initialization");return k})().$$.on_mount.push(e)}const M=[],L=[],H=[],S=[],_=Promise.resolve();let B=!1;function P(e){H.push(e)}function E(){const e=new Set;do{for(;M.length;){const e=M.shift();T(e),I(e.$$)}for(;L.length;)L.pop()();for(let n=0;n<H.length;n+=1){const t=H[n];e.has(t)||(t(),e.add(t))}H.length=0}while(M.length);for(;S.length;)S.pop()();B=!1}function I(e){null!==e.fragment&&(e.update(e.dirty),a(e.before_update),e.fragment&&e.fragment.p(e.dirty,e.ctx),e.dirty=null,e.after_update.forEach(P))}const A=new Set;let q;function G(){q={r:0,c:[],p:q}}function D(){q.r||a(q.c),q=q.p}function N(e,n){e&&e.i&&(A.delete(e),e.i(n))}function z(e,n,t,s){if(e&&e.o){if(A.has(e))return;A.add(e),q.c.push(()=>{A.delete(e),s&&(t&&e.d(1),s())}),e.o(n)}}function Y(e){e&&e.c()}function O(e,n,s){const{fragment:l,on_mount:c,on_destroy:r,after_update:i}=e.$$;l&&l.m(n,s),P(()=>{const n=c.map(t).filter(o);r?r.push(...n):a(n),e.$$.on_mount=[]}),i.forEach(P)}function R(e,n){const t=e.$$;null!==t.fragment&&(a(t.on_destroy),t.fragment&&t.fragment.d(n),t.on_destroy=t.fragment=null,t.ctx={})}function W(e,n){e.$$.dirty||(M.push(e),B||(B=!0,_.then(E)),e.$$.dirty=s()),e.$$.dirty[n]=!0}function U(n,t,o,l,c,r){const i=k;T(n);const p=t.props||{},d=n.$$={fragment:null,ctx:null,props:r,update:e,not_equal:c,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:s(),dirty:null};let u=!1;var h;d.ctx=o?o(n,p,(e,t,s=t)=>(d.ctx&&c(d.ctx[e],d.ctx[e]=s)&&(d.bound[e]&&d.bound[e](s),u&&W(n,e)),t)):p,d.update(),u=!0,a(d.before_update),d.fragment=!!l&&l(d.ctx),t.target&&(t.hydrate?d.fragment&&d.fragment.l((h=t.target,Array.from(h.childNodes))):d.fragment&&d.fragment.c(),t.intro&&N(n.$$.fragment),O(n,t.target,t.anchor),E()),T(i)}class F{$destroy(){R(this,1),this.$destroy=e}$on(e,n){const t=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return t.push(n),()=>{const e=t.indexOf(n);-1!==e&&t.splice(e,1)}}$set(){}}function K(n){let t;return{c(){(t=g("div")).innerHTML='<div class="banner svelte-19i87y2"><p class="svelte-19i87y2"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-19i87y2"></p> \n<p class="svelte-19i87y2">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-19i87y2"><a href="introduction" class="svelte-19i87y2">Introduction</a> \n<a href="start" class="svelte-19i87y2">Getting Started</a></div>',w(t,"class","hero svelte-19i87y2")},m(e,n){u(e,t,n)},p:e,i:e,o:e,d(e){e&&h(t)}}}const J=()=>({}),Z=()=>({}),Q=()=>({}),V=()=>({});function X(e){let n,t,s,a,o;const l=e.$$slots.result,c=r(l,e,V),m=e.$$slots.code,f=r(m,e,Z);return{c(){n=g("div"),t=g("div"),c&&c.c(),s=b(),a=g("div"),f&&f.c(),w(t,"class","result"),w(a,"class","code"),w(n,"class","example")},m(e,l){u(e,n,l),d(n,t),c&&c.m(t,null),d(n,s),d(n,a),f&&f.m(a,null),o=!0},p(e,n){c&&c.p&&e.$$scope&&c.p(p(l,n,e,Q),i(l,n,V)),f&&f.p&&e.$$scope&&f.p(p(m,n,e,J),i(m,n,Z))},i(e){o||(N(c,e),N(f,e),o=!0)},o(e){z(c,e),z(f,e),o=!1},d(e){e&&h(n),c&&c.d(e),f&&f.d(e)}}}function ee(e,n,t){let{$$slots:s={},$$scope:a}=n;return e.$set=(e=>{"$$scope"in e&&t("$$scope",a=e.$$scope)}),{$$slots:s,$$scope:a}}class ne extends F{constructor(e){super(),U(this,e,ee,X,l,{})}}var te="/svelte-docs/";function se(e){let n,t;return{c(){w(n=g("iframe"),"slot","result"),v(n,"height",e.iframe_height+"px"),w(n,"title","Result"),w(n,"scrolling","no"),w(n,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),w(n,"srcdoc",e.srcdoc),w(n,"class","svelte-y9biys"),t=j(n,"load",e.sendMessage)},m(t,s){u(t,n,s),e.iframe_1_binding(n)},p(e,t){e.iframe_height&&v(n,"height",t.iframe_height+"px")},d(s){s&&h(n),e.iframe_1_binding(null),t()}}}function ae(e){let n,t,s=e.code.trim()+"";return{c(){n=g("pre"),t=g("code"),w(n,"slot","code"),w(n,"class","hljs svelte-y9biys")},m(e,a){u(e,n,a),d(n,t),t.innerHTML=s},p(e,n){e.code&&s!==(s=n.code.trim()+"")&&(t.innerHTML=s)},d(e){e&&h(n)}}}function oe(n){let t;return{c(){t=b()},m(e,n){u(e,t,n)},p:e,d(e){e&&h(t)}}}function le(e){let n;const t=new ne({props:{$$slots:{default:[oe],code:[ae],result:[se]},$$scope:{ctx:e}}});return{c(){Y(t.$$.fragment)},m(e,s){O(t,e,s),n=!0},p(e,n){const s={};(e.$$scope||e.code||e.iframe_height||e.iframe)&&(s.$$scope={changed:e,ctx:n}),t.$set(s)},i(e){n||(N(t.$$.fragment,e),n=!0)},o(e){z(t.$$.fragment,e),n=!1},d(e){R(t,e)}}}let ce=1;function re(e,n,t){let s,{name:a}=n,{code:o}=n,l=ce++,c=70;const r=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${te}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",function(e){e.data.iframe_id&&e.data.iframe_id===l&&e.data.hasOwnProperty("HEIGHT")&&t("iframe_height",c=e.data.HEIGHT)}),e.$set=(e=>{"name"in e&&t("name",a=e.name),"code"in e&&t("code",o=e.code)}),{name:a,code:o,iframe:s,iframe_height:c,srcdoc:r,sendMessage:function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},iframe_1_binding:function(e){L[e?"unshift":"push"](()=>{t("iframe",s=e)})}}}class ie extends F{constructor(e){super(),U(this,e,re,le,l,{name:0,code:0})}}function pe(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,w,x,v,$,k,T,C,M,L,H,S,_,B,P,E,I,A,q,G,D,W;const U=new ie({props:{name:"Ex_0_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">&nbsp;\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>'}}),F=new ie({props:{name:"Ex_1_df769f2dd1c95be1e32ee728c8e52330",code:'\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n'}}),K=new ie({props:{name:"Ex_2_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),J=new ie({props:{name:"Ex_3_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),Z=new ie({props:{name:"Ex_4_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span>'}});return{c(){(t=g("h1")).textContent="Example code block",s=b(),(a=g("p")).innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=b(),(l=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=&#39;Button&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',c=b(),Y(U.$$.fragment),r=b(),(i=g("h3")).textContent="Hide script and/or style blocks",p=b(),(d=g("p")).innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",m=b(),(f=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=&#39;Button&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',y=b(),Y(F.$$.fragment),j=b(),(w=g("h3")).textContent="Import in examples",x=b(),(v=g("p")).innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",$=b(),Y(K.$$.fragment),k=b(),(T=g("p")).textContent="Also you can import any local file by relative path according documents directory root:",C=b(),Y(J.$$.fragment),M=b(),(L=g("p")).innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',H=b(),(S=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:{\n    <span class="hljs-string">&#39;./Button.svelte&#39;</span>: <span class="hljs-string">&#39;./../mylib/Button.svelte&#39;</span>,\n    <span class="hljs-string">&#39;my-button-package&#39;</span>: <span class="hljs-string">&#39;./../mylib/Button.svelte&#39;</span>\n},\n...</code>',_=b(),Y(Z.$$.fragment),B=b(),(P=g("h3")).textContent="Styling",E=b(),(I=g("p")).innerHTML="Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",A=b(),(q=g("p")).innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',G=b(),(D=g("p")).innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),O(U,e,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),O(F,e,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,v,n),u(e,$,n),O(K,e,n),u(e,k,n),u(e,T,n),u(e,C,n),O(J,e,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),O(Z,e,n),u(e,B,n),u(e,P,n),u(e,E,n),u(e,I,n),u(e,A,n),u(e,q,n),u(e,G,n),u(e,D,n),W=!0},p:e,i(e){W||(N(U.$$.fragment,e),N(F.$$.fragment,e),N(K.$$.fragment,e),N(J.$$.fragment,e),N(Z.$$.fragment,e),W=!0)},o(e){z(U.$$.fragment,e),z(F.$$.fragment,e),z(K.$$.fragment,e),z(J.$$.fragment,e),z(Z.$$.fragment,e),W=!1},d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),R(U,e),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),R(F,e),e&&h(j),e&&h(w),e&&h(x),e&&h(v),e&&h($),R(K,e),e&&h(k),e&&h(T),e&&h(C),R(J,e),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),R(Z,e),e&&h(B),e&&h(P),e&&h(E),e&&h(I),e&&h(A),e&&h(q),e&&h(G),e&&h(D)}}}function de(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,x,v,$,k,T,C,M,L,H,S,_,B,P,E,I,A,q,G,D,N,z,Y,O,R,W;return{c(){(t=g("h1")).textContent="Properties",s=b(),(a=g("p")).textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=b(),(l=g("p")).innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",c=b(),(r=g("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#39;text&#39;</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',i=b(),(p=g("p")).textContent="There are four properties:",d=b(),(m=g("ol")).innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",f=b(),(y=g("p")).textContent="So lets create fancy table of properties for this component:",j=b(),(x=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | &#39;text&#39;,&#39;number&#39;,&#39;range&#39;,&#39;date&#39;(&#39;text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code>',v=b(),($=g("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',k=b(),(T=g("p")).textContent="Now user of your component will know all about its properties.",C=b(),(M=g("h3")).textContent="Describing property",L=b(),(H=g("ul")).innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",S=b(),(_=g("h3")).textContent="Autogenerated properties",B=b(),(P=g("p")).innerHTML="Another way to describre properties, retrieve it right from the Svelte component. But you should add special comment lines above each property. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:",E=b(),(I=g("pre")).innerHTML='<code class="language-html">\n// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-comment">/* Name of the input | string */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/* Type of the input | &#39;text&#39;,&#39;number&#39;,&#39;range&#39;,&#39;date&#39; */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#39;text&#39;</span>;\n    <span class="hljs-comment">/* Should the input be disabled | bool */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/* Size of the input | number/string */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',A=b(),(q=g("p")).textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",G=b(),(D=g("p")).textContent="Then just place a path to the this component inside Properties code block:",N=b(),(z=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code>',Y=b(),(O=g("p")).textContent="And get the result:",R=b(),(W=g("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',w($,"class","properties"),w(W,"class","properties")},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,x,n),u(e,v,n),u(e,$,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),u(e,B,n),u(e,P,n),u(e,E,n),u(e,I,n),u(e,A,n),u(e,q,n),u(e,G,n),u(e,D,n),u(e,N,n),u(e,z,n),u(e,Y,n),u(e,O,n),u(e,R,n),u(e,W,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(x),e&&h(v),e&&h($),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(P),e&&h(E),e&&h(I),e&&h(A),e&&h(q),e&&h(G),e&&h(D),e&&h(N),e&&h(z),e&&h(Y),e&&h(O),e&&h(R),e&&h(W)}}}function ue(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=g("h1")).textContent="Basepath option",s=b(),(a=g("p")).innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=b(),(l=g("p")).innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',c=b(),(r=g("p")).innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=b(),(p=g("blockquote")).innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>"},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p)}}}function he(n){let t,s,a;return{c(){(t=g("h1")).textContent="Configuration",s=b(),(a=g("p")).innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a)}}}function me(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,w;return{c(){(t=g("h1")).textContent="incCSS option",s=b(),(a=g("p")).textContent="If you want to use global CSS styles for result in the Example code block. You can easy include them with this option.",o=b(),(l=g("p")).textContent="Suppose you have following structure of your project:",c=b(),(r=g("pre")).innerHTML='<code class="language-javascript">\nmy-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   ├── counter.css\n│   └── Counter.svelte\n└── ...</code>',i=b(),(p=g("p")).innerHTML="Add <em>global css</em> using <code>incCSS</code> option:",d=b(),(m=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">&#39;./../mycomponent/counter.css&#39;</span>,\n    ...\n]</code>',f=b(),(y=g("p")).textContent="Same way you can import any CSS from NPM packages(don't forget to install it before):",j=b(),(w=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">&#39;node_modules/thebestcssframework/styles.min.css&#39;</span>,\n    ...\n]</code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,w,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(w)}}}function ge(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,w,x,v,$,k,T,C;return{c(){(t=g("h1")).textContent="incPKG option",s=b(),(a=g("p")).innerHTML="If you want use your local components in Examples code block you should link it with vitrual package name in <code>incPKG</code> option.",o=b(),(l=g("p")).textContent="Suppose you have following structure of your project:",c=b(),(r=g("pre")).innerHTML='<code class="language-javascript">\nmy-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code>',i=b(),(p=g("p")).innerHTML="And want to import <code>mycomponents/Counter.svelte</code> in your Example code block, you may use relative path(from the docs root) like this:",d=b(),(m=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from &#39;./../mycomponent/Counter.svelte&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>',f=b(),(y=g("p")).textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",j=b(),(w=g("p")).innerHTML="So you can add <em>virtual package</em> using <code>incPKG</code> option:",x=b(),(v=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incPKG</span>:{\n    ...\n    <span class="hljs-string">&quot;my-counter-package&quot;</span>: <span class="hljs-string">&quot;./../mycomponent/Counter.svelte&quot;</span>,\n    ...\n}</code>',$=b(),(k=g("p")).innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",T=b(),(C=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from &#39;my-counter-package&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,v,n),u(e,$,n),u(e,k,n),u(e,T,n),u(e,C,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(w),e&&h(x),e&&h(v),e&&h($),e&&h(k),e&&h(T),e&&h(C)}}}function fe(n){let t,s,a,o,l,c,r;return{c(){(t=g("h1")).textContent="Pathes option",s=b(),(a=g("p")).textContent="There are two pathes you can change.",o=b(),(l=g("ul")).innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",c=b(),(r=g("blockquote")).innerHTML="<p>In most cases you don&#39;t need to change these options.</p>"},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r)}}}function be(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=g("h1")).textContent="Preprocess option",s=b(),(a=g("p")).innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=b(),(l=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;svelte-preprocess-markdown&#39;</span>);\n\n<span class="hljs-built_in">module</span>.exports={\n    ...\n    preprocess: [\n        ...\n        markdown({<span class="hljs-attr">filetype</span>: <span class="hljs-string">&#39;svelte&#39;</span>}),\n        ...\n    ]\n    ...\n}</code>',c=b(),(r=g("p")).textContent="Then all your examples will be preprocessed:",i=b(),(p=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = &#39;World&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, {name}!</span>\n<span class="hljs-code">    ```</span></code>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p)}}}function ye(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,x,v,$,k,T,C,M,L,H,S,_,B,P,E,I,A,q;const G=new ie({props:{name:"Ex_0_d0ad4e039bf9af907c3185fb646ae3ca",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>'}});return{c(){(t=g("h1")).textContent="Introdcing",s=b(),(a=g("h2")).textContent="Features",o=b(),(l=g("p")).innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',c=b(),(r=g("blockquote")).innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',i=b(),(p=g("ul")).innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',d=b(),(m=g("h2")).textContent="Zero-config",f=b(),(y=g("p")).textContent="Just run:",j=b(),(x=g("pre")).innerHTML='<code class="language-bash">\nnpm init svelte-docs</code>',v=b(),($=g("p")).innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',k=b(),(T=g("h2")).textContent="Builtins",C=b(),(M=g("h3")).textContent="Examples",L=b(),(H=g("p")).textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",S=b(),Y(G.$$.fragment),_=b(),(B=g("h3")).textContent="Properties",P=b(),(E=g("p")).innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component&#39;s <code>*.svelte</code> file.",I=b(),(A=g("dl")).innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",w(A,"class","properties")},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,x,n),u(e,v,n),u(e,$,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),O(G,e,n),u(e,_,n),u(e,B,n),u(e,P,n),u(e,E,n),u(e,I,n),u(e,A,n),q=!0},p:e,i(e){q||(N(G.$$.fragment,e),q=!0)},o(e){z(G.$$.fragment,e),q=!1},d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(x),e&&h(v),e&&h($),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),R(G,e),e&&h(_),e&&h(B),e&&h(P),e&&h(E),e&&h(I),e&&h(A)}}}function je(n){let t,s,a,o,l,c,r,i,p,d,m,f,y;return{c(){(t=g("h1")).textContent="Publishing on Github Pages",s=b(),(a=g("p")).innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=b(),(l=g("p")).textContent="To do it just run command in you documents source directory at any time:",c=b(),(r=g("pre")).innerHTML='<code class="language-bash">\nnpm run deploy</code>',i=b(),(p=g("p")).textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=b(),(m=g("blockquote")).innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",f=b(),(y=g("blockquote")).innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y)}}}function we(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,w,x,v,$,k,T,C,M,L,H,S,_,B,P,E,I,A;return{c(){(t=g("h1")).textContent="Getting started",s=b(),(a=g("h3")).textContent="Initialize Svelte-docs",o=b(),(l=g("p")).textContent="Just run this command in the root directory of your project:",c=b(),(r=g("pre")).innerHTML='<code class="language-bash">\nnpm init svelte-docs</code>',i=b(),(p=g("p")).textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=b(),(m=g("h3")).textContent="Edit your docs",f=b(),(y=g("p")).textContent="Switch to the created directory, ex.:",j=b(),(w=g("pre")).innerHTML='<code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code>',x=b(),(v=g("p")).textContent="Run docs in development mode on the local server:",$=b(),(k=g("pre")).innerHTML='<code class="language-bash">\nnpm run dev</code>',T=b(),(C=g("p")).innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',M=b(),(L=g("p")).innerHTML="Now you can edit files in <code>src/docs</code> directory and page in a browser will be reloaded on each save. ",H=b(),(S=g("h3")).textContent="Build the documentation site",_=b(),(B=g("p")).textContent="As soon as documentation ready for release you need to run the build:",P=b(),(E=g("pre")).innerHTML='<code class="language-bash">\nnpm run build</code>',I=b(),(A=g("p")).innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,v,n),u(e,$,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),u(e,B,n),u(e,P,n),u(e,E,n),u(e,I,n),u(e,A,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(w),e&&h(x),e&&h(v),e&&h($),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(P),e&&h(E),e&&h(I),e&&h(A)}}}function xe(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,w,x,v,$,k;return{c(){(t=g("h1")).textContent="Theming",s=b(),(a=g("p")).innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=b(),(l=g("h3")).textContent="Themes",c=b(),(r=g("p")).innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=b(),(p=g("h3")).textContent="Colors",d=b(),(m=g("p")).innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",f=b(),(y=g("h3")).textContent="Styles",j=b(),(w=g("p")).innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",x=b(),(v=g("h3")).textContent="Layout",$=b(),(k=g("p")).innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,v,n),u(e,$,n),u(e,k,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(w),e&&h(x),e&&h(v),e&&h($),e&&h(k)}}}function ve(n){let t,s,o,l,c,r,i,p;return{c(){t=g("span"),(s=g("span")).textContent="-",o=b(),l=g("span"),c=f(n.count),r=b(),(i=g("span")).textContent="+",w(s,"class","minus svelte-1kq48qn"),w(l,"class","value svelte-1kq48qn"),w(i,"class","plus svelte-1kq48qn"),w(t,"class","counter svelte-1kq48qn"),p=[j(s,"click",n.click_handler),j(i,"click",n.click_handler_1)]},m(e,n){u(e,t,n),d(t,s),d(t,o),d(t,l),d(l,c),d(t,r),d(t,i)},p(e,n){e.count&&x(c,n.count)},i:e,o:e,d(e){e&&h(t),a(p)}}}function $e(e,n,t){let s=0;return{count:s,click_handler:e=>t("count",s--,s),click_handler_1:e=>t("count",s++,s)}}class ke extends F{constructor(e){super(),U(this,e,$e,ve,l,{})}}function Te(n){let t;return{c(){(t=g("blockquote")).innerHTML="<p><em>MDSv is really cool!</em></p>"},m(e,n){u(e,t,n)},p:e,i:e,o:e,d(e){e&&h(t)}}}class Ce extends F{constructor(e){super(),U(this,e,null,Te,l,{})}}function Me(e,n,t){const s=Object.create(e);return s.item=n[t],s}function Le(e){let n,t,s,a=e.item+"";return{c(){n=g("ul"),t=g("li"),s=f(a)},m(e,a){u(e,n,a),d(n,t),d(t,s)},p(e,n){e.items&&a!==(a=n.item+"")&&x(s,a)},d(e){e&&h(n)}}}function He(e){let n,t,s,o,l,c,r,i,p,f,y,w,x,v,$,k,T,C,M,L,H,S,_,B,P,E,I,A,q,G,D,W,U,F,K,J,Z,Q,V,X,ee=e.items,ne=[];for(let n=0;n<ee.length;n+=1)ne[n]=Le(Me(e,ee,n));const te=new ke({}),se=new Ce({});return{c(){(n=g("h1")).textContent="What is MDSv",t=b(),(s=g("p")).textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",o=b(),(l=g("p")).innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',c=b(),(r=g("p")).textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=b(),(p=g("p")).textContent="This document also wrote in MDSv format, so we can do this right inside the document...",f=b(),(y=g("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">&#39;item0&#39;</span>,<span class="hljs-string">&#39;item1&#39;</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{ items = [...items,<span class="hljs-string">&#39;item&#39;</span>+items.length] }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>{ items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n{#each item as item}\n* {item}\n{/each}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{add}</span>&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{del}</span>&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code>',w=b(),(x=g("p")).textContent="... and get the result:",v=b();for(let e=0;e<ne.length;e+=1)ne[e].c();$=b(),(k=g("button")).textContent="Add Item",T=b(),(C=g("button")).textContent="Del Item",M=b(),(L=g("p")).textContent="Or we can import any Svelte component and use it where we want:",H=b(),(S=g("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from &#39;./Counter.svelte&#39;;</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span></code>',_=b(),(B=g("p")).textContent="... and it will work:",P=b(),E=g("p"),(I=g("em")).textContent="The counter:",A=b(),Y(te.$$.fragment),q=b(),(G=g("p")).innerHTML="You even can import other <code>*.md</code> files:",D=b(),(W=g("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from &#39;./spoiler.md&#39;;</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code>',U=b(),(F=g("p")).textContent="... and it will be included in the specified place:",K=b(),J=g("p"),(Z=g("strong")).textContent="Spoiler:",Q=b(),Y(se.$$.fragment),X=[j(k,"click",e.add),j(C,"click",e.del)]},m(e,a){u(e,n,a),u(e,t,a),u(e,s,a),u(e,o,a),u(e,l,a),u(e,c,a),u(e,r,a),u(e,i,a),u(e,p,a),u(e,f,a),u(e,y,a),u(e,w,a),u(e,x,a),u(e,v,a);for(let n=0;n<ne.length;n+=1)ne[n].m(e,a);u(e,$,a),u(e,k,a),u(e,T,a),u(e,C,a),u(e,M,a),u(e,L,a),u(e,H,a),u(e,S,a),u(e,_,a),u(e,B,a),u(e,P,a),u(e,E,a),d(E,I),d(E,A),O(te,E,null),u(e,q,a),u(e,G,a),u(e,D,a),u(e,W,a),u(e,U,a),u(e,F,a),u(e,K,a),u(e,J,a),d(J,Z),d(J,Q),O(se,J,null),V=!0},p(e,n){if(e.items){let t;for(ee=n.items,t=0;t<ee.length;t+=1){const s=Me(n,ee,t);ne[t]?ne[t].p(e,s):(ne[t]=Le(s),ne[t].c(),ne[t].m($.parentNode,$))}for(;t<ne.length;t+=1)ne[t].d(1);ne.length=ee.length}},i(e){V||(N(te.$$.fragment,e),N(se.$$.fragment,e),V=!0)},o(e){z(te.$$.fragment,e),z(se.$$.fragment,e),V=!1},d(e){e&&h(n),e&&h(t),e&&h(s),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(f),e&&h(y),e&&h(w),e&&h(x),e&&h(v),m(ne,e),e&&h($),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(P),e&&h(E),R(te),e&&h(q),e&&h(G),e&&h(D),e&&h(W),e&&h(U),e&&h(F),e&&h(K),e&&h(J),R(se),a(X)}}}function Se(e,n,t){let s=["item0","item1"];return{items:s,add:function(){t("items",s=[...s,"item"+s.length])},del:function(){t("items",s=s.slice(0,-1))}}}function _e(n){let t,s,a,o,l,c,r,i,p,d,m;return{c(){(t=g("h1")).textContent="Pages configuration",s=b(),(a=g("p")).textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=b(),(l=g("h3")).textContent="fullscreen",c=b(),(r=g("p")).innerHTML="By default all pages has a layout with left sidebar. But if you set the <code>fullscreen</code> option this way:",i=b(),(p=g("pre")).innerHTML='<code class="language-markdown">\n---\n<span class="hljs-section">fullscreen: true\n---</span>\n... </code>',d=b(),(m=g("p")).textContent="... page will render without sidebar."},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m)}}}function Be(n){let t,s,a,o,l,c,r,i,p,d,m;return{c(){(t=g("h1")).textContent="Static files",s=b(),(a=g("p")).innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/pages/static</code> directory.",o=b(),(l=g("p")).innerHTML="For example, if you placed image in the <code>src/pages/static/great-success.png</code> then you can include it by following code:",c=b(),(r=g("pre")).innerHTML='<code class="language-markdown">\n![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code>',i=b(),(p=g("p")).textContent="... and get image on your page:",d=b(),(m=g("p")).innerHTML='<img src="static/great-success.png" alt="Great Success">;'},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m)}}}function Pe(n){let t,s,a,o,l,c,r,i,p,d,m,f,y,j,w,x,v,$,k,T,C,M,L,H,S,_,B,P,E,I,A,q,G,D,N,z,Y,O,R,W,U,F,K;return{c(){(t=g("h1")).textContent="Structure",s=b(),(a=g("p")).innerHTML="In common cases you should edit <code>*.md</code> files in the <code>src/docs</code> directory. There are several files and directories:",o=b(),(l=g("ul")).innerHTML="<li><strong>pages</strong> - all pages of your documentation are stored in this directory, except start page</li> \n<li><strong>static</strong> - place here any static assets using in your documentation. Files, images, icons and etc.</li> \n<li><strong>topbar.md</strong> - file to customize logo and links on the topbar of the site</li> \n<li><strong>sections.md</strong> - representation of the documentation contents links</li> \n<li><strong>start.md</strong> - root page of the documentation</li>",c=b(),(r=g("h2")).textContent="Routing",i=b(),(p=g("p")).innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/docs/pages</code> directory:",d=b(),(m=g("pre")).innerHTML='<code class="language-bash">\nsrc                         <span class="hljs-comment">#  URL path part:</span>\n└── docs                    <span class="hljs-comment">#    ex: http://mydocs.com/install,</span>\n    ├── pages               <span class="hljs-comment">#        http://mydocs.com/component/button</span>\n    │   ├── components      <span class="hljs-comment">#</span>\n    │   │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    │   ├── install.md      <span class="hljs-comment">#  install</span>\n    └── start.md            <span class="hljs-comment">#  / </span></code>',f=b(),(y=g("h2")).textContent="sections.md",j=b(),(w=g("p")).textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",x=b(),(v=g("p")).textContent="Let's look on example:",$=b(),(k=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-bullet">\n* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',T=b(),(C=g("p")).innerHTML="As you can see it is just an 1 or 2-level list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/docs/pages</code> directory. ",M=b(),(L=g("p")).innerHTML="URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/docs/pages/components/button.md</code> file. Please see <em>Routing</em> section on this page for more info about URL.",H=b(),(S=g("p")).textContent="External URLs will be opened in new window.",_=b(),(B=g("h2")).textContent="topbar.md",P=b(),(E=g("p")).textContent="There you can change logo's text and add links on topbar of the documentation site.",I=b(),(A=g("p")).textContent="Common example of its structure:",q=b(),(G=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-section"># My*Lib* #</span>\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ \n<span class="hljs-bullet">* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',D=b(),(N=g("p")).innerHTML="Logo&#39;s text is situated between <code>#</code> marks (like a <em>h1</em> paragraph in markdown). The text of logo will have primary color of current theme, but the text between <code>*</code> marks will be of secondary color. ",z=b(),(Y=g("p")).innerHTML="Second part of the <code>topbar.md</code> is a single-level list of links. There are same rules than in <code>sections.md</code> above.",O=b(),(R=g("h2")).textContent="start.md",W=b(),(U=g("p")).innerHTML='This is just a root page of your documentation, which will be available at <a href="https://mydocs.com/">https://mydocs.com/</a>, or when you user will click on the link to <code>/</code>. ',F=b(),(K=g("blockquote")).innerHTML="<p>Don&#39;t delete <code>start.md</code> file, it will break the documentation.</p>"},m(e,n){u(e,t,n),u(e,s,n),u(e,a,n),u(e,o,n),u(e,l,n),u(e,c,n),u(e,r,n),u(e,i,n),u(e,p,n),u(e,d,n),u(e,m,n),u(e,f,n),u(e,y,n),u(e,j,n),u(e,w,n),u(e,x,n),u(e,v,n),u(e,$,n),u(e,k,n),u(e,T,n),u(e,C,n),u(e,M,n),u(e,L,n),u(e,H,n),u(e,S,n),u(e,_,n),u(e,B,n),u(e,P,n),u(e,E,n),u(e,I,n),u(e,A,n),u(e,q,n),u(e,G,n),u(e,D,n),u(e,N,n),u(e,z,n),u(e,Y,n),u(e,O,n),u(e,R,n),u(e,W,n),u(e,U,n),u(e,F,n),u(e,K,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s),e&&h(a),e&&h(o),e&&h(l),e&&h(c),e&&h(r),e&&h(i),e&&h(p),e&&h(d),e&&h(m),e&&h(f),e&&h(y),e&&h(j),e&&h(w),e&&h(x),e&&h(v),e&&h($),e&&h(k),e&&h(T),e&&h(C),e&&h(M),e&&h(L),e&&h(H),e&&h(S),e&&h(_),e&&h(B),e&&h(P),e&&h(E),e&&h(I),e&&h(A),e&&h(q),e&&h(G),e&&h(D),e&&h(N),e&&h(z),e&&h(Y),e&&h(O),e&&h(R),e&&h(W),e&&h(U),e&&h(F),e&&h(K)}}}function Ee(n){let t,s;return{c(){(t=g("h1")).textContent="Error",s=f("\n\nPage not found")},m(e,n){u(e,t,n),u(e,s,n)},p:e,i:e,o:e,d(e){e&&h(t),e&&h(s)}}}class Ie extends F{constructor(e){super(),U(this,e,null,Ee,l,{})}}const Ae=[];function qe(n,t=e){let s;const a=[];function o(e){if(l(n,e)&&(n=e,s)){const e=!Ae.length;for(let e=0;e<a.length;e+=1){const t=a[e];t[1](),Ae.push(t,n)}if(e){for(let e=0;e<Ae.length;e+=2)Ae[e][0](Ae[e+1]);Ae.length=0}}}return{set:o,update:function(e){o(e(n))},subscribe:function(l,c=e){const r=[l,c];return a.push(r),1===a.length&&(s=t(o)||e),l(n),()=>{const e=a.indexOf(r);-1!==e&&a.splice(e,1),0===a.length&&(s(),s=null)}}}}const Ge=qe(function(){let e=location.pathname;return e=function(e){const n=ze();return e.startsWith(n)&&(e=e.slice(n.length)),e.startsWith("/")&&(e=e.slice(1)),e.endsWith("/")&&(e=e.slice(0,-1)),e}(e)}());function De(e){history.pushState({},"",""===e?ze():e),Ge.set(e)}function Ne(e){const n=e.target.closest("a");if(!n)return;const t=n.getAttribute("href");if(t){if(!/^\w+:\/\//.test(t))return e.preventDefault(),/^\/$/.test(t)?De(""):De(t);n.setAttribute("target","_blank")}}function ze(){let e=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===e?"/":e}const Ye=[{url:"",component:class extends F{constructor(e){super(),U(this,e,null,K,l,{})}},meta:{fullscreen:!0}},{url:"builtins/example",component:class extends F{constructor(e){super(),U(this,e,null,pe,l,{})}},meta:{}},{url:"builtins/properties",component:class extends F{constructor(e){super(),U(this,e,null,de,l,{})}},meta:{}},{url:"config/basepath",component:class extends F{constructor(e){super(),U(this,e,null,ue,l,{})}},meta:{}},{url:"config/file",component:class extends F{constructor(e){super(),U(this,e,null,he,l,{})}},meta:{}},{url:"config/inccss",component:class extends F{constructor(e){super(),U(this,e,null,me,l,{})}},meta:{}},{url:"config/incpkg",component:class extends F{constructor(e){super(),U(this,e,null,ge,l,{})}},meta:{}},{url:"config/pathes",component:class extends F{constructor(e){super(),U(this,e,null,fe,l,{})}},meta:{}},{url:"config/preprocess",component:class extends F{constructor(e){super(),U(this,e,null,be,l,{})}},meta:{}},{url:"introduction",component:class extends F{constructor(e){super(),U(this,e,null,ye,l,{})}},meta:{}},{url:"publishing/ghpages",component:class extends F{constructor(e){super(),U(this,e,null,je,l,{})}},meta:{}},{url:"start",component:class extends F{constructor(e){super(),U(this,e,null,we,l,{})}},meta:{}},{url:"theming",component:class extends F{constructor(e){super(),U(this,e,null,xe,l,{})}},meta:{}},{url:"writing/mdsv",component:class extends F{constructor(e){super(),U(this,e,Se,He,l,{})}},meta:{}},{url:"writing/settings",component:class extends F{constructor(e){super(),U(this,e,null,_e,l,{})}},meta:{}},{url:"writing/static",component:class extends F{constructor(e){super(),U(this,e,null,Be,l,{})}},meta:{}},{url:"writing/structure",component:class extends F{constructor(e){super(),U(this,e,null,Pe,l,{})}},meta:{}}],Oe=function(n,t,s){const l=!Array.isArray(n),c=l?[n]:n,r=t.length<2;return{subscribe:qe(s,n=>{let s=!1;const i=[];let p=0,d=e;const u=()=>{if(p)return;d();const s=t(l?i[0]:i,n);r?n(s):d=o(s)?s:e},h=c.map((e,n)=>e.subscribe(e=>{i[n]=e,p&=~(1<<n),s&&u()},()=>{p|=1<<n}));return s=!0,u(),function(){a(h),d()}}).subscribe}}(Ge,e=>{const n=Ye.filter(n=>n.url===e);return n.length>0?n[0]:{url:"404",component:Ie,meta:{}}}),Re={html:"Svelte<span>Docs</span>",url:"/"},We=[{title:"Docs",url:"introduction"},{title:"Github",url:"https://github.com/alexxnb/svelte-docs"}];function Ue(e,n,t){const s=Object.create(e);return s.link=n[t],s}function Fe(e){let n,t,s,a,o=e.link.title+"";return{c(){n=g("li"),t=g("a"),s=f(o),w(t,"href",a=e.link.url),$(t,"active",e.link.url===e.$url)},m(e,a){u(e,n,a),d(n,t),d(t,s)},p(e,n){(e.links||e.$url)&&$(t,"active",n.link.url===n.$url)},d(e){e&&h(n)}}}function Ke(n){let t,s,a,o,l,c,r=Re.html+"",i=We,p=[];for(let e=0;e<i.length;e+=1)p[e]=Fe(Ue(n,i,e));return{c(){t=g("section"),s=g("a"),o=b(),l=g("section"),c=g("ul");for(let e=0;e<p.length;e+=1)p[e].c();w(s,"href",a=Re.url),w(s,"class","logo")},m(e,n){u(e,t,n),d(t,s),s.innerHTML=r,u(e,o,n),u(e,l,n),d(l,c);for(let e=0;e<p.length;e+=1)p[e].m(c,null)},p(e,n){if(e.links||e.$url){let t;for(i=We,t=0;t<i.length;t+=1){const s=Ue(n,i,t);p[t]?p[t].p(e,s):(p[t]=Fe(s),p[t].c(),p[t].m(c,null))}for(;t<p.length;t+=1)p[t].d(1);p.length=i.length}},i:e,o:e,d(e){e&&h(t),e&&h(o),e&&h(l),m(p,e)}}}function Je(e,n,t){let s;return c(e,Ge,e=>t("$url",s=e)),{$url:s}}class Ze extends F{constructor(e){super(),U(this,e,Je,Ke,l,{})}}var Qe=[{title:"Introduction",url:"introduction",sub:[]},{title:"Getting Started",url:"start",sub:[]},{title:"Writing docs",url:!1,sub:[{title:"What is MDSv",url:"writing/mdsv"},{title:"Structure",url:"writing/structure"},{title:"Page settings",url:"writing/settings"},{title:"Static files",url:"writing/static"}]},{title:"Configuration",url:"config/file",sub:[{title:"basepath",url:"config/basepath"},{title:"pathes",url:"config/pathes"},{title:"incPKG",url:"config/incpkg"},{title:"incCSS",url:"config/inccss"},{title:"preprocess",url:"config/preprocess"}]},{title:"Builtins",url:!1,sub:[{title:"Example",url:"builtins/example"},{title:"Properties",url:"builtins/properties"}]},{title:"Theming",url:"theming",sub:[]},{title:"Publishing",url:!1,sub:[{title:"GitHub Pages",url:"publishing/ghpages"}]}];function Ve(e){let n,t,s=e.section.title+"";return{c(){n=g("span"),t=f(s)},m(e,s){u(e,n,s),d(n,t)},p(e,n){e.section&&s!==(s=n.section.title+"")&&x(t,s)},d(e){e&&h(n)}}}function Xe(e){let n,t,s,a=e.section.title+"";return{c(){n=g("a"),t=f(a),w(n,"href",s=e.section.url),$(n,"active",e.active)},m(e,s){u(e,n,s),d(n,t)},p(e,o){e.section&&a!==(a=o.section.title+"")&&x(t,a),e.section&&s!==(s=o.section.url)&&w(n,"href",s),e.active&&$(n,"active",o.active)},d(e){e&&h(n)}}}function en(n){let t;function s(e,n){return n.section.url?Xe:Ve}let a=s(0,n),o=a(n);return{c(){o.c(),t=y()},m(e,n){o.m(e,n),u(e,t,n)},p(e,n){a===(a=s(0,n))&&o?o.p(e,n):(o.d(1),(o=a(n))&&(o.c(),o.m(t.parentNode,t)))},i:e,o:e,d(e){o.d(e),e&&h(t)}}}function nn(e,n,t){let{section:s={}}=n,{active:a=!1}=n;return e.$set=(e=>{"section"in e&&t("section",s=e.section),"active"in e&&t("active",a=e.active)}),{section:s,active:a}}class tn extends F{constructor(e){super(),U(this,e,nn,en,l,{section:0,active:0})}}function sn(e,n,t){const s=Object.create(e);return s.subsection=n[t],s}function an(e,n,t){const s=Object.create(e);return s.section=n[t],s}function on(e){let n,t;const s=new tn({props:{section:e.subsection,active:e.subsection.url===e.$current_page.url}});return{c(){n=g("li"),Y(s.$$.fragment)},m(e,a){u(e,n,a),O(s,n,null),t=!0},p(e,n){const t={};e.$current_page&&(t.active=n.subsection.url===n.$current_page.url),s.$set(t)},i(e){t||(N(s.$$.fragment,e),t=!0)},o(e){z(s.$$.fragment,e),t=!1},d(e){e&&h(n),R(s)}}}function ln(e){let n,t,s,a;const o=new tn({props:{section:e.section,active:e.section.url===e.$current_page.url}});let l=e.section.sub.length>0&&function(e){let n,t,s=e.section.sub,a=[];for(let n=0;n<s.length;n+=1)a[n]=on(sn(e,s,n));const o=e=>z(a[e],1,1,()=>{a[e]=null});return{c(){n=g("ul");for(let e=0;e<a.length;e+=1)a[e].c()},m(e,s){u(e,n,s);for(let e=0;e<a.length;e+=1)a[e].m(n,null);t=!0},p(e,t){if(e.sections||e.$current_page){let l;for(s=t.section.sub,l=0;l<s.length;l+=1){const o=sn(t,s,l);a[l]?(a[l].p(e,o),N(a[l],1)):(a[l]=on(o),a[l].c(),N(a[l],1),a[l].m(n,null))}for(G(),l=s.length;l<a.length;l+=1)o(l);D()}},i(e){if(!t){for(let e=0;e<s.length;e+=1)N(a[e]);t=!0}},o(e){a=a.filter(Boolean);for(let e=0;e<a.length;e+=1)z(a[e]);t=!1},d(e){e&&h(n),m(a,e)}}}(e);return{c(){n=g("li"),Y(o.$$.fragment),t=b(),l&&l.c(),s=b()},m(e,c){u(e,n,c),O(o,n,null),d(n,t),l&&l.m(n,null),d(n,s),a=!0},p(e,n){const t={};e.$current_page&&(t.active=n.section.url===n.$current_page.url),o.$set(t),n.section.sub.length>0&&l.p(e,n)},i(e){a||(N(o.$$.fragment,e),N(l),a=!0)},o(e){z(o.$$.fragment,e),z(l),a=!1},d(e){e&&h(n),R(o),l&&l.d()}}}function cn(e){let n,t,s=Qe,a=[];for(let n=0;n<s.length;n+=1)a[n]=ln(an(e,s,n));const o=e=>z(a[e],1,1,()=>{a[e]=null});return{c(){n=g("ul");for(let e=0;e<a.length;e+=1)a[e].c()},m(e,s){u(e,n,s);for(let e=0;e<a.length;e+=1)a[e].m(n,null);t=!0},p(e,t){if(e.sections||e.$current_page){let l;for(s=Qe,l=0;l<s.length;l+=1){const o=an(t,s,l);a[l]?(a[l].p(e,o),N(a[l],1)):(a[l]=ln(o),a[l].c(),N(a[l],1),a[l].m(n,null))}for(G(),l=s.length;l<a.length;l+=1)o(l);D()}},i(e){if(!t){for(let e=0;e<s.length;e+=1)N(a[e]);t=!0}},o(e){a=a.filter(Boolean);for(let e=0;e<a.length;e+=1)z(a[e]);t=!1},d(e){e&&h(n),m(a,e)}}}function rn(e,n,t){let s;return c(e,Oe,e=>t("$current_page",s=e)),{$current_page:s}}class pn extends F{constructor(e){super(),U(this,e,rn,cn,l,{})}}function dn(e){let n,t;var s=e.$current_page.component;if(s)var a=new s({});return{c(){n=g("article"),a&&Y(a.$$.fragment)},m(e,s){u(e,n,s),a&&O(a,n,null),t=!0},p(e,t){if(s!==(s=t.$current_page.component)){if(a){G();const e=a;z(e.$$.fragment,1,0,()=>{R(e,1)}),D()}s?(Y((a=new s({})).$$.fragment),N(a.$$.fragment,1),O(a,n,null)):a=null}},i(e){t||(a&&N(a.$$.fragment,e),t=!0)},o(e){a&&z(a.$$.fragment,e),t=!1},d(e){e&&h(n),a&&R(a)}}}function un(e,n,t){let s;return c(e,Oe,e=>t("$current_page",s=e)),{$current_page:s}}class hn extends F{constructor(e){super(),U(this,e,un,dn,l,{})}}function mn(e){let n,t,s,a,o,l;const c=new pn({}),r=new hn({});return{c(){n=g("span"),t=b(),s=g("nav"),Y(c.$$.fragment),a=b(),o=g("main"),Y(r.$$.fragment),w(n,"class","showSidebar"),w(n,"tabindex","0"),w(o,"class","with-sidebar")},m(e,i){u(e,n,i),u(e,t,i),u(e,s,i),O(c,s,null),u(e,a,i),u(e,o,i),O(r,o,null),l=!0},i(e){l||(N(c.$$.fragment,e),N(r.$$.fragment,e),l=!0)},o(e){z(c.$$.fragment,e),z(r.$$.fragment,e),l=!1},d(e){e&&h(n),e&&h(t),e&&h(s),R(c),e&&h(a),e&&h(o),R(r)}}}function gn(e){let n,t;const s=new hn({});return{c(){n=g("main"),Y(s.$$.fragment),w(n,"class","fullscreen")},m(e,a){u(e,n,a),O(s,n,null),t=!0},i(e){t||(N(s.$$.fragment,e),t=!0)},o(e){z(s.$$.fragment,e),t=!1},d(e){e&&h(n),R(s)}}}function fn(e){let n,t,s,a,o,l;const c=new Ze({}),r=[gn,mn],i=[];function p(e,n){return n.$current_page.meta.fullscreen?0:1}return s=p(0,e),a=i[s]=r[s](e),{c(){n=g("header"),Y(c.$$.fragment),t=b(),a.c(),o=y()},m(e,a){u(e,n,a),O(c,n,null),u(e,t,a),i[s].m(e,a),u(e,o,a),l=!0},p(e,n){let t=s;(s=p(0,n))!==t&&(G(),z(i[t],1,1,()=>{i[t]=null}),D(),(a=i[s])||(a=i[s]=r[s](n)).c(),N(a,1),a.m(o.parentNode,o))},i(e){l||(N(c.$$.fragment,e),N(a),l=!0)},o(e){z(c.$$.fragment,e),z(a),l=!1},d(e){e&&h(n),R(c),e&&h(t),i[s].d(e),e&&h(o)}}}function bn(e,n,t){let s;return c(e,Oe,e=>t("$current_page",s=e)),{$current_page:s}}class yn extends F{constructor(e){super(),U(this,e,bn,fn,l,{})}}function jn(n){let t;const s=new yn({});return{c(){Y(s.$$.fragment)},m(e,n){O(s,e,n),t=!0},p:e,i(e){t||(N(s.$$.fragment,e),t=!0)},o(e){z(s.$$.fragment,e),t=!1},d(e){R(s,e)}}}function wn(e){return C(()=>(addEventListener("click",Ne),function(){removeEventListener("click",Ne)})),{}}return new class extends F{constructor(e){super(),U(this,e,wn,jn,l,{})}}({target:document.body,props:{}})}();
