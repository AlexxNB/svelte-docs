var app=function(){"use strict";function e(){}const n=e=>e;function t(e,n){for(const t in n)e[t]=n[t];return e}function s(e){return e()}function a(){return Object.create(null)}function o(e){e.forEach(s)}function l(e){return"function"==typeof e}function c(e,n){return e!=e?n==n:e!==n||e&&"object"==typeof e||"function"==typeof e}function r(e,n,t){e.$$.on_destroy.push(function(e,n){const t=e.subscribe(n);return t.unsubscribe?()=>t.unsubscribe():t}(n,t))}function i(e,n,t){if(e){const s=p(e,n,t);return e[0](s)}}function p(e,n,s){return e[1]?t({},t(n.$$scope.ctx,e[1](s?s(n):{}))):n.$$scope.ctx}function d(e,n,s,a){return e[1]?t({},t(n.$$scope.changed||{},e[1](a?a(s):{}))):n.$$scope.changed||{}}const u="undefined"!=typeof window;let h=u?()=>window.performance.now():()=>Date.now(),m=u?e=>requestAnimationFrame(e):e;const f=new Set;let g,y=!1;function b(){f.forEach(e=>{e[0](h())||(f.delete(e),e[1]())}),(y=f.size>0)&&m(b)}function w(e){let n;return y||(y=!0,m(b)),{promise:new Promise(t=>{f.add(n=[e,t])}),abort(){f.delete(n)}}}function j(e,n){e.appendChild(n)}function x(e,n,t){e.insertBefore(n,t||null)}function v(e){e.parentNode.removeChild(e)}function $(e){return document.createElement(e)}function k(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function C(e){return document.createTextNode(e)}function T(){return C(" ")}function L(){return C("")}function M(e,n,t,s){return e.addEventListener(n,t,s),()=>e.removeEventListener(n,t,s)}function S(e,n,t){null==t?e.removeAttribute(n):e.getAttribute(n)!==t&&e.setAttribute(n,t)}function H(e,n){n=""+n,e.data!==n&&(e.data=n)}function _(e,n,t,s){e.style.setProperty(n,t,s?"important":"")}class E{constructor(e,n=null){this.e=$("div"),this.a=n,this.u(e)}m(e,n=null){for(let t=0;t<this.n.length;t+=1)x(e,this.n[t],n);this.t=e}u(e){this.e.innerHTML=e,this.n=Array.from(this.e.childNodes)}p(e){this.d(),this.u(e),this.m(this.t,this.a)}d(){this.n.forEach(v)}}let A,B=0,P={};function I(e,n,t,s,a,o,l,c=0){const r=16.666/s;let i="{\n";for(let e=0;e<=1;e+=r){const s=n+(t-n)*o(e);i+=100*e+`%{${l(s,1-s)}}\n`}const p=i+`100% {${l(t,1-t)}}\n}`,d=`__svelte_${function(e){let n=5381,t=e.length;for(;t--;)n=(n<<5)-n^e.charCodeAt(t);return n>>>0}(p)}_${c}`;if(!P[d]){if(!g){const e=$("style");document.head.appendChild(e),g=e.sheet}P[d]=!0,g.insertRule(`@keyframes ${d} ${p}`,g.cssRules.length)}const u=e.style.animation||"";return e.style.animation=`${u?`${u}, `:""}${d} ${s}ms linear ${a}ms 1 both`,B+=1,d}function q(e,n){e.style.animation=(e.style.animation||"").split(", ").filter(n?e=>e.indexOf(n)<0:e=>-1===e.indexOf("__svelte")).join(", "),n&&!--B&&m(()=>{if(B)return;let e=g.cssRules.length;for(;e--;)g.deleteRule(e);P={}})}function D(e){A=e}function G(e){(function(){if(!A)throw new Error("Function called outside component initialization");return A})().$$.on_mount.push(e)}const N=[],O=[],R=[],z=[],Y=Promise.resolve();let U,W=!1;function F(e){R.push(e)}function K(){const e=new Set;do{for(;N.length;){const e=N.shift();D(e),J(e.$$)}for(;O.length;)O.pop()();for(let n=0;n<R.length;n+=1){const t=R[n];e.has(t)||(t(),e.add(t))}R.length=0}while(N.length);for(;z.length;)z.pop()();W=!1}function J(e){null!==e.fragment&&(e.update(e.dirty),o(e.before_update),e.fragment&&e.fragment.p(e.dirty,e.ctx),e.dirty=null,e.after_update.forEach(F))}function Z(e,n,t){e.dispatchEvent(function(e,n){const t=document.createEvent("CustomEvent");return t.initCustomEvent(e,!1,!1,n),t}(`${n?"intro":"outro"}${t}`))}const Q=new Set;let V;function X(){V={r:0,c:[],p:V}}function ee(){V.r||o(V.c),V=V.p}function ne(e,n){e&&e.i&&(Q.delete(e),e.i(n))}function te(e,n,t,s){if(e&&e.o){if(Q.has(e))return;Q.add(e),V.c.push(()=>{Q.delete(e),s&&(t&&e.d(1),s())}),e.o(n)}}const se={duration:0};function ae(t,s,a,c){let r=s(t,a),i=c?0:1,p=null,d=null,u=null;function m(){u&&q(t,u)}function f(e,n){const t=e.b-i;return n*=Math.abs(t),{a:i,b:e.b,d:t,duration:n,start:e.start,end:e.start+n,group:e.group}}function g(s){const{delay:a=0,duration:l=300,easing:c=n,tick:g=e,css:y}=r||se,b={start:h()+a,b:s};s||(b.group=V,V.r+=1),p?d=b:(y&&(m(),u=I(t,i,s,l,a,c,y)),s&&g(0,1),p=f(b,l),F(()=>Z(t,s,"start")),w(e=>{if(d&&e>d.start&&(p=f(d,l),d=null,Z(t,p.b,"start"),y&&(m(),u=I(t,i,p.b,p.duration,0,c,r.css))),p)if(e>=p.end)g(i=p.b,1-i),Z(t,p.b,"end"),d||(p.b?m():--p.group.r||o(p.group.c)),p=null;else if(e>=p.start){const n=e-p.start;i=p.a+p.d*c(n/p.duration),g(i,1-i)}return!(!p&&!d)}))}return{run(e){l(r)?(U||(U=Promise.resolve()).then(()=>{U=null}),U).then(()=>{r=r(),g(e)}):g(e)},end(){m(),p=d=null}}}function oe(e){e&&e.c()}function le(e,n,t){const{fragment:a,on_mount:c,on_destroy:r,after_update:i}=e.$$;a&&a.m(n,t),F(()=>{const n=c.map(s).filter(l);r?r.push(...n):o(n),e.$$.on_mount=[]}),i.forEach(F)}function ce(e,n){const t=e.$$;null!==t.fragment&&(o(t.on_destroy),t.fragment&&t.fragment.d(n),t.on_destroy=t.fragment=null,t.ctx={})}function re(e,n){e.$$.dirty||(N.push(e),W||(W=!0,Y.then(K)),e.$$.dirty=a()),e.$$.dirty[n]=!0}function ie(n,t,s,l,c,r){const i=A;D(n);const p=t.props||{},d=n.$$={fragment:null,ctx:null,props:r,update:e,not_equal:c,bound:a(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:a(),dirty:null};let u=!1;var h;d.ctx=s?s(n,p,(e,t,s=t)=>(d.ctx&&c(d.ctx[e],d.ctx[e]=s)&&(d.bound[e]&&d.bound[e](s),u&&re(n,e)),t)):p,d.update(),u=!0,o(d.before_update),d.fragment=!!l&&l(d.ctx),t.target&&(t.hydrate?d.fragment&&d.fragment.l((h=t.target,Array.from(h.childNodes))):d.fragment&&d.fragment.c(),t.intro&&ne(n.$$.fragment),le(n,t.target,t.anchor),K()),D(i)}class pe{$destroy(){ce(this,1),this.$destroy=e}$on(e,n){const t=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return t.push(n),()=>{const e=t.indexOf(n);-1!==e&&t.splice(e,1)}}$set(){}}function de(n){let t;return{c(){(t=$("div")).innerHTML='<div class="banner svelte-19i87y2"><p class="svelte-19i87y2"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-19i87y2"></p> \n<p class="svelte-19i87y2">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-19i87y2"><a href="introduction" class="svelte-19i87y2">Introduction</a> \n<a href="getting-started" class="svelte-19i87y2">Getting Started</a></div>',S(t,"class","hero svelte-19i87y2")},m(e,n){x(e,t,n)},p:e,i:e,o:e,d(e){e&&v(t)}}}const ue={fullscreen:!0};class he extends pe{constructor(e){super(),ie(this,e,null,de,c,{})}}const me=()=>({}),fe=()=>({}),ge=()=>({}),ye=()=>({});function be(e){let n,t,s,a,o;const l=e.$$slots.result,c=i(l,e,ye),r=e.$$slots.code,u=i(r,e,fe);return{c(){n=$("div"),t=$("div"),c&&c.c(),s=T(),a=$("div"),u&&u.c(),S(t,"class","result"),S(a,"class","code"),S(n,"class","example")},m(e,l){x(e,n,l),j(n,t),c&&c.m(t,null),j(n,s),j(n,a),u&&u.m(a,null),o=!0},p(e,n){c&&c.p&&e.$$scope&&c.p(d(l,n,e,ge),p(l,n,ye)),u&&u.p&&e.$$scope&&u.p(d(r,n,e,me),p(r,n,fe))},i(e){o||(ne(c,e),ne(u,e),o=!0)},o(e){te(c,e),te(u,e),o=!1},d(e){e&&v(n),c&&c.d(e),u&&u.d(e)}}}function we(e,n,t){let{$$slots:s={},$$scope:a}=n;return e.$set=(e=>{"$$scope"in e&&t("$$scope",a=e.$$scope)}),{$$slots:s,$$scope:a}}class je extends pe{constructor(e){super(),ie(this,e,we,be,c,{})}}var xe="/svelte-docs/";function ve(e){let n,t;return{c(){S(n=$("iframe"),"slot","result"),_(n,"height",e.iframe_height+"px"),S(n,"title","Result"),S(n,"scrolling","no"),S(n,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),S(n,"srcdoc",e.srcdoc),S(n,"class","svelte-y9biys"),t=M(n,"load",e.sendMessage)},m(t,s){x(t,n,s),e.iframe_1_binding(n)},p(e,t){e.iframe_height&&_(n,"height",t.iframe_height+"px")},d(s){s&&v(n),e.iframe_1_binding(null),t()}}}function $e(e){let n,t,s=e.code.trim()+"";return{c(){n=$("pre"),t=$("code"),S(n,"slot","code"),S(n,"class","hljs svelte-y9biys")},m(e,a){x(e,n,a),j(n,t),t.innerHTML=s},p(e,n){e.code&&s!==(s=n.code.trim()+"")&&(t.innerHTML=s)},d(e){e&&v(n)}}}function ke(n){let t;return{c(){t=T()},m(e,n){x(e,t,n)},p:e,d(e){e&&v(t)}}}function Ce(e){let n;const t=new je({props:{$$slots:{default:[ke],code:[$e],result:[ve]},$$scope:{ctx:e}}});return{c(){oe(t.$$.fragment)},m(e,s){le(t,e,s),n=!0},p(e,n){const s={};(e.$$scope||e.code||e.iframe_height||e.iframe)&&(s.$$scope={changed:e,ctx:n}),t.$set(s)},i(e){n||(ne(t.$$.fragment,e),n=!0)},o(e){te(t.$$.fragment,e),n=!1},d(e){ce(t,e)}}}let Te=1;function Le(e,n,t){let s,{name:a}=n,{code:o}=n,l=Te++,c=70;const r=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${xe}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",function(e){e.data.iframe_id&&e.data.iframe_id===l&&e.data.hasOwnProperty("HEIGHT")&&t("iframe_height",c=e.data.HEIGHT)}),e.$set=(e=>{"name"in e&&t("name",a=e.name),"code"in e&&t("code",o=e.code)}),{name:a,code:o,iframe:s,iframe_height:c,srcdoc:r,sendMessage:function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},iframe_1_binding:function(e){O[e?"unshift":"push"](()=>{t("iframe",s=e)})}}}class Me extends pe{constructor(e){super(),ie(this,e,Le,Ce,c,{name:0,code:0})}}function Se(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j,k,C,L,M,S,H,_,A,B,P,I,q,D,G,N,O;const R=new Me({props:{name:"Ex_0_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="css">\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span>'}}),z=new Me({props:{name:"Ex_1_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n</span>'}}),Y=new Me({props:{name:"Ex_2_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>'}}),U=new Me({props:{name:"Ex_3_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>'}}),W=new Me({props:{name:"Ex_4_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span></span>'}});return{c(){(t=$("h1")).textContent="Example code block",s=T(),(a=$("p")).innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=T(),c=T(),oe(R.$$.fragment),r=T(),(i=$("h3")).textContent="Hide script and/or style blocks",p=T(),(d=$("p")).innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",u=T(),m=T(),oe(z.$$.fragment),f=T(),(g=$("h3")).textContent="Import in examples",y=T(),(b=$("p")).innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",w=T(),oe(Y.$$.fragment),j=T(),(k=$("p")).textContent="Also you can import any local file by relative path according documents directory root:",C=T(),oe(U.$$.fragment),L=T(),(M=$("p")).innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',S=T(),_=T(),oe(W.$$.fragment),A=T(),(B=$("h3")).textContent="Styling",P=T(),(I=$("p")).innerHTML="Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",q=T(),(D=$("p")).innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',G=T(),(N=$("p")).innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component.",l=new E(He,c),h=new E(_e,m),H=new E(Ee,_)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),l.m(e,n),x(e,c,n),le(R,e,n),x(e,r,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n),h.m(e,n),x(e,m,n),le(z,e,n),x(e,f,n),x(e,g,n),x(e,y,n),x(e,b,n),x(e,w,n),le(Y,e,n),x(e,j,n),x(e,k,n),x(e,C,n),le(U,e,n),x(e,L,n),x(e,M,n),x(e,S,n),H.m(e,n),x(e,_,n),le(W,e,n),x(e,A,n),x(e,B,n),x(e,P,n),x(e,I,n),x(e,q,n),x(e,D,n),x(e,G,n),x(e,N,n),O=!0},p:e,i(e){O||(ne(R.$$.fragment,e),ne(z.$$.fragment,e),ne(Y.$$.fragment,e),ne(U.$$.fragment,e),ne(W.$$.fragment,e),O=!0)},o(e){te(R.$$.fragment,e),te(z.$$.fragment,e),te(Y.$$.fragment,e),te(U.$$.fragment,e),te(W.$$.fragment,e),O=!1},d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&l.d(),e&&v(c),ce(R,e),e&&v(r),e&&v(i),e&&v(p),e&&v(d),e&&v(u),e&&h.d(),e&&v(m),ce(z,e),e&&v(f),e&&v(g),e&&v(y),e&&v(b),e&&v(w),ce(Y,e),e&&v(j),e&&v(k),e&&v(C),ce(U,e),e&&v(L),e&&v(M),e&&v(S),e&&H.d(),e&&v(_),ce(W,e),e&&v(A),e&&v(B),e&&v(P),e&&v(I),e&&v(q),e&&v(D),e&&v(G),e&&v(N)}}}const He='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button&#123;background: red&#125;</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',_e='<pre><code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button&#123;background: red&#125;</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Ee='<pre><code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:&#123;\n    <span class="hljs-string">\'./Button.svelte\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>,\n    <span class="hljs-string">\'my-button-package\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>\n&#125;,\n...</code></pre>\n';function Ae(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j,k,C,L,M,H,_,A,B,P,I,q,D,G,N,O,R,z,Y,U,W;return{c(){(t=$("h1")).textContent="Properties",s=T(),(a=$("p")).textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=T(),(l=$("p")).innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",c=T(),i=T(),(p=$("p")).textContent="There are four properties:",d=T(),(u=$("ol")).innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",h=T(),(m=$("p")).textContent="So lets create fancy table of properties for this component:",f=T(),y=T(),(b=$("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',w=T(),(j=$("p")).textContent="Now user of your component will know all about its properties.",k=T(),(C=$("h3")).textContent="Describing property",L=T(),(M=$("ul")).innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",H=T(),(_=$("h3")).textContent="Autogenerated properties",A=T(),(B=$("p")).innerHTML='Another way to describre properties, retrieve it right from the Svelte component with <a href="https://devdocs.io/jsdoc/tags-type">JSDoc @type</a> comments. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:',P=T(),q=T(),(D=$("p")).textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",G=T(),(N=$("p")).textContent="Then just place a path to the this component inside Properties code block:",O=T(),z=T(),(Y=$("p")).textContent="And get the result:",U=T(),(W=$("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',r=new E(Be,i),g=new E(Pe,y),S(b,"class","properties"),I=new E(Ie,q),R=new E(qe,z),S(W,"class","properties")},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),r.m(e,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n),x(e,h,n),x(e,m,n),x(e,f,n),g.m(e,n),x(e,y,n),x(e,b,n),x(e,w,n),x(e,j,n),x(e,k,n),x(e,C,n),x(e,L,n),x(e,M,n),x(e,H,n),x(e,_,n),x(e,A,n),x(e,B,n),x(e,P,n),I.m(e,n),x(e,q,n),x(e,D,n),x(e,G,n),x(e,N,n),x(e,O,n),R.m(e,n),x(e,z,n),x(e,Y,n),x(e,U,n),x(e,W,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&r.d(),e&&v(i),e&&v(p),e&&v(d),e&&v(u),e&&v(h),e&&v(m),e&&v(f),e&&g.d(),e&&v(y),e&&v(b),e&&v(w),e&&v(j),e&&v(k),e&&v(C),e&&v(L),e&&v(M),e&&v(H),e&&v(_),e&&v(A),e&&v(B),e&&v(P),e&&I.d(),e&&v(q),e&&v(D),e&&v(G),e&&v(N),e&&v(O),e&&R.d(),e&&v(z),e&&v(Y),e&&v(U),e&&v(W)}}}const Be='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',Pe='<pre><code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | \'text\',\'number\',\'range\',\'date\'(\'text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Ie='<pre><code class="language-html">// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-comment">/** @type &#123;string&#125; Name of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/** @type &#123;(\'text\',\'number\',\'range\',\'date\')&#125; Type of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-comment">/** \n     * Should the input be disabled\n     * @type &#123;bool&#125; \n     */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/** @type &#123;(number|string)&#125; Size of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',qe='<pre><code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function De(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=$("h1")).textContent="Basepath option",s=T(),(a=$("p")).innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=T(),(l=$("p")).innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',c=T(),(r=$("p")).innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=T(),(p=$("blockquote")).innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>"},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n),x(e,i,n),x(e,p,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&v(p)}}}function Ge(n){let t,s,a;return{c(){(t=$("h1")).textContent="Configuration",s=T(),(a=$("p")).innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a)}}}function Ne(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j,k,C;return{c(){(t=$("h1")).textContent="incPKG option",s=T(),(a=$("p")).innerHTML="If you want use your local components in Examples code block you should link it with vitrual package name in <code>incPKG</code> option.",o=T(),(l=$("p")).textContent="Suppose you have following structure of your project:",c=T(),i=T(),(p=$("p")).innerHTML="And want to import <code>mycomponents/Counter.svelte</code> in your Example code block, you may use relative path(from the docs root) like this:",d=T(),h=T(),(m=$("p")).textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",f=T(),(g=$("p")).innerHTML="So you can add <em>virtual package</em> using <code>incPKG</code> option:",y=T(),w=T(),(j=$("p")).innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",k=T(),r=new E(Oe,i),u=new E(Re,h),b=new E(ze,w),C=new E(Ye,null)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),r.m(e,n),x(e,i,n),x(e,p,n),x(e,d,n),u.m(e,n),x(e,h,n),x(e,m,n),x(e,f,n),x(e,g,n),x(e,y,n),b.m(e,n),x(e,w,n),x(e,j,n),x(e,k,n),C.m(e,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&r.d(),e&&v(i),e&&v(p),e&&v(d),e&&u.d(),e&&v(h),e&&v(m),e&&v(f),e&&v(g),e&&v(y),e&&b.d(),e&&v(w),e&&v(j),e&&v(k),e&&C.d()}}}const Oe='<pre><code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code></pre>\n',Re='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'./../mycomponent/Counter.svelte\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',ze='<pre><code class="language-javascript">incPKG:&#123;\n    ...\n    <span class="hljs-string">"my-counter-package"</span>: <span class="hljs-string">"./../mycomponent/Counter.svelte"</span>,\n    ...\n&#125;</code></pre>\n',Ye='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'my-counter-package\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function Ue(n){let t,s,a,o,l,c,r;return{c(){(t=$("h1")).textContent="Pathes option",s=T(),(a=$("p")).textContent="There are two pathes you can change.",o=T(),(l=$("ul")).innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",c=T(),(r=$("blockquote")).innerHTML="<p>In most cases you don&#39;t need to change these options.</p>"},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r)}}}function We(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=$("h1")).textContent="Preprocess option",s=T(),(a=$("p")).innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=T(),c=T(),(r=$("p")).textContent="Then all your examples will be preprocessed:",i=T(),l=new E(Fe,c),p=new E(Ke,null)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),l.m(e,n),x(e,c,n),x(e,r,n),x(e,i,n),p.m(e,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&l.d(),e&&v(c),e&&v(r),e&&v(i),e&&p.d()}}}const Fe='<pre><code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'svelte-preprocess-markdown\'</span>);\n\n<span class="hljs-built_in">module</span>.exports=&#123;\n    ...\n    preprocess: [\n        ...\n        markdown(&#123;<span class="hljs-attr">filetype</span>: <span class="hljs-string">\'svelte\'</span>&#125;),\n        ...\n    ]\n    ...\n&#125;</code></pre>\n',Ke='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = \'World\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, &#123;name&#125;!</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function Je(n){let t,s,a,o,l,c,r,i,p,d,u;return{c(){(t=$("h1")).textContent="Theme option",s=T(),(a=$("p")).textContent="Set theme name for documentation site. List of avialable themes you can find on the sidebar.",o=T(),(l=$("p")).innerHTML="Examlpe: <code>theme: &#39;default&#39;,</code>",c=T(),(r=$("p")).textContent="Also you can write path to the local dir here:",i=T(),(p=$("p")).innerHTML="Example: <code>theme: &#39;./src/my-own-theme&#39;,</code>",d=T(),(u=$("blockquote")).innerHTML="<p>In this case, it should be directory with valid theme content. </p>"},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&v(p),e&&v(d),e&&v(u)}}}function Ze(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j,k,C,L,M,S,H,_,A,B,P,I,q;return{c(){(t=$("h1")).textContent="Getting started",s=T(),(a=$("h3")).textContent="Initialize Svelte-docs",o=T(),(l=$("p")).textContent="Just run this command in the root directory of your project:",c=T(),i=T(),(p=$("p")).textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=T(),(u=$("h3")).textContent="Edit your docs",h=T(),(m=$("p")).textContent="Switch to the created directory, ex.:",f=T(),y=T(),(b=$("p")).textContent="Run docs in development mode on the local server:",w=T(),k=T(),(C=$("p")).innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',L=T(),(M=$("p")).innerHTML="Now you can edit files in <code>src/pages</code> directory and browser will be reloaded on each save. ",S=T(),(H=$("h3")).textContent="Build the documentation site",_=T(),(A=$("p")).textContent="As soon as documentation ready for release you need to run the build:",B=T(),I=T(),(q=$("p")).innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.',r=new E(Qe,i),g=new E(Ve,y),j=new E(Xe,k),P=new E(en,I)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),r.m(e,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n),x(e,h,n),x(e,m,n),x(e,f,n),g.m(e,n),x(e,y,n),x(e,b,n),x(e,w,n),j.m(e,n),x(e,k,n),x(e,C,n),x(e,L,n),x(e,M,n),x(e,S,n),x(e,H,n),x(e,_,n),x(e,A,n),x(e,B,n),P.m(e,n),x(e,I,n),x(e,q,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&r.d(),e&&v(i),e&&v(p),e&&v(d),e&&v(u),e&&v(h),e&&v(m),e&&v(f),e&&g.d(),e&&v(y),e&&v(b),e&&v(w),e&&j.d(),e&&v(k),e&&v(C),e&&v(L),e&&v(M),e&&v(S),e&&v(H),e&&v(_),e&&v(A),e&&v(B),e&&P.d(),e&&v(I),e&&v(q)}}}const Qe='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n',Ve='<pre><code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code></pre>\n',Xe='<pre><code class="language-bash">npm run dev</code></pre>\n',en='<pre><code class="language-bash">npm run build</code></pre>\n';function nn(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j,k,C,L,M,H,_,A,B,P,I,q,D;const G=new Me({props:{name:"Ex_0_9753583d5391f3de0f3ee9487b6cf8d9",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>'}});return{c(){(t=$("h1")).textContent="Introdcing",s=T(),(a=$("h2")).textContent="Features",o=T(),(l=$("p")).innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',c=T(),(r=$("blockquote")).innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',i=T(),(p=$("ul")).innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',d=T(),(u=$("h2")).textContent="Zero-config",h=T(),(m=$("p")).textContent="Just run:",f=T(),y=T(),(b=$("p")).innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',w=T(),(j=$("h2")).textContent="Builtins",k=T(),(C=$("h3")).textContent="Examples",L=T(),(M=$("p")).textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",H=T(),oe(G.$$.fragment),_=T(),(A=$("h3")).textContent="Properties",B=T(),(P=$("p")).innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component&#39;s <code>*.svelte</code> file.",I=T(),(q=$("dl")).innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",g=new E(tn,y),S(q,"class","properties")},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n),x(e,h,n),x(e,m,n),x(e,f,n),g.m(e,n),x(e,y,n),x(e,b,n),x(e,w,n),x(e,j,n),x(e,k,n),x(e,C,n),x(e,L,n),x(e,M,n),x(e,H,n),le(G,e,n),x(e,_,n),x(e,A,n),x(e,B,n),x(e,P,n),x(e,I,n),x(e,q,n),D=!0},p:e,i(e){D||(ne(G.$$.fragment,e),D=!0)},o(e){te(G.$$.fragment,e),D=!1},d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&v(p),e&&v(d),e&&v(u),e&&v(h),e&&v(m),e&&v(f),e&&g.d(),e&&v(y),e&&v(b),e&&v(w),e&&v(j),e&&v(k),e&&v(C),e&&v(L),e&&v(M),e&&v(H),ce(G,e),e&&v(_),e&&v(A),e&&v(B),e&&v(P),e&&v(I),e&&v(q)}}}const tn='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n';function sn(n){let t,s,a,o,l,c,r,i,p,d,u,h,m;return{c(){(t=$("h1")).textContent="Publishing on Github Pages",s=T(),(a=$("p")).innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=T(),(l=$("p")).textContent="To do it just run command in you documents source directory at any time:",c=T(),i=T(),(p=$("p")).textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=T(),(u=$("blockquote")).innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",h=T(),(m=$("blockquote")).innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>',r=new E(an,i)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),r.m(e,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n),x(e,h,n),x(e,m,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&r.d(),e&&v(i),e&&v(p),e&&v(d),e&&v(u),e&&v(h),e&&v(m)}}}const an='<pre><code class="language-bash">npm run deploy</code></pre>\n';function on(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j;return{c(){(t=$("h1")).textContent="Theming",s=T(),(a=$("p")).innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=T(),(l=$("h3")).textContent="Themes",c=T(),(r=$("p")).innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=T(),(p=$("h3")).textContent="Colors",d=T(),(u=$("p")).innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",h=T(),(m=$("h3")).textContent="Styles",f=T(),(g=$("p")).innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",y=T(),(b=$("h3")).textContent="Layout",w=T(),(j=$("p")).innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n),x(e,h,n),x(e,m,n),x(e,f,n),x(e,g,n),x(e,y,n),x(e,b,n),x(e,w,n),x(e,j,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&v(p),e&&v(d),e&&v(u),e&&v(h),e&&v(m),e&&v(f),e&&v(g),e&&v(y),e&&v(b),e&&v(w),e&&v(j)}}}function ln(n){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,w,j,k,C,L,M,S,H,_,A,B,P,I,q,D,G,N,O,R,z,Y,U,W,F,K,J;return{c(){(t=$("h1")).textContent="Includes",s=T(),(a=$("p")).innerHTML="In the <code>src/includes</code> directory live little MDSv components which you can include in any page you want. There are some default files used by theme:",o=T(),(l=$("h3")).textContent="sidebar.md",c=T(),(r=$("p")).textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",i=T(),(p=$("p")).textContent="Let's look on example:",d=T(),h=T(),(m=$("p")).innerHTML="Usually it is just a list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/pages</code> directory. ",f=T(),(g=$("p")).innerHTML='URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/pages/components/button.md</code> file. Please see <a href="writing/routing">Routing</a> section for more info about URL.',y=T(),(b=$("p")).textContent="External URLs will be opened in new window.",w=T(),(j=$("h3")).textContent="logo.md",k=T(),(C=$("p")).textContent="Commonly used for showing any logotype.  Just write something like:",L=T(),S=T(),(H=$("p")).textContent="Or you can use an image as your logotype:",_=T(),B=T(),(P=$("h3")).textContent="topbar.md",I=T(),(q=$("p")).textContent="Play with right section of the topbar. For example add some links there:",D=T(),N=T(),(O=$("h3")).textContent="error.md",R=T(),(z=$("p")).textContent="Just an error message which will be shown when user requests unexistent URL.",Y=T(),(U=$("h2")).textContent="Custom includes",W=T(),(F=$("p")).innerHTML="You are free to create any <code>*.md</code> files which you can to include on any page you want using special import path:",K=T(),u=new E(cn,h),M=new E(rn,S),A=new E(pn,B),G=new E(dn,N),J=new E(un,null)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n),x(e,i,n),x(e,p,n),x(e,d,n),u.m(e,n),x(e,h,n),x(e,m,n),x(e,f,n),x(e,g,n),x(e,y,n),x(e,b,n),x(e,w,n),x(e,j,n),x(e,k,n),x(e,C,n),x(e,L,n),M.m(e,n),x(e,S,n),x(e,H,n),x(e,_,n),A.m(e,n),x(e,B,n),x(e,P,n),x(e,I,n),x(e,q,n),x(e,D,n),G.m(e,n),x(e,N,n),x(e,O,n),x(e,R,n),x(e,z,n),x(e,Y,n),x(e,U,n),x(e,W,n),x(e,F,n),x(e,K,n),J.m(e,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&v(p),e&&v(d),e&&u.d(),e&&v(h),e&&v(m),e&&v(f),e&&v(g),e&&v(y),e&&v(b),e&&v(w),e&&v(j),e&&v(k),e&&v(C),e&&v(L),e&&M.d(),e&&v(S),e&&v(H),e&&v(_),e&&A.d(),e&&v(B),e&&v(P),e&&v(I),e&&v(q),e&&v(D),e&&G.d(),e&&v(N),e&&v(O),e&&v(R),e&&v(z),e&&v(Y),e&&v(U),e&&v(W),e&&v(F),e&&v(K),e&&J.d()}}}const cn='<pre><code class="language-markdown"><span class="hljs-bullet">* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',rn='<pre><code class="language-markdown"><span class="hljs-section"># MyComponent #</span></code></pre>\n',pn='<pre><code class="language-markdown"><span class="hljs-section"># ![Logo](static/logo.png) #</span></code></pre>\n',dn='<pre><code class="language-markdown"><span class="hljs-bullet">* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',un='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">\'@INCLUDES/banner.md\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Banner</span> /&gt;</span></code></pre>\n';function hn(n){let t,s,a,l,c,r,i,p;return{c(){t=$("span"),(s=$("span")).textContent="-",a=T(),l=$("span"),c=C(n.count),r=T(),(i=$("span")).textContent="+",S(s,"class","minus svelte-1kq48qn"),S(l,"class","value svelte-1kq48qn"),S(i,"class","plus svelte-1kq48qn"),S(t,"class","counter svelte-1kq48qn"),p=[M(s,"click",function(){n.click_handler.apply(this,arguments)}),M(i,"click",function(){n.click_handler_1.apply(this,arguments)})]},m(e,n){x(e,t,n),j(t,s),j(t,a),j(t,l),j(l,c),j(t,r),j(t,i)},p(e,t){n=t,e.count&&H(c,n.count)},i:e,o:e,d(e){e&&v(t),o(p)}}}function mn(e,n,t){let s=0;return{count:s,click_handler:e=>t("count",s--,s),click_handler_1:e=>t("count",s++,s)}}class fn extends pe{constructor(e){super(),ie(this,e,mn,hn,c,{})}}function gn(n){let t;return{c(){(t=$("blockquote")).innerHTML="<p><em>MDSv is really cool!</em></p>"},m(e,n){x(e,t,n)},p:e,i:e,o:e,d(e){e&&v(t)}}}class yn extends pe{constructor(e){super(),ie(this,e,null,gn,c,{})}}function bn(e,n,t){const s=Object.create(e);return s.item=n[t],s}function wn(e){let n,t,s=e.item+"";return{c(){n=$("li"),t=C(s)},m(e,s){x(e,n,s),j(n,t)},p(e,n){e.items&&s!==(s=n.item+"")&&H(t,s)},d(e){e&&v(n)}}}function jn(e){let n,t,s,a,l,c,r,i,p,d,u,h,m,f,g,y,b,w,k,C,L,S,H,_,A,B,P,I,q,D,G,N,O,R,z,Y,U,W,F,K,J,Z=e.items,Q=[];for(let n=0;n<Z.length;n+=1)Q[n]=wn(bn(e,Z,n));const V=new fn({}),X=new yn({});return{c(){(n=$("h1")).textContent="What is MDSv",t=T(),(s=$("p")).textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",a=T(),(l=$("p")).innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',c=T(),(r=$("p")).textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=T(),(p=$("p")).textContent="This document also wrote in MDSv format, so we can do this right inside the document...",d=T(),h=T(),(m=$("p")).textContent="... and get the result:",f=T(),g=$("ul");for(let e=0;e<Q.length;e+=1)Q[e].c();y=T(),(b=$("button")).textContent="Add Item",w=T(),(k=$("button")).textContent="Del Item",C=T(),(L=$("p")).textContent="Or we can import any Svelte component and use it where we want:",S=T(),_=T(),(A=$("p")).textContent="... and it will work:",B=T(),P=$("p"),(I=$("em")).textContent="The counter:",q=T(),oe(V.$$.fragment),D=T(),(G=$("p")).innerHTML="You even can import other <code>*.md</code> files:",N=T(),R=T(),(z=$("p")).textContent="... and it will be included in the specified place:",Y=T(),U=$("p"),(W=$("strong")).textContent="Spoiler:",F=T(),oe(X.$$.fragment),u=new E(xn,h),H=new E(vn,_),O=new E($n,R),J=[M(b,"click",e.add),M(k,"click",e.del)]},m(e,o){x(e,n,o),x(e,t,o),x(e,s,o),x(e,a,o),x(e,l,o),x(e,c,o),x(e,r,o),x(e,i,o),x(e,p,o),x(e,d,o),u.m(e,o),x(e,h,o),x(e,m,o),x(e,f,o),x(e,g,o);for(let e=0;e<Q.length;e+=1)Q[e].m(g,null);x(e,y,o),x(e,b,o),x(e,w,o),x(e,k,o),x(e,C,o),x(e,L,o),x(e,S,o),H.m(e,o),x(e,_,o),x(e,A,o),x(e,B,o),x(e,P,o),j(P,I),j(P,q),le(V,P,null),x(e,D,o),x(e,G,o),x(e,N,o),O.m(e,o),x(e,R,o),x(e,z,o),x(e,Y,o),x(e,U,o),j(U,W),j(U,F),le(X,U,null),K=!0},p(e,n){if(e.items){let t;for(Z=n.items,t=0;t<Z.length;t+=1){const s=bn(n,Z,t);Q[t]?Q[t].p(e,s):(Q[t]=wn(s),Q[t].c(),Q[t].m(g,null))}for(;t<Q.length;t+=1)Q[t].d(1);Q.length=Z.length}},i(e){K||(ne(V.$$.fragment,e),ne(X.$$.fragment,e),K=!0)},o(e){te(V.$$.fragment,e),te(X.$$.fragment,e),K=!1},d(e){e&&v(n),e&&v(t),e&&v(s),e&&v(a),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&v(p),e&&v(d),e&&u.d(),e&&v(h),e&&v(m),e&&v(f),e&&v(g),function(e,n){for(let t=0;t<e.length;t+=1)e[t]&&e[t].d(n)}(Q,e),e&&v(y),e&&v(b),e&&v(w),e&&v(k),e&&v(C),e&&v(L),e&&v(S),e&&H.d(),e&&v(_),e&&v(A),e&&v(B),e&&v(P),ce(V),e&&v(D),e&&v(G),e&&v(N),e&&O.d(),e&&v(R),e&&v(z),e&&v(Y),e&&v(U),ce(X),o(J)}}}const xn='<pre><code class="language-svelte"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">\'item0\'</span>,<span class="hljs-string">\'item1\'</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>&#123; items = [...items,<span class="hljs-string">\'item\'</span>+items.length] &#125;\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>&#123; items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">#each</span><span class="javascript"> item <span class="hljs-keyword">as</span> item&#125;</span><span class="xml">\n* </span><span class="javascript">&#123;item&#125;</span><span class="xml">\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">/each</span><span class="javascript">&#125;</span><span class="xml">\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;add&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;del&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></code></pre>\n',vn='<pre><code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from \'./Counter.svelte\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span> </code></pre>\n',$n='<pre><code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from \'./spoiler.md\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code></pre>\n';function kn(e,n,t){let s=["item0","item1"];return{items:s,add:function(){t("items",s=[...s,"item"+s.length])},del:function(){t("items",s=s.slice(0,-1))}}}function Cn(n){let t,s,a,o,l,c,r;return{c(){(t=$("h1")).textContent="Routing",s=T(),(a=$("p")).innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/pages</code> directory:",o=T(),c=T(),(r=$("p")).innerHTML="You can make links anywhere in your docs with URL part based on file hierarchy. For example, if you want create link to the <code>src/pages/components/button.md</code> use <code>components/button</code> as a href attribute of the <code>a</code> element - <code>components/button</code>. Or in markdown write - <code>[Button](component/button)</code>.",l=new E(Tn,c)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),l.m(e,n),x(e,c,n),x(e,r,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&l.d(),e&&v(c),e&&v(r)}}}const Tn='<pre><code class="language-bash">src                     <span class="hljs-comment">#  URL path part:</span>\n└── pages               <span class="hljs-comment">#</span>\n    ├── components      <span class="hljs-comment">#</span>\n    │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    ├── install.md      <span class="hljs-comment">#  install</span>\n    └── index.md         <span class="hljs-comment">#  / </span>\n</code></pre>\n';function Ln(n){let t,s,a,o,l,c,r,i,p,d,u;return{c(){(t=$("h1")).textContent="Pages configuration",s=T(),(a=$("p")).textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=T(),(l=$("h3")).textContent="fullscreen",c=T(),(r=$("p")).innerHTML="By default all pages has a layout with left sidebar. But if you set the <code>fullscreen</code> option this way:",i=T(),d=T(),(u=$("p")).textContent="... page will render without sidebar.",p=new E(Mn,d)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),x(e,r,n),x(e,i,n),p.m(e,n),x(e,d,n),x(e,u,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&v(r),e&&v(i),e&&p.d(),e&&v(d),e&&v(u)}}}const Mn='<pre><code class="language-markdown">---\n<span class="hljs-section">fullscreen: true\n---</span>\n... </code></pre>\n';function Sn(n){let t,s,a,o,l,c,r,i,p,d,u;return{c(){(t=$("h1")).textContent="Static files",s=T(),(a=$("p")).innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/static</code> directory.",o=T(),(l=$("p")).innerHTML="For example, if you placed image in the <code>src/static/great-success.png</code> then you can include it by following code:",c=T(),i=T(),(p=$("p")).textContent="... and get image on your page:",d=T(),(u=$("p")).innerHTML='<img src="static/great-success.png" alt="Great Success">;',r=new E(Hn,i)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),x(e,l,n),x(e,c,n),r.m(e,n),x(e,i,n),x(e,p,n),x(e,d,n),x(e,u,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&v(l),e&&v(c),e&&r.d(),e&&v(i),e&&v(p),e&&v(d),e&&v(u)}}}const Hn='<pre><code class="language-markdown">![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code></pre>\n';function _n(n){let t,s,a,o,l,c,r,i,p;return{c(){(t=$("h1")).textContent="Structure",s=T(),(a=$("p")).textContent="Let's see the structure of the doc's project directory:",o=T(),c=T(),(r=$("p")).innerHTML="It is very simple, sources of you documentation are live in <code>src</code> directory:",i=T(),(p=$("ul")).innerHTML="<li><strong>includes</strong> - there are small pieces of the MDSv code that can be reusable within any document page</li> \n<li><strong>pages</strong> - all pages of your documentation are stored in this directory</li> \n<li><strong>static</strong> - place here any static assets using in your documentation (files, images, icons and etc.)</li> \n<li><strong>examples.css</strong> - it is styles using within examples</li> \n<li><strong>theme.css</strong> - tune current documentation theme with variables, add new styles or <code>@import</code> any css file.</li>",l=new E(En,c)},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n),x(e,o,n),l.m(e,n),x(e,c,n),x(e,r,n),x(e,i,n),x(e,p,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a),e&&v(o),e&&l.d(),e&&v(c),e&&v(r),e&&v(i),e&&v(p)}}}const En='<pre><code class="language-bash">src\n├── includes\n├── pages\n├── static\n├── examples.css   \n└── theme.css   \n...\nsvelte-docs.config.js</code></pre>\n';function An(n){let t,s,a;return{c(){(t=$("h1")).textContent="Page not found!",s=T(),(a=$("p")).innerHTML='<a href="/">Go to start page</a>',S(t,"class","svelte-aiue6m"),S(a,"class","svelte-aiue6m")},m(e,n){x(e,t,n),x(e,s,n),x(e,a,n)},p:e,i:e,o:e,d(e){e&&v(t),e&&v(s),e&&v(a)}}}class Bn extends pe{constructor(e){super(),ie(this,e,null,An,c,{})}}function Pn(n){let t;const s=new Bn({});return{c(){oe(s.$$.fragment)},m(e,n){le(s,e,n),t=!0},p:e,i(e){t||(ne(s.$$.fragment,e),t=!0)},o(e){te(s.$$.fragment,e),t=!1},d(e){ce(s,e)}}}class In extends pe{constructor(e){super(),ie(this,e,null,Pn,c,{})}}const qn=[];function Dn(n,t=e){let s;const a=[];function o(e){if(c(n,e)&&(n=e,s)){const e=!qn.length;for(let e=0;e<a.length;e+=1){const t=a[e];t[1](),qn.push(t,n)}if(e){for(let e=0;e<qn.length;e+=2)qn[e][0](qn[e+1]);qn.length=0}}}return{set:o,update:function(e){o(e(n))},subscribe:function(l,c=e){const r=[l,c];return a.push(r),1===a.length&&(s=t(o)||e),l(n),()=>{const e=a.indexOf(r);-1!==e&&a.splice(e,1),0===a.length&&(s(),s=null)}}}}const Gn=Dn(function(){let e=location.pathname;return e=function(e){const n=Rn();return e.startsWith(n)&&(e=e.slice(n.length)),e.startsWith("/")&&(e=e.slice(1)),e.endsWith("/")&&(e=e.slice(0,-1)),e}(e)}());function Nn(e){history.pushState({},"",""===e?Rn():e),Gn.set(e)}function On(e){const n=e.target.closest("a");if(!n)return;const t=n.getAttribute("href");if(t){if(!/^\w+:\/\//.test(t))return e.preventDefault(),/^\/$/.test(t)?Nn(""):Nn(t);n.setAttribute("target","_blank")}}function Rn(){let e=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===e?"/":e}const zn=[{url:"",component:he,meta:ue},{url:"builtins/example",component:class extends pe{constructor(e){super(),ie(this,e,null,Se,c,{})}},meta:{}},{url:"builtins/properties",component:class extends pe{constructor(e){super(),ie(this,e,null,Ae,c,{})}},meta:{}},{url:"config/basepath",component:class extends pe{constructor(e){super(),ie(this,e,null,De,c,{})}},meta:{}},{url:"config/file",component:class extends pe{constructor(e){super(),ie(this,e,null,Ge,c,{})}},meta:{}},{url:"config/incpkg",component:class extends pe{constructor(e){super(),ie(this,e,null,Ne,c,{})}},meta:{}},{url:"config/pathes",component:class extends pe{constructor(e){super(),ie(this,e,null,Ue,c,{})}},meta:{}},{url:"config/preprocess",component:class extends pe{constructor(e){super(),ie(this,e,null,We,c,{})}},meta:{}},{url:"config/theme",component:class extends pe{constructor(e){super(),ie(this,e,null,Je,c,{})}},meta:{}},{url:"getting-started",component:class extends pe{constructor(e){super(),ie(this,e,null,Ze,c,{})}},meta:{}},{url:"index",component:he,meta:ue},{url:"introduction",component:class extends pe{constructor(e){super(),ie(this,e,null,nn,c,{})}},meta:{}},{url:"publishing/ghpages",component:class extends pe{constructor(e){super(),ie(this,e,null,sn,c,{})}},meta:{}},{url:"theming",component:class extends pe{constructor(e){super(),ie(this,e,null,on,c,{})}},meta:{}},{url:"writing/includes",component:class extends pe{constructor(e){super(),ie(this,e,null,ln,c,{})}},meta:{}},{url:"writing/mdsv",component:class extends pe{constructor(e){super(),ie(this,e,kn,jn,c,{})}},meta:{}},{url:"writing/routing",component:class extends pe{constructor(e){super(),ie(this,e,null,Cn,c,{})}},meta:{}},{url:"writing/settings",component:class extends pe{constructor(e){super(),ie(this,e,null,Ln,c,{})}},meta:{}},{url:"writing/static",component:class extends pe{constructor(e){super(),ie(this,e,null,Sn,c,{})}},meta:{}},{url:"writing/structure",component:class extends pe{constructor(e){super(),ie(this,e,null,_n,c,{})}},meta:{}}],Yn=function(n,t,s){const a=!Array.isArray(n),c=a?[n]:n,r=t.length<2;return{subscribe:Dn(s,n=>{let s=!1;const i=[];let p=0,d=e;const u=()=>{if(p)return;d();const s=t(a?i[0]:i,n);r?n(s):d=l(s)?s:e},h=c.map((e,n)=>e.subscribe(e=>{i[n]=e,p&=~(1<<n),s&&u()},()=>{p|=1<<n}));return s=!0,u(),function(){o(h),d()}}).subscribe}}(Gn,e=>{const n=zn.filter(n=>n.url===e);return n.length>0?n[0]:{url:"404",component:In,meta:{fullscreen:!0}}});function Un(e){let n;return{c(){(n=$("h1")).innerHTML='<a href="/"><img src="static/logo.svg" alt="LOGO" class="svelte-1m9fc3n"></a>'},m(e,t){x(e,n,t)},d(e){e&&v(n)}}}function Wn(n){let t,s=""!==n.$current_page.url&&Un();return{c(){s&&s.c(),t=L()},m(e,n){s&&s.m(e,n),x(e,t,n)},p(e,n){""!==n.$current_page.url?s||((s=Un()).c(),s.m(t.parentNode,t)):s&&(s.d(1),s=null)},i:e,o:e,d(e){s&&s.d(e),e&&v(t)}}}function Fn(e,n,t){let s;return r(e,Yn,e=>t("$current_page",s=e)),{$current_page:s}}class Kn extends pe{constructor(e){super(),ie(this,e,Fn,Wn,c,{})}}function Jn(e){return e<.5?4*e*e*e:.5*Math.pow(2*e-2,3)+1}function Zn(e){return"[object Date]"===Object.prototype.toString.call(e)}function Qn(e,n){if(e===n||e!=e)return()=>e;const t=typeof e;if(t!==typeof n||Array.isArray(e)!==Array.isArray(n))throw new Error("Cannot interpolate values of different type");if(Array.isArray(e)){const t=n.map((n,t)=>Qn(e[t],n));return e=>t.map(n=>n(e))}if("object"===t){if(!e||!n)throw new Error("Object cannot be null");if(Zn(e)&&Zn(n)){e=e.getTime();const t=(n=n.getTime())-e;return n=>new Date(e+n*t)}const t=Object.keys(n),s={};return t.forEach(t=>{s[t]=Qn(e[t],n[t])}),e=>{const n={};return t.forEach(t=>{n[t]=s[t](e)}),n}}if("number"===t){const t=n-e;return n=>e+n*t}throw new Error(`Cannot interpolate ${t} values`)}function Vn(e){let n,t,s;return{c(){(n=$("span")).textContent="Github",S(n,"class","label svelte-bpn430")},m(e,t){x(e,n,t),s=!0},i(e){s||(F(()=>{t||(t=ae(n,et,{},!0)),t.run(1)}),s=!0)},o(e){t||(t=ae(n,et,{},!1)),t.run(0),s=!1},d(e){e&&v(n),e&&t&&t.end()}}}function Xn(e){let n,t,s,a,l,c,r=e.hover&&Vn();return{c(){n=$("a"),t=k("svg"),s=k("path"),a=T(),r&&r.c(),S(s,"d","M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"),S(t,"viewBox","0 0 24 24"),_(t,"transform","rotate(-"+e.$rotation+"deg)"),S(t,"class","svelte-bpn430"),S(n,"class","github svelte-bpn430"),S(n,"href",e.url),S(n,"target","_blank"),c=[M(n,"mouseenter",e.mEnter),M(n,"mouseleave",e.mLeave)]},m(e,o){x(e,n,o),j(n,t),j(t,s),j(n,a),r&&r.m(n,null),l=!0},p(e,s){l&&!e.$rotation||_(t,"transform","rotate(-"+s.$rotation+"deg)"),s.hover?r?ne(r,1):((r=Vn()).c(),ne(r,1),r.m(n,null)):r&&(X(),te(r,1,1,()=>{r=null}),ee()),l&&!e.url||S(n,"href",s.url)},i(e){l||(ne(r),l=!0)},o(e){te(r),l=!1},d(e){e&&v(n),r&&r.d(),o(c)}}}function et(e){return{delay:0,duration:500,css:e=>`overflow:hide; width: ${50*Jn(e)}px; opacity: ${e}`}}function nt(e,s,a){let o,{url:l}=s,{animation:c=!1}=s,i=!1;const p=function(e,s={}){const a=Dn(e);let o,l=e;function c(c,r){if(null==e)return a.set(e=c),Promise.resolve();l=c;let i=o,p=!1,{delay:d=0,duration:u=400,easing:m=n,interpolate:f=Qn}=t(t({},s),r);const g=h()+d;let y;return(o=w(n=>{if(n<g)return!0;p||(y=f(e,c),"function"==typeof u&&(u=u(e,c)),p=!0),i&&(i.abort(),i=null);const t=n-g;return t>u?(a.set(e=c),!1):(a.set(e=y(m(t/u))),!0)})).promise}return{set:c,update:(n,t)=>c(n(l,e),t),subscribe:a.subscribe}}(0,{duration:500,easing:Jn});return r(e,p,e=>a("$rotation",o=e)),e.$set=(e=>{"url"in e&&a("url",l=e.url),"animation"in e&&a("animation",c=e.animation)}),e.$$.update=((e={hover:1})=>{e.hover&&function(e,n,t=n){e.set(t)}(p,o=i?100:0)}),{url:l,animation:c,hover:i,mEnter:function(){c&&a("hover",i=!0)},mLeave:function(){a("hover",i=!1)},rotation:p,$rotation:o}}class tt extends pe{constructor(e){super(),ie(this,e,nt,Xn,c,{url:0,animation:0})}}function st(n){let t,s,a,o,l;const c=new tt({props:{animation:!0,url:"https://github.com/alexxnb/svelte-docs"}});return{c(){t=$("ul"),(s=$("li")).innerHTML='<a href="getting-started">Docs</a>',a=T(),o=$("li"),oe(c.$$.fragment)},m(e,n){x(e,t,n),j(t,s),j(t,a),j(t,o),le(c,o,null),l=!0},p:e,i(e){l||(ne(c.$$.fragment,e),l=!0)},o(e){te(c.$$.fragment,e),l=!1},d(e){e&&v(t),ce(c)}}}class at extends pe{constructor(e){super(),ie(this,e,null,st,c,{})}}function ot(n){let t,s,a,o;const l=new Kn({}),c=new at({});return{c(){t=$("section"),oe(l.$$.fragment),s=T(),a=$("section"),oe(c.$$.fragment)},m(e,n){x(e,t,n),le(l,t,null),x(e,s,n),x(e,a,n),le(c,a,null),o=!0},p:e,i(e){o||(ne(l.$$.fragment,e),ne(c.$$.fragment,e),o=!0)},o(e){te(l.$$.fragment,e),te(c.$$.fragment,e),o=!1},d(e){e&&v(t),ce(l),e&&v(s),e&&v(a),ce(c)}}}class lt extends pe{constructor(e){super(),ie(this,e,null,ot,c,{})}}function ct(n){let t;return{c(){(t=$("ul")).innerHTML='<li><a href="introduction">Introduction</a></li> \n<li><a href="getting-started">Getting Started</a></li> \n<li>Writing docs<ul><li><a href="writing/mdsv">What is MDSv</a></li> \n<li><a href="writing/structure">Structure</a></li> \n<li><a href="writing/includes">Includes</a></li> \n<li><a href="writing/routing">Routing</a></li> \n<li><a href="writing/static">Static files</a></li> \n<li><a href="writing/settings">Page settings</a></li></ul></li> \n<li><a href="config/file">Configuration</a><ul><li><a href="config/basepath">basepath</a></li> \n<li><a href="config/theme">theme</a></li> \n<li><a href="config/pathes">pathes</a></li> \n<li><a href="config/incpkg">incPKG</a></li> \n<li><a href="config/preprocess">preprocess</a></li></ul></li> \n<li>Builtins<ul><li><a href="builtins/example">Example</a></li> \n<li><a href="builtins/properties">Properties</a></li></ul></li> \n<li><a href="theming">Theming</a></li> \n<li>Publishing<ul><li><a href="publishing/ghpages">GitHub Pages</a></li></ul></li>'},m(e,n){x(e,t,n)},p:e,i:e,o:e,d(e){e&&v(t)}}}class rt extends pe{constructor(e){super(),ie(this,e,null,ct,c,{})}}function it(n){let t;const s=new rt({});return{c(){oe(s.$$.fragment)},m(e,n){le(s,e,n),t=!0},p:e,i(e){t||(ne(s.$$.fragment,e),t=!0)},o(e){te(s.$$.fragment,e),t=!1},d(e){ce(s,e)}}}class pt extends pe{constructor(e){super(),ie(this,e,null,it,c,{})}}function dt(e){let n,t;var s=e.$current_page.component;if(s)var a=new s({});return{c(){n=$("article"),a&&oe(a.$$.fragment)},m(e,s){x(e,n,s),a&&le(a,n,null),t=!0},p(e,t){if(s!==(s=t.$current_page.component)){if(a){X();const e=a;te(e.$$.fragment,1,0,()=>{ce(e,1)}),ee()}s?(oe((a=new s({})).$$.fragment),ne(a.$$.fragment,1),le(a,n,null)):a=null}},i(e){t||(a&&ne(a.$$.fragment,e),t=!0)},o(e){a&&te(a.$$.fragment,e),t=!1},d(e){e&&v(n),a&&ce(a)}}}function ut(e,n,t){let s;return r(e,Yn,e=>t("$current_page",s=e)),Yn.subscribe(()=>{window.scrollTo(0,0)}),{$current_page:s}}class ht extends pe{constructor(e){super(),ie(this,e,ut,dt,c,{})}}function mt(e){let n,t,s,a,o,c,r;const i=new pt({}),p=new ht({});return{c(){n=$("span"),t=T(),s=$("nav"),oe(i.$$.fragment),o=T(),c=$("main"),oe(p.$$.fragment),S(n,"class","showSidebar"),S(n,"tabindex","0")},m(e,l){x(e,n,l),x(e,t,l),x(e,s,l),le(i,s,null),a=function(e){return{destroy:Yn.subscribe(n=>{e.querySelectorAll("a").forEach(e=>{e.getAttribute("href")===n.url?e.classList.add("active"):e.classList.remove("active")})})}}.call(null,s)||{},x(e,o,l),x(e,c,l),le(p,c,null),r=!0},i(e){r||(ne(i.$$.fragment,e),ne(p.$$.fragment,e),r=!0)},o(e){te(i.$$.fragment,e),te(p.$$.fragment,e),r=!1},d(e){e&&v(n),e&&v(t),e&&v(s),ce(i),a&&l(a.destroy)&&a.destroy(),e&&v(o),e&&v(c),ce(p)}}}function ft(e){let n,t;const s=new ht({});return{c(){n=$("main"),oe(s.$$.fragment),S(n,"class","fullscreen")},m(e,a){x(e,n,a),le(s,n,null),t=!0},i(e){t||(ne(s.$$.fragment,e),t=!0)},o(e){te(s.$$.fragment,e),t=!1},d(e){e&&v(n),ce(s)}}}function gt(e){let n,t,s,a,o,l;const c=new lt({}),r=[ft,mt],i=[];function p(e,n){return n.$current_page.meta.fullscreen?0:1}return s=p(0,e),a=i[s]=r[s](e),{c(){n=$("header"),oe(c.$$.fragment),t=T(),a.c(),o=L()},m(e,a){x(e,n,a),le(c,n,null),x(e,t,a),i[s].m(e,a),x(e,o,a),l=!0},p(e,n){let t=s;(s=p(0,n))!==t&&(X(),te(i[t],1,1,()=>{i[t]=null}),ee(),(a=i[s])||(a=i[s]=r[s](n)).c(),ne(a,1),a.m(o.parentNode,o))},i(e){l||(ne(c.$$.fragment,e),ne(a),l=!0)},o(e){te(c.$$.fragment,e),te(a),l=!1},d(e){e&&v(n),ce(c),e&&v(t),i[s].d(e),e&&v(o)}}}function yt(e,n,t){let s;return r(e,Yn,e=>t("$current_page",s=e)),{$current_page:s}}class bt extends pe{constructor(e){super(),ie(this,e,yt,gt,c,{})}}function wt(n){let t;const s=new bt({});return{c(){oe(s.$$.fragment)},m(e,n){le(s,e,n),t=!0},p:e,i(e){t||(ne(s.$$.fragment,e),t=!0)},o(e){te(s.$$.fragment,e),t=!1},d(e){ce(s,e)}}}function jt(e){return G(()=>(addEventListener("click",On),function(){removeEventListener("click",On)})),{}}return new class extends pe{constructor(e){super(),ie(this,e,jt,wt,c,{})}}({target:document.body,props:{}})}();
