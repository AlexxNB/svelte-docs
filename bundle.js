var app=function(){"use strict";function t(){}const e=t=>t;function n(t,e){for(const n in e)t[n]=e[n];return t}function s(t){return t()}function a(){return Object.create(null)}function o(t){t.forEach(s)}function l(t){return"function"==typeof t}function r(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function i(e,...n){if(null==e)return t;const s=e.subscribe(...n);return s.unsubscribe?()=>s.unsubscribe():s}function c(t,e,n){t.$$.on_destroy.push(i(e,n))}function d(t,e,n,s){if(t){const a=p(t,e,n,s);return t[0](a)}}function p(t,e,s,a){return t[1]&&a?n(s.ctx.slice(),t[1](a(e))):s.ctx}function u(t,e,n,s,a,o,l){const r=function(t,e,n,s){if(t[2]&&s){const a=t[2](s(n));if(void 0===e.dirty)return a;if("object"==typeof a){const t=[],n=Math.max(e.dirty.length,a.length);for(let s=0;s<n;s+=1)t[s]=e.dirty[s]|a[s];return t}return e.dirty|a}return e.dirty}(e,s,a,o);if(r){const a=p(e,n,s,l);t.p(a,r)}}function h(t,e,n=e){return t.set(n),e}function m(e){return e&&l(e.destroy)?e.destroy:t}const g="undefined"!=typeof window;let f=g?()=>window.performance.now():()=>Date.now(),y=g?t=>requestAnimationFrame(t):t;const b=new Set;function x(t){b.forEach((e=>{e.c(t)||(b.delete(e),e.f())})),0!==b.size&&y(x)}function w(t){let e;return 0===b.size&&y(x),{promise:new Promise((n=>{b.add(e={c:t,f:n})})),abort(){b.delete(e)}}}function j(t,e){t.appendChild(e)}function v(t,e,n){t.insertBefore(e,n||null)}function $(t){t.parentNode.removeChild(t)}function k(t){return document.createElement(t)}function C(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function T(t){return document.createTextNode(t)}function L(){return T(" ")}function M(){return T("")}function S(t,e,n,s){return t.addEventListener(e,n,s),()=>t.removeEventListener(e,n,s)}function H(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function _(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}function P(t,e,n,s){t.style.setProperty(e,n,s?"important":"")}function E(t,e,n){t.classList[n?"add":"remove"](e)}class B{constructor(t=null){this.a=t,this.e=this.n=null}m(t,e,n=null){this.e||(this.e=k(e.nodeName),this.t=e,this.h(t)),this.i(n)}h(t){this.e.innerHTML=t,this.n=Array.from(this.e.childNodes)}i(t){for(let e=0;e<this.n.length;e+=1)v(this.t,this.n[e],t)}p(t){this.d(),this.h(t),this.i(this.a)}d(){this.n.forEach($)}}const A=new Set;let q,I=0;function O(t,e,n,s,a,o,l,r=0){const i=16.666/s;let c="{\n";for(let t=0;t<=1;t+=i){const s=e+(n-e)*o(t);c+=100*t+`%{${l(s,1-s)}}\n`}const d=c+`100% {${l(n,1-n)}}\n}`,p=`__svelte_${function(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}(d)}_${r}`,u=t.ownerDocument;A.add(u);const h=u.__svelte_stylesheet||(u.__svelte_stylesheet=u.head.appendChild(k("style")).sheet),m=u.__svelte_rules||(u.__svelte_rules={});m[p]||(m[p]=!0,h.insertRule(`@keyframes ${p} ${d}`,h.cssRules.length));const g=t.style.animation||"";return t.style.animation=`${g?`${g}, `:""}${p} ${s}ms linear ${a}ms 1 both`,I+=1,p}function D(t,e){const n=(t.style.animation||"").split(", "),s=n.filter(e?t=>t.indexOf(e)<0:t=>-1===t.indexOf("__svelte")),a=n.length-s.length;a&&(t.style.animation=s.join(", "),I-=a,I||y((()=>{I||(A.forEach((t=>{const e=t.__svelte_stylesheet;let n=e.cssRules.length;for(;n--;)e.deleteRule(n);t.__svelte_rules={}})),A.clear())})))}function N(t){q=t}function G(t){(function(){if(!q)throw new Error("Function called outside component initialization");return q})().$$.on_mount.push(t)}const Y=[],z=[],R=[],F=[],U=Promise.resolve();let W=!1;function J(t){R.push(t)}let V=!1;const Z=new Set;function K(){if(!V){V=!0;do{for(let t=0;t<Y.length;t+=1){const e=Y[t];N(e),Q(e.$$)}for(N(null),Y.length=0;z.length;)z.pop()();for(let t=0;t<R.length;t+=1){const e=R[t];Z.has(e)||(Z.add(e),e())}R.length=0}while(Y.length);for(;F.length;)F.pop()();W=!1,V=!1,Z.clear()}}function Q(t){if(null!==t.fragment){t.update(),o(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(J)}}let X;function tt(t,e,n){t.dispatchEvent(function(t,e){const n=document.createEvent("CustomEvent");return n.initCustomEvent(t,!1,!1,e),n}(`${e?"intro":"outro"}${n}`))}const et=new Set;let nt;function st(){nt={r:0,c:[],p:nt}}function at(){nt.r||o(nt.c),nt=nt.p}function ot(t,e){t&&t.i&&(et.delete(t),t.i(e))}function lt(t,e,n,s){if(t&&t.o){if(et.has(t))return;et.add(t),nt.c.push((()=>{et.delete(t),s&&(n&&t.d(1),s())})),t.o(e)}}const rt={duration:0};function it(n,s,a,r){let i=s(n,a),c=r?0:1,d=null,p=null,u=null;function h(){u&&D(n,u)}function m(t,e){const n=t.b-c;return e*=Math.abs(n),{a:c,b:t.b,d:n,duration:e,start:t.start,end:t.start+e,group:t.group}}function g(s){const{delay:a=0,duration:l=300,easing:r=e,tick:g=t,css:y}=i||rt,b={start:f()+a,b:s};s||(b.group=nt,nt.r+=1),d||p?p=b:(y&&(h(),u=O(n,c,s,l,a,r,y)),s&&g(0,1),d=m(b,l),J((()=>tt(n,s,"start"))),w((t=>{if(p&&t>p.start&&(d=m(p,l),p=null,tt(n,d.b,"start"),y&&(h(),u=O(n,c,d.b,d.duration,0,r,i.css))),d)if(t>=d.end)g(c=d.b,1-c),tt(n,d.b,"end"),p||(d.b?h():--d.group.r||o(d.group.c)),d=null;else if(t>=d.start){const e=t-d.start;c=d.a+d.d*r(e/d.duration),g(c,1-c)}return!(!d&&!p)})))}return{run(t){l(i)?(X||(X=Promise.resolve(),X.then((()=>{X=null}))),X).then((()=>{i=i(),g(t)})):g(t)},end(){h(),d=p=null}}}const ct="undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global;function dt(t){t&&t.c()}function pt(t,e,n){const{fragment:a,on_mount:r,on_destroy:i,after_update:c}=t.$$;a&&a.m(e,n),J((()=>{const e=r.map(s).filter(l);i?i.push(...e):o(e),t.$$.on_mount=[]})),c.forEach(J)}function ut(t,e){const n=t.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function ht(t,e){-1===t.$$.dirty[0]&&(Y.push(t),W||(W=!0,U.then(K)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function mt(e,n,s,l,r,i,c=[-1]){const d=q;N(e);const p=n.props||{},u=e.$$={fragment:null,ctx:null,props:i,update:t,not_equal:r,bound:a(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(d?d.$$.context:[]),callbacks:a(),dirty:c,skip_bound:!1};let h=!1;if(u.ctx=s?s(e,p,((t,n,...s)=>{const a=s.length?s[0]:n;return u.ctx&&r(u.ctx[t],u.ctx[t]=a)&&(!u.skip_bound&&u.bound[t]&&u.bound[t](a),h&&ht(e,t)),n})):[],u.update(),h=!0,o(u.before_update),u.fragment=!!l&&l(u.ctx),n.target){if(n.hydrate){const t=function(t){return Array.from(t.childNodes)}(n.target);u.fragment&&u.fragment.l(t),t.forEach($)}else u.fragment&&u.fragment.c();n.intro&&ot(e.$$.fragment),pt(e,n.target,n.anchor),K()}N(d)}class gt{$destroy(){ut(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(t){var e;this.$$set&&(e=t,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const ft=[];function yt(e,n=t){let s;const a=[];function o(t){if(r(e,t)&&(e=t,s)){const t=!ft.length;for(let t=0;t<a.length;t+=1){const n=a[t];n[1](),ft.push(n,e)}if(t){for(let t=0;t<ft.length;t+=2)ft[t][0](ft[t+1]);ft.length=0}}}return{set:o,update:function(t){o(t(e))},subscribe:function(l,r=t){const i=[l,r];return a.push(i),1===a.length&&(s=n(o)||t),l(e),()=>{const t=a.indexOf(i);-1!==t&&a.splice(t,1),0===a.length&&(s(),s=null)}}}}function bt(t){return t<.5?4*t*t*t:.5*Math.pow(2*t-2,3)+1}function xt(t){const e=t-1;return e*e*e+1}function wt(t){return"[object Date]"===Object.prototype.toString.call(t)}function jt(t,e){if(t===e||t!=t)return()=>t;const n=typeof t;if(n!==typeof e||Array.isArray(t)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(t)){const n=e.map(((e,n)=>jt(t[n],e)));return t=>n.map((e=>e(t)))}if("object"===n){if(!t||!e)throw new Error("Object cannot be null");if(wt(t)&&wt(e)){t=t.getTime();const n=(e=e.getTime())-t;return e=>new Date(t+e*n)}const n=Object.keys(e),s={};return n.forEach((n=>{s[n]=jt(t[n],e[n])})),t=>{const e={};return n.forEach((n=>{e[n]=s[n](t)})),e}}if("number"===n){const n=e-t;return e=>t+e*n}throw new Error(`Cannot interpolate ${n} values`)}function vt(t,s={}){const a=yt(t);let o,l=t;function r(r,i){if(null==t)return a.set(t=r),Promise.resolve();l=r;let c=o,d=!1,{delay:p=0,duration:u=400,easing:h=e,interpolate:m=jt}=n(n({},s),i);if(0===u)return c&&(c.abort(),c=null),a.set(t=l),Promise.resolve();const g=f()+p;let y;return o=w((e=>{if(e<g)return!0;d||(y=m(t,r),"function"==typeof u&&(u=u(t,r)),d=!0),c&&(c.abort(),c=null);const n=e-g;return n>u?(a.set(t=r),!1):(a.set(t=y(h(n/u))),!0)})),o.promise}return{set:r,update:(e,n)=>r(e(l,t),n),subscribe:a.subscribe}}function $t(e){let n;return{c(){n=k("div"),n.innerHTML='<div class="banner svelte-jrdkux"><p class="svelte-jrdkux"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-jrdkux"/></p> \n<p class="svelte-jrdkux">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-jrdkux"><a href="introduction" class="svelte-jrdkux">Introduction</a> \n<a href="getting-started" class="svelte-jrdkux">Getting Started</a></div>',H(n,"class","hero svelte-jrdkux")},m(t,e){v(t,n,e)},p:t,i:t,o:t,d(t){t&&$(n)}}}const kt={layout:"no_sidebar",title:!1};class Ct extends gt{constructor(t){super(),mt(this,t,null,$t,r,{})}}function Tt(e){let n,s,a;return{c(){n=k("h1"),n.textContent="Page not found!",s=L(),a=k("p"),a.innerHTML='<a href="/">Go to start page</a>',H(n,"id","page-not-found"),H(n,"class","svelte-aiue6m"),H(a,"class","svelte-aiue6m")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a)}}}const Lt={layout:"no_sidebar"};const Mt=t=>({}),St=t=>({}),Ht=t=>({}),_t=t=>({});function Pt(t){let e,n,s,a,o;const l=t[1].result,r=d(l,t,t[0],_t),i=t[1].code,c=d(i,t,t[0],St);return{c(){e=k("div"),n=k("div"),r&&r.c(),s=L(),a=k("div"),c&&c.c(),H(n,"class","result"),H(a,"class","code"),H(e,"class","example")},m(t,l){v(t,e,l),j(e,n),r&&r.m(n,null),j(e,s),j(e,a),c&&c.m(a,null),o=!0},p(t,[e]){r&&r.p&&1&e&&u(r,l,t,t[0],e,Ht,_t),c&&c.p&&1&e&&u(c,i,t,t[0],e,Mt,St)},i(t){o||(ot(r,t),ot(c,t),o=!0)},o(t){lt(r,t),lt(c,t),o=!1},d(t){t&&$(e),r&&r.d(t),c&&c.d(t)}}}function Et(t,e,n){let{$$slots:s={},$$scope:a}=e;return t.$$set=t=>{"$$scope"in t&&n(0,a=t.$$scope)},[a,s]}class Bt extends gt{constructor(t){super(),mt(this,t,Et,Pt,r,{})}}function At(t){let e,n,s;return{c(){e=k("iframe"),H(e,"slot","result"),P(e,"height",t[2]+"px"),H(e,"title","Result"),H(e,"scrolling","no"),H(e,"sandbox","allow-same-origin allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),H(e,"srcdoc",t[3]),H(e,"class","svelte-y9biys")},m(a,o){v(a,e,o),t[7](e),n||(s=S(e,"load",t[4]),n=!0)},p(t,n){4&n&&P(e,"height",t[2]+"px")},d(a){a&&$(e),t[7](null),n=!1,s()}}}function qt(t){let e,n,s=t[0].trim()+"";return{c(){e=k("pre"),n=k("code"),H(e,"slot","code"),H(e,"class","hljs svelte-y9biys")},m(t,a){v(t,e,a),j(e,n),n.innerHTML=s},p(t,e){1&e&&s!==(s=t[0].trim()+"")&&(n.innerHTML=s)},d(t){t&&$(e)}}}function It(e){let n;return{c(){n=L()},m(t,e){v(t,n,e)},p:t,d(t){t&&$(n)}}}function Ot(t){let e,n;return e=new Bt({props:{$$slots:{default:[It],code:[qt],result:[At]},$$scope:{ctx:t}}}),{c(){dt(e.$$.fragment)},m(t,s){pt(e,t,s),n=!0},p(t,[n]){const s={};1031&n&&(s.$$scope={dirty:n,ctx:t}),e.$set(s)},i(t){n||(ot(e.$$.fragment,t),n=!0)},o(t){lt(e.$$.fragment,t),n=!1},d(t){ut(e,t)}}}let Dt=1;function Nt(t,e,n){let{name:s}=e,{code:a}=e,{height:o=!1}=e;const l=Number.isInteger(o);let r,i=Dt++,c=l?o:70;return window.addEventListener("message",(function(t){t.data.iframe_id&&t.data.iframe_id===i&&!l&&t.data.hasOwnProperty("HEIGHT")&&n(2,c=t.data.HEIGHT)})),t.$$set=t=>{"name"in t&&n(5,s=t.name),"code"in t&&n(0,a=t.code),"height"in t&&n(6,o=t.height)},[a,r,c,"<!doctype html>\n<html style=\"height: auto !important\">\n    <head>\n        <meta charset='utf-8'>\n        <base href='/svelte-docs/' />\n        <link rel='stylesheet' href='examples.css'>\n        <script defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>",function(){r.contentWindow.postMessage({COMPONENT:s,iframe_id:i},"*")},s,o,function(t){z[t?"unshift":"push"]((()=>{r=t,n(1,r)}))}]}class Gt extends gt{constructor(t){super(),mt(this,t,Nt,Ot,r,{name:5,code:0,height:6})}}function Yt(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j,C,T,M,S,_,P,E,A,q,I,O,D,N,G,Y,z,R,F,U,W,J,V,Z,K;return i=new Gt({props:{name:"Ex_0_0276fd32b79cfb7e64cf841f464a30b8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">&#x27;Button&#x27;</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="css">\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span>',height:!1}}),f=new Gt({props:{name:"Ex_1_0276fd32b79cfb7e64cf841f464a30b8",code:'<span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n</span>',height:!1}}),M=new Gt({props:{name:"Ex_2_0276fd32b79cfb7e64cf841f464a30b8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Modal <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./Modal.svelte&#x27;</span>;\n    <span class="hljs-keyword">let</span> open = <span class="hljs-literal">false</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;<span class="hljs-function">()=&gt;</span>open=!open&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Show Modal<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Modal</span> </span></span><span class="javascript">&#123;open&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m modal.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">Modal</span>&gt;</span></span>',height:200}}),q=new Gt({props:{name:"Ex_3_0276fd32b79cfb7e64cf841f464a30b8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;svelte-chota&#x27;</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>',height:!1}}),N=new Gt({props:{name:"Ex_4_0276fd32b79cfb7e64cf841f464a30b8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./../mylib/Button.svelte&#x27;</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>',height:!1}}),U=new Gt({props:{name:"Ex_5_0276fd32b79cfb7e64cf841f464a30b8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./Button.svelte&#x27;</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;my-button-package&#x27;</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Example code block",s=L(),a=k("p"),a.innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>.",o=L(),r=L(),dt(i.$$.fragment),c=L(),d=k("h3"),d.textContent="Hide script and/or style blocks",p=L(),u=k("p"),u.innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",h=L(),g=L(),dt(f.$$.fragment),y=L(),b=k("h3"),b.textContent="Set fixed height of the example",x=L(),w=k("p"),w.innerHTML="By default result part of the example has flexible height, which changing within content. But you can lock height with <code>height:&lt;pixels&gt;</code> modifier.",j=L(),T=L(),dt(M.$$.fragment),S=L(),_=k("h3"),_.textContent="Import in examples",P=L(),E=k("p"),E.innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",A=L(),dt(q.$$.fragment),I=L(),O=k("p"),O.textContent="Also you can import any local file by relative path according documents directory root:",D=L(),dt(N.$$.fragment),G=L(),Y=k("p"),Y.innerHTML='Other way to import local files - using aliases (see <a href="config/aliases">config.aliases</a>).',z=L(),F=L(),dt(U.$$.fragment),W=L(),J=k("h3"),J.textContent="Styling",V=L(),Z=k("p"),Z.innerHTML='Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). You can read more in the <a href="theming/examples">Theming examples</a> section.It is stored in <code>src/theme/examples.css</code> file.',H(n,"id","example-code-block"),l=new B(r),H(d,"id","hide-script-andor-style-blocks"),m=new B(g),H(b,"id","set-fixed-height-of-the-example"),C=new B(T),H(_,"id","import-in-examples"),R=new B(F),H(J,"id","styling")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m(Rt,t,e),v(t,r,e),pt(i,t,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e),v(t,h,e),m.m(Ft,t,e),v(t,g,e),pt(f,t,e),v(t,y,e),v(t,b,e),v(t,x,e),v(t,w,e),v(t,j,e),C.m(Ut,t,e),v(t,T,e),pt(M,t,e),v(t,S,e),v(t,_,e),v(t,P,e),v(t,E,e),v(t,A,e),pt(q,t,e),v(t,I,e),v(t,O,e),v(t,D,e),pt(N,t,e),v(t,G,e),v(t,Y,e),v(t,z,e),R.m(Wt,t,e),v(t,F,e),pt(U,t,e),v(t,W,e),v(t,J,e),v(t,V,e),v(t,Z,e),K=!0},p:t,i(t){K||(ot(i.$$.fragment,t),ot(f.$$.fragment,t),ot(M.$$.fragment,t),ot(q.$$.fragment,t),ot(N.$$.fragment,t),ot(U.$$.fragment,t),K=!0)},o(t){lt(i.$$.fragment,t),lt(f.$$.fragment,t),lt(M.$$.fragment,t),lt(q.$$.fragment,t),lt(N.$$.fragment,t),lt(U.$$.fragment,t),K=!1},d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),ut(i,t),t&&$(c),t&&$(d),t&&$(p),t&&$(u),t&&$(h),t&&m.d(),t&&$(g),ut(f,t),t&&$(y),t&&$(b),t&&$(x),t&&$(w),t&&$(j),t&&C.d(),t&&$(T),ut(M,t),t&&$(S),t&&$(_),t&&$(P),t&&$(E),t&&$(A),ut(q,t),t&&$(I),t&&$(O),t&&$(D),ut(N,t),t&&$(G),t&&$(Y),t&&$(z),t&&R.d(),t&&$(F),ut(U,t),t&&$(W),t&&$(J),t&&$(V),t&&$(Z)}}}const zt={},Rt='<pre><code class="language-markdown"><span class="hljs-code">    ```example\n    &lt;script&gt;\n        let name=&#x27;Button&#x27;;\n    &lt;/script&gt;\n</span>\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;\n</span>\n<span class="hljs-code">    &lt;style&gt;\n        button&#123;background: red&#125;\n    &lt;/style&gt;\n    ```</span></code></pre>\n',Ft='<pre><code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide\n    &lt;script&gt;\n        let name=&#x27;Button&#x27;;\n    &lt;/script&gt;\n</span>\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;\n</span>\n<span class="hljs-code">    &lt;style&gt;\n        button&#123;background: red&#125;\n    &lt;/style&gt;\n    ```</span></code></pre>\n',Ut='<pre><code class="language-markdown"><span class="hljs-code">    ```example height:200\n     ...\n    ```</span></code></pre>\n',Wt='<pre><code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\n<span class="hljs-attr">aliases</span>:&#123;\n    <span class="hljs-string">&#x27;./Button.svelte&#x27;</span>: <span class="hljs-string">&#x27;./../mylib/Button.svelte&#x27;</span>,\n    <span class="hljs-string">&#x27;my-button-package&#x27;</span>: <span class="hljs-string">&#x27;./../mylib/Button.svelte&#x27;</span>\n&#125;,\n...</code></pre>\n';function Jt(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j,C,T,M,S,_,P,E,A,q,I,O,D,N,G,Y,z,R,F,U;return{c(){n=k("h1"),n.textContent="Properties",s=L(),a=k("p"),a.textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=L(),l=k("p"),l.innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",r=L(),c=L(),d=k("p"),d.textContent="There are four properties:",p=L(),u=k("ol"),u.innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used?</li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",h=L(),m=k("p"),m.textContent="So lets create fancy table of properties for this component:",g=L(),y=L(),b=k("dl"),b.innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',x=L(),w=k("p"),w.textContent="Now user of your component will know all about its properties.",j=L(),C=k("h3"),C.textContent="Describing property",T=L(),M=k("ul"),M.innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",S=L(),_=k("h3"),_.textContent="Autogenerated properties",P=L(),E=k("p"),E.innerHTML='Another way to describre properties, retrieve it right from the Svelte component with <a href="https://devdocs.io/jsdoc/tags-type">JSDoc @type</a> comments. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:',A=L(),I=L(),O=k("p"),O.textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",D=L(),N=k("p"),N.textContent="Then just place a path to the this component inside Properties code block:",G=L(),z=L(),R=k("p"),R.textContent="And get the result:",F=L(),U=k("dl"),U.innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',H(n,"id","properties"),i=new B(c),f=new B(y),H(b,"class","properties"),H(C,"id","describing-property"),H(_,"id","autogenerated-properties"),q=new B(I),Y=new B(z),H(U,"class","properties")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),i.m(Zt,t,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e),v(t,h,e),v(t,m,e),v(t,g,e),f.m(Kt,t,e),v(t,y,e),v(t,b,e),v(t,x,e),v(t,w,e),v(t,j,e),v(t,C,e),v(t,T,e),v(t,M,e),v(t,S,e),v(t,_,e),v(t,P,e),v(t,E,e),v(t,A,e),q.m(Qt,t,e),v(t,I,e),v(t,O,e),v(t,D,e),v(t,N,e),v(t,G,e),Y.m(Xt,t,e),v(t,z,e),v(t,R,e),v(t,F,e),v(t,U,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&i.d(),t&&$(c),t&&$(d),t&&$(p),t&&$(u),t&&$(h),t&&$(m),t&&$(g),t&&f.d(),t&&$(y),t&&$(b),t&&$(x),t&&$(w),t&&$(j),t&&$(C),t&&$(T),t&&$(M),t&&$(S),t&&$(_),t&&$(P),t&&$(E),t&&$(A),t&&q.d(),t&&$(I),t&&$(O),t&&$(D),t&&$(N),t&&$(G),t&&Y.d(),t&&$(z),t&&$(R),t&&$(F),t&&$(U)}}}const Vt={},Zt='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#x27;text&#x27;</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',Kt='<pre><code class="language-markdown"><span class="hljs-code">    ```properties\n    name | Name of the input | string\n    type | Type of the input | &#x27;text&#x27;,&#x27;number&#x27;,&#x27;range&#x27;,&#x27;date&#x27;(&#x27;text)\n    disabled | Should the input be disabled | bool(false)\n    size | Size of the input | number/string(1)\n    ```</span></code></pre>\n',Qt='<pre><code class="language-html">// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-comment">/** <span class="hljs-doctag">@type <span class="hljs-type">&#123;string&#125;</span> </span>Name of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/** <span class="hljs-doctag">@type <span class="hljs-type">&#123;(&#x27;text&#x27;,&#x27;number&#x27;,&#x27;range&#x27;,&#x27;date&#x27;)&#125;</span> </span>Type of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#x27;text&#x27;</span>;\n    <span class="hljs-comment">/** \n     * Should the input be disabled\n     * <span class="hljs-doctag">@type <span class="hljs-type">&#123;bool&#125;</span> </span>\n     */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/** <span class="hljs-doctag">@type <span class="hljs-type">&#123;(number|string)&#125;</span> </span>Size of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',Xt='<pre><code class="language-markdown"><span class="hljs-code">    ```properties\n    ./../mylib/Input.svelte\n    ```</span></code></pre>\n';function te(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j,C,T;return{c(){n=k("h1"),n.textContent="aliases option",s=L(),a=k("p"),a.innerHTML="Option <code>aliases</code> is the list of aliases for you local component&#39;s paths.",o=L(),l=k("p"),l.textContent="Suppose you have following structure of your project:",r=L(),c=L(),d=k("p"),d.innerHTML="And you want to import <code>mycomponents/Counter.svelte</code> in your Example code block(or just in the page), you may use relative path(from the docs root) like this:",p=L(),h=L(),m=k("p"),m.textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",g=L(),f=k("p"),f.innerHTML="So you can add <em>virtual package</em> using <code>aliases</code> option:",y=L(),x=L(),w=k("p"),w.innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",j=L(),T=M(),H(n,"id","aliases-option"),i=new B(c),u=new B(h),b=new B(x),C=new B(T)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),i.m(ne,t,e),v(t,c,e),v(t,d,e),v(t,p,e),u.m(se,t,e),v(t,h,e),v(t,m,e),v(t,g,e),v(t,f,e),v(t,y,e),b.m(ae,t,e),v(t,x,e),v(t,w,e),v(t,j,e),C.m(oe,t,e),v(t,T,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&i.d(),t&&$(c),t&&$(d),t&&$(p),t&&u.d(),t&&$(h),t&&$(m),t&&$(g),t&&$(f),t&&$(y),t&&b.d(),t&&$(x),t&&$(w),t&&$(j),t&&$(T),t&&C.d()}}}const ee={},ne='<pre><code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code></pre>\n',se='<pre><code class="language-markdown"><span class="hljs-code">    ```example\n    &lt;script&gt;\n        import Counter from &#x27;./../mycomponent/Counter.svelte&#x27;;\n    &lt;/script&gt;\n    &lt;Counter /&gt;\n    ```</span></code></pre>\n',ae='<pre><code class="language-javascript">aliases:&#123;\n    ...\n    <span class="hljs-string">&quot;my-counter-package&quot;</span>: <span class="hljs-string">&quot;./../mycomponent/Counter.svelte&quot;</span>,\n    ...\n&#125;</code></pre>\n',oe='<pre><code class="language-markdown"><span class="hljs-code">    ```example\n    &lt;script&gt;\n        import Counter from &#x27;my-counter-package&#x27;;\n    &lt;/script&gt;\n    &lt;Counter /&gt;\n    ```</span></code></pre>\n';function le(e){let n,s,a,o,l,r,i,c,d;return{c(){n=k("h1"),n.textContent="Basepath option",s=L(),a=k("p"),a.innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site.",o=L(),l=k("p"),l.innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>.',r=L(),i=k("p"),i.innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',c=L(),d=k("blockquote"),d.innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>",H(n,"id","basepath-option")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d)}}}const re={};function ie(e){let n,s,a;return{c(){n=k("h1"),n.textContent="Configuration",s=L(),a=k("p"),a.innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar.",H(n,"id","configuration")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a)}}}const ce={};function de(e){let n,s,a,o,l,r,i;return{c(){n=k("h1"),n.textContent="Pathes option",s=L(),a=k("p"),a.textContent="There are two pathes you can change.",o=L(),l=k("ul"),l.innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",r=L(),i=k("blockquote"),i.innerHTML="<p>In most cases you don&#39;t need to change these options.</p>",H(n,"id","pathes-option")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i)}}}const pe={};function ue(e){let n,s,a,o,l,r,i,c,d,p;return{c(){n=k("h1"),n.textContent="Preprocess option",s=L(),a=k("p"),a.innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=L(),r=L(),i=k("p"),i.textContent="Then all your examples will be preprocessed:",c=L(),p=M(),H(n,"id","preprocess-option"),l=new B(r),d=new B(p)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m(me,t,e),v(t,r,e),v(t,i,e),v(t,c,e),d.m(ge,t,e),v(t,p,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),t&&$(i),t&&$(c),t&&$(p),t&&d.d()}}}const he={},me='<pre><code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;svelte-preprocess-markdown&#x27;</span>);\n\n<span class="hljs-built_in">module</span>.exports=&#123;\n    ...\n    <span class="hljs-attr">preprocess</span>: [\n        ...\n        markdown(&#123;<span class="hljs-attr">filetype</span>: <span class="hljs-string">&#x27;svelte&#x27;</span>&#125;),\n        ...\n    ]\n    ...\n&#125;</code></pre>\n',ge='<pre><code class="language-markdown"><span class="hljs-code">    ```example\n    &lt;script&gt;\n    let name = &#x27;World&#x27;;\n    &lt;/script&gt;\n</span>\n<span class="hljs-code">    # Hello, &#123;name&#125;!\n    ```</span></code></pre>\n';function fe(e){let n,s,a,o,l,r,i,c,d,p,u;return{c(){n=k("h1"),n.textContent="Theme option",s=L(),a=k("p"),a.textContent="Choose theme for documentation site. List of avialable themes you can find on the sidebar.",o=L(),r=L(),i=k("p"),i.textContent="Also you can write path to the local dir here:",c=L(),p=L(),u=k("blockquote"),u.innerHTML='<p>In this case, it should be directory with <a href="theming/custom-theme">valid theme content</a>.</p>',H(n,"id","theme-option"),l=new B(r),d=new B(p)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m(be,t,e),v(t,r,e),v(t,i,e),v(t,c,e),d.m(xe,t,e),v(t,p,e),v(t,u,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),t&&$(i),t&&$(c),t&&d.d(),t&&$(p),t&&$(u)}}}const ye={},be='<pre><code class="language-js">...\n<span class="hljs-attr">theme</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n...</code></pre>\n',xe='<pre><code class="language-js">...\n<span class="hljs-attr">theme</span>: <span class="hljs-string">&#x27;./src/my-own-theme&#x27;</span>,\n...</code></pre>\n';function we(e){let n,s,a,o,l;return{c(){n=k("h1"),n.textContent="Title option",s=L(),a=k("p"),a.textContent="There are two properties which can be changed:",o=L(),l=k("ul"),l.innerHTML="<li><p><code>title.main</code> - this is constant part of the page&#39;s title.</p></li> \n<li><p><code>title.header</code> - if <code>true</code>, content of the first header on the page will be added before <code>title.main</code> in the page&#39;s title. It will look up for 1 and 2 level markdown or HTML headers on the current page.</p></li>",H(n,"id","title-option")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l)}}}const je={};function ve(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j,C,T,M,S,_,P,E,A,q,I,O;return{c(){n=k("h1"),n.textContent="Getting started",s=L(),a=k("h3"),a.textContent="Initialize Svelte-docs",o=L(),l=k("p"),l.textContent="Just run this command in the root directory of your project:",r=L(),c=L(),d=k("p"),d.textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",p=L(),u=k("h3"),u.textContent="Edit your docs",h=L(),m=k("p"),m.textContent="Switch to the created directory, ex.:",g=L(),y=L(),b=k("p"),b.textContent="Run docs in development mode on the local server:",x=L(),j=L(),C=k("p"),C.innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',T=L(),M=k("p"),M.innerHTML="Now you can edit files in <code>src/pages</code> directory and browser will be reloaded on each save.",S=L(),_=k("h3"),_.textContent="Build the documentation site",P=L(),E=k("p"),E.textContent="As soon as documentation ready for release you need to run the build:",A=L(),I=L(),O=k("p"),O.innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.',H(n,"id","getting-started"),H(a,"id","initialize-svelte-docs"),i=new B(c),H(u,"id","edit-your-docs"),f=new B(y),w=new B(j),H(_,"id","build-the-documentation-site"),q=new B(I)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),i.m(ke,t,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e),v(t,h,e),v(t,m,e),v(t,g,e),f.m(Ce,t,e),v(t,y,e),v(t,b,e),v(t,x,e),w.m(Te,t,e),v(t,j,e),v(t,C,e),v(t,T,e),v(t,M,e),v(t,S,e),v(t,_,e),v(t,P,e),v(t,E,e),v(t,A,e),q.m(Le,t,e),v(t,I,e),v(t,O,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&i.d(),t&&$(c),t&&$(d),t&&$(p),t&&$(u),t&&$(h),t&&$(m),t&&$(g),t&&f.d(),t&&$(y),t&&$(b),t&&$(x),t&&w.d(),t&&$(j),t&&$(C),t&&$(T),t&&$(M),t&&$(S),t&&$(_),t&&$(P),t&&$(E),t&&$(A),t&&q.d(),t&&$(I),t&&$(O)}}}const $e={},ke='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n',Ce='<pre><code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code></pre>\n',Te='<pre><code class="language-bash">npm run dev</code></pre>\n',Le='<pre><code class="language-bash">npm run build</code></pre>\n';function Me(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j,C,T,M,S,_,P,E,A,q,I,O,D;return _=new Gt({props:{name:"Ex_0_92fe3797586e0b4bbad7777374b678ca",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Introducing",s=L(),a=k("h2"),a.textContent="Features",o=L(),l=k("p"),l.innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',r=L(),i=k("blockquote"),i.innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',c=L(),d=k("ul"),d.innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',p=L(),u=k("h2"),u.textContent="Zero-config",h=L(),m=k("p"),m.textContent="Just run:",g=L(),y=L(),b=k("p"),b.innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',x=L(),w=k("h2"),w.textContent="Built-ins",j=L(),C=k("h3"),C.textContent="Examples",T=L(),M=k("p"),M.textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",S=L(),dt(_.$$.fragment),P=L(),E=k("h3"),E.textContent="Properties",A=L(),q=k("p"),q.innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>auto-generated</em>  from the component&#39;s <code>*.svelte</code> file.",I=L(),O=k("dl"),O.innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",H(n,"id","introducing"),H(a,"id","features"),H(u,"id","zero-config"),f=new B(y),H(w,"id","built-ins"),H(C,"id","examples"),H(E,"id","properties"),H(O,"class","properties")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e),v(t,h,e),v(t,m,e),v(t,g,e),f.m(He,t,e),v(t,y,e),v(t,b,e),v(t,x,e),v(t,w,e),v(t,j,e),v(t,C,e),v(t,T,e),v(t,M,e),v(t,S,e),pt(_,t,e),v(t,P,e),v(t,E,e),v(t,A,e),v(t,q,e),v(t,I,e),v(t,O,e),D=!0},p:t,i(t){D||(ot(_.$$.fragment,t),D=!0)},o(t){lt(_.$$.fragment,t),D=!1},d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d),t&&$(p),t&&$(u),t&&$(h),t&&$(m),t&&$(g),t&&f.d(),t&&$(y),t&&$(b),t&&$(x),t&&$(w),t&&$(j),t&&$(C),t&&$(T),t&&$(M),t&&$(S),ut(_,t),t&&$(P),t&&$(E),t&&$(A),t&&$(q),t&&$(I),t&&$(O)}}}const Se={},He='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n';function _e(e){let n,s,a,o,l,r,i,c,d,p,u,h,m;return{c(){n=k("h1"),n.textContent="Publishing on Github Pages",s=L(),a=k("p"),a.innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project.",o=L(),l=k("p"),l.textContent="To do it just run command in you documents source directory at any time:",r=L(),c=L(),d=k("p"),d.textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",p=L(),u=k("blockquote"),u.innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",h=L(),m=k("blockquote"),m.innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>',H(n,"id","publishing-on-github-pages"),i=new B(c)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),i.m(Ee,t,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e),v(t,h,e),v(t,m,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&i.d(),t&&$(c),t&&$(d),t&&$(p),t&&$(u),t&&$(h),t&&$(m)}}}const Pe={},Ee='<pre><code class="language-bash">npm run deploy</code></pre>\n';function Be(e){let n,s,a,o,l,r,i;return{c(){n=k("h1"),n.textContent="Custom theme",s=L(),a=k("p"),a.innerHTML='You can make your own theme and use its directory path as <a href="config/theme">config.theme</a> value. There are several files which must exist:',o=L(),r=L(),i=k("p"),i.innerHTML='The simplest way is to copy one of the defaut themes and change it as you want. You can find them in the <code>./node_modules/@svelte-docs/themes</code> directory or downaload from the <a href="https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/AlexxNB/svelte-docs/tree/master/packages/themes">Github</a>',H(n,"id","custom-theme"),l=new B(r)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m(qe,t,e),v(t,r,e),v(t,i,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),t&&$(i)}}}const Ae={},qe='<pre><code class="language-bash">themedir\n├── components\n|   ├── Layout.svelte        <span class="hljs-comment"># Page layout</span>\n|   ├── Error.svelte         <span class="hljs-comment"># Error page layout</span>\n|   ├── Example.svelte       <span class="hljs-comment"># Example component</span>\n|   └── Properties.svelte    <span class="hljs-comment"># Properties component</span>\n├── info.md                <span class="hljs-comment"># Some info about the theme</span>\n└── style.css                <span class="hljs-comment"># CSS Styles</span></code></pre>\n';function Ie(e){let n,s,a,o,l,r,i,c,d,p,u;return{c(){n=k("h1"),n.textContent="Examples view CSS",s=L(),a=k("p"),a.innerHTML="Examples view(where the result shows) use CSS styles which are isolated from theme of the site. They are situated in the <code>src/examples.css</code> file.",o=L(),l=k("h2"),l.textContent="import styles",r=L(),i=k("p"),i.textContent="You can include CSS file from the local directory, npm package or from CDN:",c=L(),p=L(),u=k("blockquote"),u.innerHTML="<p>When you use <code>:global()</code> or <code>@import</code> keywords in one example, they will affect on the all examples, because all examples styles bundeled in the single CSS file.</p>",H(n,"id","examples-view-css"),H(l,"id","import-styles"),d=new B(p)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),d.m(De,t,e),v(t,p,e),v(t,u,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&d.d(),t&&$(p),t&&$(u)}}}const Oe={},De='<pre><code class="language-css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./../mystyles.css&#x27;</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./node_modules/my-favorite-css-framework&#x27;</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;https://anycdn.com/my-favorite-css-framework&#x27;</span>;</code></pre>\n';function Ne(e){let n,s,a,o,l,r,i,c,d,p,u;return{c(){n=k("p"),n.innerHTML='Theme based on <a href="https://svelte.dev/docs">offical Svelte documentation site</a>.',s=L(),a=k("p"),a.innerHTML="<em>by Alexey Schebelev</em>",o=L(),l=k("h2"),l.textContent="Theme variables",r=L(),i=k("table"),i.innerHTML="<thead><tr><th>Variable</th> \n<th>Default</th> \n<th>Comment</th></tr></thead> \n<tbody><tr><td><code>--font</code></td> \n<td>&quot;Overpass&quot;, sans-serif</td> \n<td></td></tr> \n<tr><td><code>--font-mono</code></td> \n<td>&quot;Fira Mono&quot;, monospace</td> \n<td></td></tr> \n<tr><td><code>--primary</code></td> \n<td>#ff3e00</td> \n<td></td></tr> \n<tr><td><code>--secondary</code></td> \n<td>#676778</td> \n<td></td></tr> \n<tr><td><code>--dark</code></td> \n<td>#34343d</td> \n<td></td></tr> \n<tr><td><code>--light</code></td> \n<td>#c0c0d8</td> \n<td></td></tr> \n<tr><td><code>--white</code></td> \n<td>#ffffff</td> \n<td></td></tr> \n<tr><td><code>--code</code></td> \n<td>#f6fafd</td> \n<td></td></tr> \n<tr><td><code>--text</code></td> \n<td>--dark</td> \n<td></td></tr> \n<tr><td><code>--text-sidebar</code></td> \n<td>#d4d4d4</td> \n<td></td></tr> \n<tr><td><code>--text-sidebar-links</code></td> \n<td>--white</td> \n<td></td></tr> \n<tr><td><code>--topbar-height</code></td> \n<td>50px</td> \n<td></td></tr> \n<tr><td><code>--sidebar-width</code></td> \n<td>300px</td> \n<td></td></tr> \n<tr><td><code>--example-border</code></td> \n<td>--light</td> \n<td>Border color of the example block</td></tr> \n<tr><td><code>--props-border</code></td> \n<td>--light</td> \n<td>Colors of the properties block</td></tr> \n<tr><td><code>--props-devider</code></td> \n<td>--code</td> \n<td></td></tr> \n<tr><td><code>--props-types-bg</code></td> \n<td>--code</td> \n<td></td></tr> \n<tr><td><code>--props-types-border</code></td> \n<td>--light</td> \n<td></td></tr> \n<tr><td><code>--props-types-text</code></td> \n<td>--hl-keyword</td> \n<td></td></tr> \n<tr><td><code>--props-oneof-text</code></td> \n<td>--hl-string</td> \n<td></td></tr> \n<tr><td><code>--props-default-text</code></td> \n<td>--light</td> \n<td></td></tr> \n<tr><td><code>--hl-background</code></td> \n<td>--code</td> \n<td>Code highlighting colors</td></tr> \n<tr><td><code>--hl-text</code></td> \n<td>#505050</td> \n<td></td></tr> \n<tr><td><code>--hl-comment</code></td> \n<td>#8da4bc</td> \n<td></td></tr> \n<tr><td><code>--hl-keyword</code></td> \n<td>#3c87b9</td> \n<td></td></tr> \n<tr><td><code>--hl-string</code></td> \n<td>#a18851</td> \n<td></td></tr> \n<tr><td><code>--hl-number</code></td> \n<td>#76a562</td> \n<td></td></tr> \n<tr><td><code>--hl-name</code></td> \n<td>#c36031</td> \n<td></td></tr> \n<tr><td><code>--hl-attr</code></td> \n<td>#a18851</td> \n<td></td></tr> \n<tr><td><code>--hl-builtin</code></td> \n<td>#505050</td> \n<td></td></tr></tbody>",c=L(),d=k("h2"),d.textContent="Layouts",p=L(),u=k("table"),u.innerHTML="<thead><tr><th>Name</th> \n<th>Description</th></tr></thead> \n<tbody><tr><td><code>default</code></td> \n<td>Layout with topbar, sidebar on the left and content</td></tr> \n<tr><td><code>no_sidebar</code></td> \n<td>Layout without sidebar</td></tr></tbody>",H(l,"id","theme-variables"),H(d,"id","layouts")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d),t&&$(p),t&&$(u)}}}class Ge extends gt{constructor(t){super(),mt(this,t,null,Ne,r,{})}}function Ye(e){let n,s,a,o;return a=new Ge({}),{c(){n=k("h1"),n.textContent="Default",s=L(),dt(a.$$.fragment),H(n,"id","default")},m(t,e){v(t,n,e),v(t,s,e),pt(a,t,e),o=!0},p:t,i(t){o||(ot(a.$$.fragment,t),o=!0)},o(t){lt(a.$$.fragment,t),o=!1},d(t){t&&$(n),t&&$(s),ut(a,t)}}}const ze={};function Re(e){let n,s,a,o,l,r,i,c,d;return{c(){n=k("p"),n.innerHTML="Light and clean theme \n<em>by Alexey Schebelev</em>",s=L(),a=k("h2"),a.textContent="Theme variables",o=L(),l=k("table"),l.innerHTML="<thead><tr><th>Variable</th> \n<th>Default</th> \n<th>Comment</th></tr></thead> \n<tbody><tr><td><code>--font</code></td> \n<td>-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol</td> \n<td></td></tr> \n<tr><td><code>--font-mono</code></td> \n<td>SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace</td> \n<td></td></tr> \n<tr><td><code>--primary</code></td> \n<td>#5BC9C3</td> \n<td></td></tr> \n<tr><td><code>--secondary</code></td> \n<td>#B1B1B3</td> \n<td></td></tr> \n<tr><td><code>--dark</code></td> \n<td>#1A202C</td> \n<td></td></tr> \n<tr><td><code>--light</code></td> \n<td>#E2E8F0</td> \n<td></td></tr> \n<tr><td><code>--white</code></td> \n<td>#ffffff</td> \n<td></td></tr> \n<tr><td><code>--code</code></td> \n<td>#011627</td> \n<td></td></tr> \n<tr><td><code>--tag</code></td> \n<td>#FEEBC8</td> \n<td></td></tr> \n<tr><td><code>--tag-border</code></td> \n<td>#fdd58a</td> \n<td></td></tr> \n<tr><td><code>--tag-text</code></td> \n<td>#DD6B20</td> \n<td></td></tr> \n<tr><td><code>--text</code></td> \n<td>--dark</td> \n<td></td></tr> \n<tr><td><code>--topbar-height</code></td> \n<td>50px</td> \n<td></td></tr> \n<tr><td><code>--sidebar-width</code></td> \n<td>250px</td> \n<td></td></tr> \n<tr><td><code>--quote</code></td> \n<td>--tag</td> \n<td></td></tr> \n<tr><td><code>--quote-side</code></td> \n<td>--tag-text</td> \n<td></td></tr> \n<tr><td><code>--example-border</code></td> \n<td>--light</td> \n<td>Border color of the example block</td></tr> \n<tr><td><code>--props-border</code></td> \n<td>--light</td> \n<td>Colors of the properties block</td></tr> \n<tr><td><code>--props-devider</code></td> \n<td>--code</td> \n<td></td></tr> \n<tr><td><code>--props-types-bg</code></td> \n<td>--tag</td> \n<td></td></tr> \n<tr><td><code>--props-types-border</code></td> \n<td>--tag-border</td> \n<td></td></tr> \n<tr><td><code>--props-types-text</code></td> \n<td>--tag-text</td> \n<td></td></tr> \n<tr><td><code>--props-oneof-text</code></td> \n<td>--hl-builtin</td> \n<td></td></tr> \n<tr><td><code>--props-default-text</code></td> \n<td>--light</td> \n<td></td></tr> \n<tr><td><code>--hl-background</code></td> \n<td>--code</td> \n<td>Code highlighting colors</td></tr> \n<tr><td><code>--hl-text</code></td> \n<td>#D6DEEB</td> \n<td></td></tr> \n<tr><td><code>--hl-comment</code></td> \n<td>#637777</td> \n<td></td></tr> \n<tr><td><code>--hl-keyword</code></td> \n<td>#7FDBCA</td> \n<td></td></tr> \n<tr><td><code>--hl-string</code></td> \n<td>#ADDB67</td> \n<td></td></tr> \n<tr><td><code>--hl-number</code></td> \n<td>#F78C6C</td> \n<td></td></tr> \n<tr><td><code>--hl-name</code></td> \n<td>#FFCB8B</td> \n<td></td></tr> \n<tr><td><code>--hl-attr</code></td> \n<td>#ADDB67</td> \n<td></td></tr> \n<tr><td><code>--hl-builtin</code></td> \n<td>#8B6CAF</td> \n<td></td></tr></tbody>",r=L(),i=k("h2"),i.textContent="Layouts",c=L(),d=k("table"),d.innerHTML="<thead><tr><th>Name</th> \n<th>Description</th></tr></thead> \n<tbody><tr><td><code>default</code></td> \n<td>Layout with topbar, sidebar on the left and content</td></tr> \n<tr><td><code>no_sidebar</code></td> \n<td>Layout without sidebar</td></tr></tbody>",H(a,"id","theme-variables"),H(i,"id","layouts")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d)}}}class Fe extends gt{constructor(t){super(),mt(this,t,null,Re,r,{})}}function Ue(e){let n,s,a,o;return a=new Fe({}),{c(){n=k("h1"),n.textContent="Light",s=L(),dt(a.$$.fragment),H(n,"id","light")},m(t,e){v(t,n,e),v(t,s,e),pt(a,t,e),o=!0},p:t,i(t){o||(ot(a.$$.fragment,t),o=!0)},o(t){lt(a.$$.fragment,t),o=!1},d(t){t&&$(n),t&&$(s),ut(a,t)}}}const We={};function Je(e){let n,s,a,o,l,r,i,c,d,p,u,h;return{c(){n=k("h1"),n.textContent="Theme tuning",s=L(),a=k("p"),a.textContent="Each theme allows to tune some predefined CSS variables which are listed in themes descriptions.",o=L(),l=k("p"),l.innerHTML="Add values you want to change into the <code>src/theme.css</code> as shown below:",r=L(),c=L(),d=k("p"),d.textContent="Also you may write your own CSS styles there, they will overwrite default styles for same selectors:",p=L(),h=M(),H(n,"id","theme-tuning"),i=new B(c),u=new B(h)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),i.m(Ze,t,e),v(t,c,e),v(t,d,e),v(t,p,e),u.m(Ke,t,e),v(t,h,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&i.d(),t&&$(c),t&&$(d),t&&$(p),t&&$(h),t&&u.d()}}}const Ve={},Ze='<pre><code class="language-css"><span class="hljs-selector-pseudo">:root</span>&#123;\n    <span class="hljs-attribute">--primary</span>: <span class="hljs-number">#009225</span>;\n    <span class="hljs-attribute">--secondary</span>: <span class="hljs-number">#3f3f70</span>;\n&#125;</code></pre>\n',Ke='<pre><code class="language-css"><span class="hljs-selector-tag">h1</span>&#123;\n    <span class="hljs-attribute">color</span>: red;\n    <span class="hljs-attribute">text-transform</span>: uppercase;\n&#125;</code></pre>\n';function Qe(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w;return{c(){n=k("h1"),n.textContent="Theming",s=L(),a=k("p"),a.innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=L(),l=k("h3"),l.textContent="Themes",r=L(),i=k("p"),i.innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository.',c=L(),d=k("h3"),d.textContent="Colors",p=L(),u=k("p"),u.innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",h=L(),m=k("h3"),m.textContent="Styles",g=L(),f=k("p"),f.innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",y=L(),b=k("h3"),b.textContent="Layout",x=L(),w=k("p"),w.innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do.",H(n,"id","theming"),H(l,"id","themes"),H(d,"id","colors"),H(m,"id","styles"),H(b,"id","layout")},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e),v(t,h,e),v(t,m,e),v(t,g,e),v(t,f,e),v(t,y,e),v(t,b,e),v(t,x,e),v(t,w,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d),t&&$(p),t&&$(u),t&&$(h),t&&$(m),t&&$(g),t&&$(f),t&&$(y),t&&$(b),t&&$(x),t&&$(w)}}}const Xe={};function tn(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j,C,T,S,_,P,E,A,q,I,O,D,N,G,Y,z,R,F,U,W,J,V,Z,K,Q;return{c(){n=k("h1"),n.textContent="Includes",s=L(),a=k("p"),a.innerHTML="In the <code>src/includes</code> directory live little MDSv components which you can include in any page you want. There are some default files used by theme:",o=L(),l=k("h3"),l.textContent="sidebar.md",r=L(),i=k("p"),i.textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",c=L(),d=k("p"),d.textContent="Let's look on example:",p=L(),h=L(),m=k("p"),m.innerHTML="Usually it is just a list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/pages</code> directory.",g=L(),f=k("p"),f.innerHTML='URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/pages/components/button.md</code> file. Please see <a href="writing/routing">Routing</a> section for more info about URL.',y=L(),b=k("p"),b.textContent="External URLs will be opened in new window.",x=L(),w=k("h3"),w.textContent="logo.md",j=L(),C=k("p"),C.textContent="Commonly used for showing any logotype.  Just write something like:",T=L(),_=L(),P=k("p"),P.textContent="Or you can use an image as your logotype:",E=L(),q=L(),I=k("h3"),I.textContent="topbar.md",O=L(),D=k("p"),D.textContent="Play with right section of the topbar. For example add some links there:",N=L(),Y=L(),z=k("h3"),z.textContent="error.md",R=L(),F=k("p"),F.textContent="Just an error message which will be shown when user requests unexistent URL.",U=L(),W=k("h2"),W.textContent="Custom includes",J=L(),V=k("p"),V.innerHTML="You are free to create any <code>*.md</code> files which you can to include on any page you want using special import path:",Z=L(),Q=M(),H(n,"id","includes"),H(l,"id","sidebarmd"),u=new B(h),H(w,"id","logomd"),S=new B(_),A=new B(q),H(I,"id","topbarmd"),G=new B(Y),H(z,"id","errormd"),H(W,"id","custom-includes"),K=new B(Q)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e),v(t,p,e),u.m(nn,t,e),v(t,h,e),v(t,m,e),v(t,g,e),v(t,f,e),v(t,y,e),v(t,b,e),v(t,x,e),v(t,w,e),v(t,j,e),v(t,C,e),v(t,T,e),S.m(sn,t,e),v(t,_,e),v(t,P,e),v(t,E,e),A.m(an,t,e),v(t,q,e),v(t,I,e),v(t,O,e),v(t,D,e),v(t,N,e),G.m(on,t,e),v(t,Y,e),v(t,z,e),v(t,R,e),v(t,F,e),v(t,U,e),v(t,W,e),v(t,J,e),v(t,V,e),v(t,Z,e),K.m(ln,t,e),v(t,Q,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d),t&&$(p),t&&u.d(),t&&$(h),t&&$(m),t&&$(g),t&&$(f),t&&$(y),t&&$(b),t&&$(x),t&&$(w),t&&$(j),t&&$(C),t&&$(T),t&&S.d(),t&&$(_),t&&$(P),t&&$(E),t&&A.d(),t&&$(q),t&&$(I),t&&$(O),t&&$(D),t&&$(N),t&&G.d(),t&&$(Y),t&&$(z),t&&$(R),t&&$(F),t&&$(U),t&&$(W),t&&$(J),t&&$(V),t&&$(Z),t&&$(Q),t&&K.d()}}}const en={},nn='<pre><code class="language-markdown"><span class="hljs-bullet">*</span> Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">*</span> [<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">*</span> [<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',sn='<pre><code class="language-markdown"><span class="hljs-section"># MyComponent #</span></code></pre>\n',an='<pre><code class="language-markdown"><span class="hljs-section"># ![<span class="hljs-string">Logo</span>](<span class="hljs-link">static/logo.png</span>) #</span></code></pre>\n',on='<pre><code class="language-markdown"><span class="hljs-bullet">*</span> [<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">*</span> [<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',ln='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@INCLUDES/banner.md&#x27;</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Banner</span> /&gt;</span></code></pre>\n';function rn(e){let n,s,a,l,r,i,c,d,p;return{c(){n=k("span"),s=k("span"),s.textContent="-",a=L(),l=k("span"),r=T(e[0]),i=L(),c=k("span"),c.textContent="+",H(s,"class","minus svelte-1kq48qn"),H(l,"class","value svelte-1kq48qn"),H(c,"class","plus svelte-1kq48qn"),H(n,"class","counter svelte-1kq48qn")},m(t,o){v(t,n,o),j(n,s),j(n,a),j(n,l),j(l,r),j(n,i),j(n,c),d||(p=[S(s,"click",e[1]),S(c,"click",e[2])],d=!0)},p(t,[e]){1&e&&_(r,t[0])},i:t,o:t,d(t){t&&$(n),d=!1,o(p)}}}function cn(t,e,n){let s=0;return[s,t=>n(0,s--,s),t=>n(0,s++,s)]}class dn extends gt{constructor(t){super(),mt(this,t,cn,rn,r,{})}}function pn(e){let n;return{c(){n=k("blockquote"),n.innerHTML="<p><em>MDSv is really cool!</em></p>"},m(t,e){v(t,n,e)},p:t,i:t,o:t,d(t){t&&$(n)}}}class un extends gt{constructor(t){super(),mt(this,t,null,pn,r,{})}}function hn(t,e,n){const s=t.slice();return s[3]=e[n],s}function mn(t){let e,n,s=t[3]+"";return{c(){e=k("li"),n=T(s)},m(t,s){v(t,e,s),j(e,n)},p(t,e){1&e&&s!==(s=t[3]+"")&&_(n,s)},d(t){t&&$(e)}}}function gn(t){let e,n,s,a,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,C,T,M,_,P,E,A,q,I,O,D,N,G,Y,z,R,F,U,W,J,V,Z,K,Q,X,tt=t[0],et=[];for(let e=0;e<tt.length;e+=1)et[e]=mn(hn(t,tt,e));return D=new dn({}),Z=new un({}),{c(){e=k("h1"),e.textContent="What is MDSv",n=L(),s=k("p"),s.textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",a=L(),l=k("p"),l.innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',r=L(),i=k("p"),i.textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",c=L(),d=k("p"),d.textContent="This document also wrote in MDSv format, so we can do this right inside the document...",p=L(),h=L(),m=k("p"),m.textContent="... and get the result:",g=L(),f=k("ul");for(let t=0;t<et.length;t+=1)et[t].c();y=L(),b=k("button"),b.textContent="Add Item",x=L(),w=k("button"),w.textContent="Del Item",C=L(),T=k("p"),T.textContent="Or we can import any Svelte component and use it where we want:",M=L(),P=L(),E=k("p"),E.textContent="... and it will work:",A=L(),q=k("p"),I=k("em"),I.textContent="The counter:",O=L(),dt(D.$$.fragment),N=L(),G=k("p"),G.innerHTML="You even can import other <code>*.md</code> files:",Y=L(),R=L(),F=k("p"),F.textContent="... and it will be included in the specified place:",U=L(),W=k("p"),J=k("strong"),J.textContent="Spoiler:",V=L(),dt(Z.$$.fragment),H(e,"id","what-is-mdsv"),u=new B(h),_=new B(P),z=new B(R)},m(o,$){v(o,e,$),v(o,n,$),v(o,s,$),v(o,a,$),v(o,l,$),v(o,r,$),v(o,i,$),v(o,c,$),v(o,d,$),v(o,p,$),u.m(yn,o,$),v(o,h,$),v(o,m,$),v(o,g,$),v(o,f,$);for(let t=0;t<et.length;t+=1)et[t].m(f,null);v(o,y,$),v(o,b,$),v(o,x,$),v(o,w,$),v(o,C,$),v(o,T,$),v(o,M,$),_.m(bn,o,$),v(o,P,$),v(o,E,$),v(o,A,$),v(o,q,$),j(q,I),j(q,O),pt(D,q,null),v(o,N,$),v(o,G,$),v(o,Y,$),z.m(xn,o,$),v(o,R,$),v(o,F,$),v(o,U,$),v(o,W,$),j(W,J),j(W,V),pt(Z,W,null),K=!0,Q||(X=[S(b,"click",t[1]),S(w,"click",t[2])],Q=!0)},p(t,[e]){if(1&e){let n;for(tt=t[0],n=0;n<tt.length;n+=1){const s=hn(t,tt,n);et[n]?et[n].p(s,e):(et[n]=mn(s),et[n].c(),et[n].m(f,null))}for(;n<et.length;n+=1)et[n].d(1);et.length=tt.length}},i(t){K||(ot(D.$$.fragment,t),ot(Z.$$.fragment,t),K=!0)},o(t){lt(D.$$.fragment,t),lt(Z.$$.fragment,t),K=!1},d(t){t&&$(e),t&&$(n),t&&$(s),t&&$(a),t&&$(l),t&&$(r),t&&$(i),t&&$(c),t&&$(d),t&&$(p),t&&u.d(),t&&$(h),t&&$(m),t&&$(g),t&&$(f),function(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}(et,t),t&&$(y),t&&$(b),t&&$(x),t&&$(w),t&&$(C),t&&$(T),t&&$(M),t&&_.d(),t&&$(P),t&&$(E),t&&$(A),t&&$(q),ut(D),t&&$(N),t&&$(G),t&&$(Y),t&&z.d(),t&&$(R),t&&$(F),t&&$(U),t&&$(W),ut(Z),Q=!1,o(X)}}}const fn={},yn='<pre><code class="language-svelte"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">&#x27;item0&#x27;</span>,<span class="hljs-string">&#x27;item1&#x27;</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>&#123; items = [...items,<span class="hljs-string">&#x27;item&#x27;</span>+items.length] &#125;\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>&#123; items = items.slice(<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>) &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">#each</span><span class="javascript"> item <span class="hljs-keyword">as</span> item&#125;</span><span class="xml">\n* </span><span class="javascript">&#123;item&#125;</span><span class="xml">\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">/each</span><span class="javascript">&#125;</span><span class="xml">\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;add&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;del&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></code></pre>\n',bn='<pre><code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from &#x27;./Counter.svelte&#x27;;\n&lt;/script&gt;\n</span>\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span></span></span> </code></pre>\n',xn='<pre><code class="language-markdown">&lt;!-- spoiler.md --&gt;\n<span class="hljs-quote">&gt; <span class="hljs-emphasis">*MDSv is really cool!*</span></span>\n\n\n&lt;!-- document.md --&gt;\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from &#x27;./spoiler.md&#x27;;\n&lt;/script&gt;\n</span>\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></span></span></code></pre>\n';function wn(t,e,n){let s=["item0","item1"];return[s,function(){n(0,s=[...s,"item"+s.length])},function(){n(0,s=s.slice(0,-1))}]}function jn(e){let n,s,a,o,l,r,i;return{c(){n=k("h1"),n.textContent="Routing",s=L(),a=k("p"),a.innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/pages</code> directory:",o=L(),r=L(),i=k("p"),i.innerHTML="You can make links anywhere in your docs with URL part based on file hierarchy. For example, if you want create link to the <code>src/pages/components/button.md</code> use <code>components/button</code> as a href attribute of the <code>a</code> element - <code>components/button</code>. Or in markdown write - <code>[Button](component/button)</code>.",H(n,"id","routing"),l=new B(r)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m($n,t,e),v(t,r,e),v(t,i,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),t&&$(i)}}}const vn={},$n='<pre><code class="language-bash">src                     <span class="hljs-comment">#  URL path part:</span>\n└── pages               <span class="hljs-comment">#</span>\n    ├── components      <span class="hljs-comment">#</span>\n    │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    ├── install.md      <span class="hljs-comment">#  install</span>\n    └── index.md         <span class="hljs-comment">#  / </span>\n</code></pre>\n';function kn(e){let n,s,a,o,l,r,i,c,d,p,u,h,m,g,f,y,b,x,w,j;return{c(){n=k("h1"),n.textContent="Pages configuration",s=L(),a=k("p"),a.textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=L(),r=L(),i=k("h3"),i.textContent="title",c=L(),d=k("p"),d.innerHTML='You can specify title of current page. It is overwrite <a href="config/title"><code>title.header</code></a> config option.',p=L(),h=L(),m=k("h3"),m.textContent="layout",g=L(),f=k("p"),f.innerHTML="Every theme have various layouts which can be with this property. If no layout specified will be used <code>default</code> layout. You can find list of available layouts in the themes descriptions.",y=L(),b=k("p"),b.textContent="In this example, page will render in fullscreen layout without sidebar on the left side(assume default theme):",x=L(),j=M(),H(n,"id","pages-configuration"),l=new B(r),H(i,"id","title"),u=new B(h),H(m,"id","layout"),w=new B(j)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m(Tn,t,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e),v(t,p,e),u.m(Ln,t,e),v(t,h,e),v(t,m,e),v(t,g,e),v(t,f,e),v(t,y,e),v(t,b,e),v(t,x,e),w.m(Mn,t,e),v(t,j,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),t&&$(i),t&&$(c),t&&$(d),t&&$(p),t&&u.d(),t&&$(h),t&&$(m),t&&$(g),t&&$(f),t&&$(y),t&&$(b),t&&$(x),t&&$(j),t&&w.d()}}}const Cn={},Tn='<pre><code class="language-markdown">---\nparameter1: value1\n<span class="hljs-section">parameter2: value2\n---</span>\n... </code></pre>\n',Ln='<pre><code class="language-markdown">---\n<span class="hljs-section">title: &#x27;My page&#x27;\n---</span>\n... </code></pre>\n',Mn='<pre><code class="language-markdown">---\n<span class="hljs-section">layout: &#x27;no<span class="hljs-emphasis">_sidebar&#x27;\n---\n... </span></span></code></pre>\n';function Sn(e){let n,s,a,o,l,r,i,c,d,p,u;return{c(){n=k("h1"),n.textContent="Static files",s=L(),a=k("p"),a.innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/static</code> directory.",o=L(),l=k("p"),l.innerHTML="For example, if you placed image in the <code>src/static/great-success.png</code> then you can include it by following code:",r=L(),c=L(),d=k("p"),d.textContent="... and get image on your page:",p=L(),u=k("p"),u.innerHTML='<img src="static/great-success.png" alt="Great Success"/>;',H(n,"id","static-files"),i=new B(c)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),v(t,l,e),v(t,r,e),i.m(_n,t,e),v(t,c,e),v(t,d,e),v(t,p,e),v(t,u,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&$(l),t&&$(r),t&&i.d(),t&&$(c),t&&$(d),t&&$(p),t&&$(u)}}}const Hn={},_n='<pre><code class="language-markdown">![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code></pre>\n';function Pn(e){let n,s,a,o,l,r,i,c,d;return{c(){n=k("h1"),n.textContent="Structure",s=L(),a=k("p"),a.textContent="Let's see the structure of the doc's project directory:",o=L(),r=L(),i=k("p"),i.innerHTML="It is very simple, sources of you documentation are live in <code>src</code> directory:",c=L(),d=k("ul"),d.innerHTML="<li><strong>includes</strong> - there are small pieces of the MDSv code that can be reusable within any document page</li> \n<li><strong>pages</strong> - all pages of your documentation are stored in this directory</li> \n<li><strong>static</strong> - place here any static assets using in your documentation (files, images, icons and etc.)</li> \n<li><strong>examples.css</strong> - it is styles using within examples</li> \n<li><strong>theme.css</strong> - tune current documentation theme with variables, add new styles or <code>@import</code> any css file.</li>",H(n,"id","structure"),l=new B(r)},m(t,e){v(t,n,e),v(t,s,e),v(t,a,e),v(t,o,e),l.m(Bn,t,e),v(t,r,e),v(t,i,e),v(t,c,e),v(t,d,e)},p:t,i:t,o:t,d(t){t&&$(n),t&&$(s),t&&$(a),t&&$(o),t&&l.d(),t&&$(r),t&&$(i),t&&$(c),t&&$(d)}}}const En={},Bn='<pre><code class="language-bash">src\n├── includes\n├── pages\n├── static\n├── examples.css   \n└── theme.css   \n...\nsvelte-docs.config.js</code></pre>\n';const An=yt(On());function qn(t){history.pushState({},"",""===t?Nn():t),An.set(t.split("#")[0])}function In(){An.set(On())}function On(){let t=location.pathname;return t=function(t){const e=Nn();t.startsWith(e)&&(t=t.slice(e.length));t.startsWith("/")&&(t=t.slice(1));t.endsWith("/")&&(t=t.slice(0,-1));return t}(t),t}function Dn(t){const e=t.target.closest("a");if(!e)return;const n=e.getAttribute("href");if(n){if(!/^\w+:\/\//.test(n))return t.preventDefault(),/^\/$/.test(n)?qn(""):qn(n);e.setAttribute("target","_blank")}}function Nn(){let t=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===t?"/":t}const Gn=[{url:"",component:Ct,title:kt.hasOwnProperty("title")?kt.title:null,meta:kt},{url:"sd:error",component:class extends gt{constructor(t){super(),mt(this,t,null,Tt,r,{})}},title:Lt.hasOwnProperty("title")?Lt.title:"Page not found!",meta:Lt},{url:"builtins/example",component:class extends gt{constructor(t){super(),mt(this,t,null,Yt,r,{})}},title:zt.hasOwnProperty("title")?zt.title:"Example code block",meta:zt},{url:"builtins/properties",component:class extends gt{constructor(t){super(),mt(this,t,null,Jt,r,{})}},title:Vt.hasOwnProperty("title")?Vt.title:"Properties",meta:Vt},{url:"config/aliases",component:class extends gt{constructor(t){super(),mt(this,t,null,te,r,{})}},title:ee.hasOwnProperty("title")?ee.title:"aliases option",meta:ee},{url:"config/basepath",component:class extends gt{constructor(t){super(),mt(this,t,null,le,r,{})}},title:re.hasOwnProperty("title")?re.title:"Basepath option",meta:re},{url:"config/file",component:class extends gt{constructor(t){super(),mt(this,t,null,ie,r,{})}},title:ce.hasOwnProperty("title")?ce.title:"Configuration",meta:ce},{url:"config/pathes",component:class extends gt{constructor(t){super(),mt(this,t,null,de,r,{})}},title:pe.hasOwnProperty("title")?pe.title:"Pathes option",meta:pe},{url:"config/preprocess",component:class extends gt{constructor(t){super(),mt(this,t,null,ue,r,{})}},title:he.hasOwnProperty("title")?he.title:"Preprocess option",meta:he},{url:"config/theme",component:class extends gt{constructor(t){super(),mt(this,t,null,fe,r,{})}},title:ye.hasOwnProperty("title")?ye.title:"Theme option",meta:ye},{url:"config/title",component:class extends gt{constructor(t){super(),mt(this,t,null,we,r,{})}},title:je.hasOwnProperty("title")?je.title:"Title option",meta:je},{url:"getting-started",component:class extends gt{constructor(t){super(),mt(this,t,null,ve,r,{})}},title:$e.hasOwnProperty("title")?$e.title:"Getting started",meta:$e},{url:"index",component:Ct,title:kt.hasOwnProperty("title")?kt.title:null,meta:kt},{url:"introduction",component:class extends gt{constructor(t){super(),mt(this,t,null,Me,r,{})}},title:Se.hasOwnProperty("title")?Se.title:"Introducing",meta:Se},{url:"publishing/ghpages",component:class extends gt{constructor(t){super(),mt(this,t,null,_e,r,{})}},title:Pe.hasOwnProperty("title")?Pe.title:"Publishing on Github Pages",meta:Pe},{url:"theming/custom-theme",component:class extends gt{constructor(t){super(),mt(this,t,null,Be,r,{})}},title:Ae.hasOwnProperty("title")?Ae.title:"Custom theme",meta:Ae},{url:"theming/examples",component:class extends gt{constructor(t){super(),mt(this,t,null,Ie,r,{})}},title:Oe.hasOwnProperty("title")?Oe.title:"Examples view CSS",meta:Oe},{url:"theming/list/default",component:class extends gt{constructor(t){super(),mt(this,t,null,Ye,r,{})}},title:ze.hasOwnProperty("title")?ze.title:"Default",meta:ze},{url:"theming/list/light",component:class extends gt{constructor(t){super(),mt(this,t,null,Ue,r,{})}},title:We.hasOwnProperty("title")?We.title:"Light",meta:We},{url:"theming/theme-tuning",component:class extends gt{constructor(t){super(),mt(this,t,null,Je,r,{})}},title:Ve.hasOwnProperty("title")?Ve.title:"Theme tuning",meta:Ve},{url:"theming",component:class extends gt{constructor(t){super(),mt(this,t,null,Qe,r,{})}},title:Xe.hasOwnProperty("title")?Xe.title:"Theming",meta:Xe},{url:"writing/includes",component:class extends gt{constructor(t){super(),mt(this,t,null,tn,r,{})}},title:en.hasOwnProperty("title")?en.title:"Includes",meta:en},{url:"writing/mdsv",component:class extends gt{constructor(t){super(),mt(this,t,wn,gn,r,{})}},title:fn.hasOwnProperty("title")?fn.title:"What is MDSv",meta:fn},{url:"writing/routing",component:class extends gt{constructor(t){super(),mt(this,t,null,jn,r,{})}},title:vn.hasOwnProperty("title")?vn.title:"Routing",meta:vn},{url:"writing/settings",component:class extends gt{constructor(t){super(),mt(this,t,null,kn,r,{})}},title:Cn.hasOwnProperty("title")?Cn.title:"Pages configuration",meta:Cn},{url:"writing/static",component:class extends gt{constructor(t){super(),mt(this,t,null,Sn,r,{})}},title:Hn.hasOwnProperty("title")?Hn.title:"Static files",meta:Hn},{url:"writing/structure",component:class extends gt{constructor(t){super(),mt(this,t,null,Pn,r,{})}},title:En.hasOwnProperty("title")?En.title:"Structure",meta:En}],Yn=Gn.filter((t=>"sd:error"===t.url))[0],zn=function(e,n,s){const a=!Array.isArray(e),r=a?[e]:e,c=n.length<2;return{subscribe:yt(s,(e=>{let s=!1;const d=[];let p=0,u=t;const h=()=>{if(p)return;u();const s=n(a?d[0]:d,e);c?e(s):u=l(s)?s:t},m=r.map(((t,e)=>i(t,(t=>{d[e]=t,p&=~(1<<e),s&&h()}),(()=>{p|=1<<e}))));return s=!0,h(),function(){o(m),u()}})).subscribe}}(An,(t=>{const e=Gn.filter((e=>e.url===t));return e.length>0?e[0]:Yn}));var Rn="Svelte-Docs Reference";function Fn(t){let e;return{c(){e=k("h1"),e.innerHTML='<a href="/"><img src="static/logo.svg" alt="LOGO" class="svelte-1m9fc3n"/></a>',H(e,"id","logo")},m(t,n){v(t,e,n)},d(t){t&&$(e)}}}function Un(e){let n,s=""!==e[0].url&&Fn();return{c(){s&&s.c(),n=M()},m(t,e){s&&s.m(t,e),v(t,n,e)},p(t,[e]){""!==t[0].url?s||(s=Fn(),s.c(),s.m(n.parentNode,n)):s&&(s.d(1),s=null)},i:t,o:t,d(t){s&&s.d(t),t&&$(n)}}}function Wn(t,e,n){let s;return c(t,zn,(t=>n(0,s=t))),[s]}class Jn extends gt{constructor(t){super(),mt(this,t,Wn,Un,r,{})}}function Vn(e){let n,s,a,o,l,r,i,c;return{c(){n=k("meta"),s=k("meta"),a=k("meta"),o=k("meta"),l=k("meta"),r=k("meta"),i=k("meta"),c=k("meta"),H(n,"property","og:title"),H(n,"content",e[0]),H(s,"property","og:description"),H(s,"content",Zn),H(a,"property","og:image"),H(a,"content",Kn),H(o,"property","og:url"),H(o,"content",e[1]),H(l,"name","twitter:title"),H(l,"content",e[0]),H(r,"name","twitter:description"),H(r,"content",Zn),H(i,"name","twitter:image"),H(i,"content",Kn),H(c,"name","twitter:card"),H(c,"content","summary_large_image")},m(t,e){j(document.head,n),j(document.head,s),j(document.head,a),j(document.head,o),j(document.head,l),j(document.head,r),j(document.head,i),j(document.head,c)},p(t,[e]){1&e&&H(n,"content",t[0]),2&e&&H(o,"content",t[1]),1&e&&H(l,"content",t[0])},i:t,o:t,d(t){$(n),$(s),$(a),$(o),$(l),$(r),$(i),$(c)}}}let Zn="A rapid way to document your Svelte things",Kn="https://alexxnb.github.io/svelte-docs/static/social.png";function Qn(t,e,n){let s,a,o;return c(t,zn,(t=>n(2,s=t))),t.$$.update=()=>{4&t.$$.dirty&&n(0,a=s.title?s.title+" — "+Rn:Rn),4&t.$$.dirty&&n(1,o=`https://alexxnb.github.io/svelte-docs/${s.url}`)},[a,o,s]}class Xn extends gt{constructor(t){super(),mt(this,t,Qn,Vn,r,{})}}function ts(t){let e,n,s;return{c(){e=k("span"),e.textContent="Github",H(e,"class","label svelte-bpn430")},m(t,n){v(t,e,n),s=!0},i(a){s||(J((()=>{n||(n=it(e,t[6],{},!0)),n.run(1)})),s=!0)},o(a){n||(n=it(e,t[6],{},!1)),n.run(0),s=!1},d(t){t&&$(e),t&&n&&n.end()}}}function es(t){let e,n,s,a,l,r,i=t[1]&&ts(t);return{c(){e=k("a"),n=C("svg"),s=C("path"),i&&i.c(),H(s,"d","M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"),H(n,"viewBox","0 0 24 24"),P(n,"transform","rotate(-"+t[2]+"deg)"),H(n,"class","svelte-bpn430"),H(e,"class","github svelte-bpn430"),H(e,"href",t[0]),H(e,"target","_blank")},m(o,c){v(o,e,c),j(e,n),j(n,s),i&&i.m(e,null),a=!0,l||(r=[S(e,"mouseenter",t[3]),S(e,"mouseleave",t[4])],l=!0)},p(t,[s]){(!a||4&s)&&P(n,"transform","rotate(-"+t[2]+"deg)"),t[1]?i?2&s&&ot(i,1):(i=ts(t),i.c(),ot(i,1),i.m(e,null)):i&&(st(),lt(i,1,1,(()=>{i=null})),at()),(!a||1&s)&&H(e,"href",t[0])},i(t){a||(ot(i),a=!0)},o(t){lt(i),a=!1},d(t){t&&$(e),i&&i.d(),l=!1,o(r)}}}function ns(t,e,n){let s,{url:a}=e,{animation:o=!1}=e,l=!1;const r=vt(0,{duration:500,easing:bt});return c(t,r,(t=>n(2,s=t))),t.$$set=t=>{"url"in t&&n(0,a=t.url),"animation"in t&&n(7,o=t.animation)},t.$$.update=()=>{2&t.$$.dirty&&h(r,s=l?100:0,s)},[a,l,s,function(){o&&n(1,l=!0)},function(){n(1,l=!1)},r,function(t){return{delay:0,duration:500,css:t=>`overflow:hide; width: ${50*bt(t)}px; opacity: ${t}`}},o]}class ss extends gt{constructor(t){super(),mt(this,t,ns,es,r,{url:0,animation:7})}}function as(e){let n,s,a,o,l,r,i,c;return n=new Xn({}),i=new ss({props:{animation:!0,url:"https://github.com/alexxnb/svelte-docs"}}),{c(){dt(n.$$.fragment),s=L(),a=k("ul"),o=k("li"),o.innerHTML='<a href="getting-started">Docs</a>',l=L(),r=k("li"),dt(i.$$.fragment)},m(t,e){pt(n,t,e),v(t,s,e),v(t,a,e),j(a,o),j(a,l),j(a,r),pt(i,r,null),c=!0},p:t,i(t){c||(ot(n.$$.fragment,t),ot(i.$$.fragment,t),c=!0)},o(t){lt(n.$$.fragment,t),lt(i.$$.fragment,t),c=!1},d(t){ut(n,t),t&&$(s),t&&$(a),ut(i)}}}class os extends gt{constructor(t){super(),mt(this,t,null,as,r,{})}}function ls(e){let n,s,a,o,l,r;return s=new Jn({}),l=new os({}),{c(){n=k("section"),dt(s.$$.fragment),a=L(),o=k("section"),dt(l.$$.fragment)},m(t,e){v(t,n,e),pt(s,n,null),v(t,a,e),v(t,o,e),pt(l,o,null),r=!0},p:t,i(t){r||(ot(s.$$.fragment,t),ot(l.$$.fragment,t),r=!0)},o(t){lt(s.$$.fragment,t),lt(l.$$.fragment,t),r=!1},d(t){t&&$(n),ut(s),t&&$(a),t&&$(o),ut(l)}}}class rs extends gt{constructor(t){super(),mt(this,t,null,ls,r,{})}}function is(e){let n;return{c(){n=k("ul"),n.innerHTML='<li><a href="introduction">Introduction</a></li> \n<li><a href="getting-started">Getting Started</a></li> \n<li>Writing docs<ul><li><a href="writing/mdsv">What is MDSv</a></li> \n<li><a href="writing/structure">Structure</a></li> \n<li><a href="writing/includes">Includes</a></li> \n<li><a href="writing/routing">Routing</a></li> \n<li><a href="writing/static">Static files</a></li> \n<li><a href="writing/settings">Page settings</a></li></ul></li> \n<li><a href="config/file">Configuration</a><ul><li><a href="config/basepath">basepath</a></li> \n<li><a href="config/theme">theme</a></li> \n<li><a href="config/title">title</a></li> \n<li><a href="config/pathes">pathes</a></li> \n<li><a href="config/aliases">aliases</a></li> \n<li><a href="config/preprocess">preprocess</a></li></ul></li> \n<li>Builtins<ul><li><a href="builtins/example">Example</a></li> \n<li><a href="builtins/properties">Properties</a></li></ul></li> \n<li>Styling<ul><li><a href="theming/theme-tuning">Theme tuning</a></li> \n<li><a href="theming/examples">Examples view</a></li> \n<li><a href="theming/custom-theme">Custom theme</a></li> \n<li>List of themes<ul><li><a href="theming/list/default">Default</a></li> \n<li><a href="theming/list/light">Light</a></li></ul></li></ul></li> \n<li>Publishing<ul><li><a href="publishing/ghpages">GitHub Pages</a></li></ul></li>'},m(t,e){v(t,n,e)},p:t,i:t,o:t,d(t){t&&$(n)}}}class cs extends gt{constructor(t){super(),mt(this,t,null,is,r,{})}}function ds(e){let n,s;return n=new cs({}),{c(){dt(n.$$.fragment)},m(t,e){pt(n,t,e),s=!0},p:t,i(t){s||(ot(n.$$.fragment,t),s=!0)},o(t){lt(n.$$.fragment,t),s=!1},d(t){ut(n,t)}}}class ps extends gt{constructor(t){super(),mt(this,t,null,ds,r,{})}}function us(t){let e,n,s;var a=t[0].component;return a&&(n=new a({})),{c(){e=k("article"),n&&dt(n.$$.fragment)},m(t,a){v(t,e,a),n&&pt(n,e,null),s=!0},p(t,[s]){if(a!==(a=t[0].component)){if(n){st();const t=n;lt(t.$$.fragment,1,0,(()=>{ut(t,1)})),at()}a?(n=new a({}),dt(n.$$.fragment),ot(n.$$.fragment,1),pt(n,e,null)):n=null}},i(t){s||(n&&ot(n.$$.fragment,t),s=!0)},o(t){n&&lt(n.$$.fragment,t),s=!1},d(t){t&&$(e),n&&ut(n)}}}function hs(t,e,n){let s;return c(t,zn,(t=>n(0,s=t))),zn.subscribe((()=>{window.scrollTo(0,0)})),[s]}class ms extends gt{constructor(t){super(),mt(this,t,hs,us,r,{})}}const{document:gs}=ct;function fs(t){let e,n,s;return n=new ms({}),{c(){e=k("main"),dt(n.$$.fragment),H(e,"class","fullscreen"),E(e,"mobile",t[2])},m(t,a){v(t,e,a),pt(n,e,null),s=!0},p(t,n){4&n&&E(e,"mobile",t[2])},i(t){s||(ot(n.$$.fragment,t),s=!0)},o(t){lt(n.$$.fragment,t),s=!1},d(t){t&&$(e),ut(n)}}}function ys(t){let e,n,s,a,o,l=t[2]&&bs(t),r=(!t[2]||t[1])&&xs(t);return a=new ms({}),{c(){l&&l.c(),e=L(),r&&r.c(),n=L(),s=k("main"),dt(a.$$.fragment),E(s,"mobile",t[2])},m(t,i){l&&l.m(t,i),v(t,e,i),r&&r.m(t,i),v(t,n,i),v(t,s,i),pt(a,s,null),o=!0},p(t,a){t[2]?l?l.p(t,a):(l=bs(t),l.c(),l.m(e.parentNode,e)):l&&(l.d(1),l=null),!t[2]||t[1]?r?6&a&&ot(r,1):(r=xs(t),r.c(),ot(r,1),r.m(n.parentNode,n)):r&&(st(),lt(r,1,1,(()=>{r=null})),at()),4&a&&E(s,"mobile",t[2])},i(t){o||(ot(r),ot(a.$$.fragment,t),o=!0)},o(t){lt(r),lt(a.$$.fragment,t),o=!1},d(t){l&&l.d(t),t&&$(e),r&&r.d(t),t&&$(n),t&&$(s),ut(a)}}}function bs(t){let e,n,s,a,o;return{c(){e=k("button"),n=k("img"),n.src!==(s="assets/burger.svg")&&H(n,"src","assets/burger.svg"),H(n,"alt","Open Menu"),P(n,"transform","rotate("+t[3]+"deg)"),H(e,"class","showNav")},m(s,l){var r;v(s,e,l),j(e,n),a||(o=S(e,"click",(r=t[13],function(t){return t.stopPropagation(),r.call(this,t)})),a=!0)},p(t,e){8&e&&P(n,"transform","rotate("+t[3]+"deg)")},d(t){t&&$(e),a=!1,o()}}}function xs(t){let e,n,s,a,l,r,i,c;return n=new ps({}),{c(){e=k("nav"),dt(n.$$.fragment)},m(o,l){v(o,e,l),pt(n,e,null),r=!0,i||(c=[m(s=t[7].call(null,e)),m(a=t[8].call(null,e))],i=!0)},i(s){r||(ot(n.$$.fragment,s),J((()=>{l||(l=it(e,t[6],{},!0)),l.run(1)})),r=!0)},o(s){lt(n.$$.fragment,s),l||(l=it(e,t[6],{},!1)),l.run(0),r=!1},d(t){t&&$(e),ut(n),t&&l&&l.end(),i=!1,o(c)}}}function ws(t){let e,n,s,a,o,l,r,i,c,d;J(t[12]),gs.title=e=t[4],a=new rs({});let p="no_sidebar"===t[5]&&fs(t),u="default"===t[5]&&ys(t);return{c(){n=L(),s=k("header"),dt(a.$$.fragment),o=L(),p&&p.c(),l=L(),u&&u.c(),r=M()},m(e,h){v(e,n,h),v(e,s,h),pt(a,s,null),v(e,o,h),p&&p.m(e,h),v(e,l,h),u&&u.m(e,h),v(e,r,h),i=!0,c||(d=S(window,"resize",t[12]),c=!0)},p(t,[n]){(!i||16&n)&&e!==(e=t[4])&&(gs.title=e),"no_sidebar"===t[5]?p?(p.p(t,n),32&n&&ot(p,1)):(p=fs(t),p.c(),ot(p,1),p.m(l.parentNode,l)):p&&(st(),lt(p,1,1,(()=>{p=null})),at()),"default"===t[5]?u?(u.p(t,n),32&n&&ot(u,1)):(u=ys(t),u.c(),ot(u,1),u.m(r.parentNode,r)):u&&(st(),lt(u,1,1,(()=>{u=null})),at())},i(t){i||(ot(a.$$.fragment,t),ot(p),ot(u),i=!0)},o(t){lt(a.$$.fragment,t),lt(p),lt(u),i=!1},d(t){t&&$(n),t&&$(s),ut(a),t&&$(o),p&&p.d(t),t&&$(l),u&&u.d(t),t&&$(r),c=!1,d()}}}function js(t,e,n){let s,a,o;c(t,zn,(t=>n(11,o=t)));let l=0,r=!1;const i=yt(!0);c(t,i,(t=>n(2,s=t)));const d=vt(0,{duration:200,easing:xt});c(t,d,(t=>n(3,a=t)));let p,u;return t.$$.update=()=>{1&t.$$.dirty&&h(i,s=l<800,s),6&t.$$.dirty&&n(1,r=!!s&&r),2&t.$$.dirty&&h(d,a=r?180:0,a),2048&t.$$.dirty&&n(4,p=o.title?o.title+" — "+Rn:Rn),2048&t.$$.dirty&&n(5,u=o.meta.layout?o.meta.layout:"default")},[l,r,s,a,p,u,function(t){const e=xt,n=getComputedStyle(t),s=parseFloat(n.width);return{delay:10,duration:200,easing:e,css:t=>`overflow: hidden;width: ${t*s}px;`}},function(t){return{destroy:zn.subscribe((e=>{const n=e.url||"/";t.querySelectorAll("a").forEach((t=>{t.getAttribute("href")===n?t.classList.add("active"):t.classList.remove("active")}))}))}},function(t){const e=()=>n(1,r=!1);return document.body.addEventListener("click",e),{destroy(){document.body.removeEventListener("click",e)}}},i,d,o,function(){n(0,l=window.innerWidth)},()=>n(1,r=!r)]}class vs extends gt{constructor(t){super(),mt(this,t,js,ws,r,{})}}function $s(e){let n,s;return n=new vs({}),{c(){dt(n.$$.fragment)},m(t,e){pt(n,t,e),s=!0},p:t,i(t){s||(ot(n.$$.fragment,t),s=!0)},o(t){lt(n.$$.fragment,t),s=!1},d(t){ut(n,t)}}}function ks(t){return G((()=>(addEventListener("click",Dn),addEventListener("popstate",In),function(){removeEventListener("click",Dn),removeEventListener("popstate",In)}))),[]}return new class extends gt{constructor(t){super(),mt(this,t,ks,$s,r,{})}}({target:document.body,props:{}})}();
