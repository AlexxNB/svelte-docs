var app=function(){"use strict";function t(){}function e(t,e){for(const n in e)t[n]=e[n];return t}function n(t){return t()}function s(){return Object.create(null)}function a(t){t.forEach(n)}function o(t){return"function"==typeof t}function l(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function c(t,e,n){t.$$.on_destroy.push(function(t,e){const n=t.subscribe(e);return n.unsubscribe?()=>n.unsubscribe():n}(e,n))}function r(t,e,n){if(t){const s=i(t,e,n);return t[0](s)}}function i(t,n,s){return t[1]?e({},e(n.$$scope.ctx,t[1](s?s(n):{}))):n.$$scope.ctx}function p(t,n,s,a){return t[1]?e({},e(n.$$scope.changed||{},t[1](a?a(s):{}))):n.$$scope.changed||{}}function d(t,e){t.appendChild(e)}function u(t,e,n){t.insertBefore(e,n||null)}function h(t){t.parentNode.removeChild(t)}function m(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function g(t){return document.createElement(t)}function f(t){return document.createTextNode(t)}function b(){return f(" ")}function y(t,e,n,s){return t.addEventListener(e,n,s),()=>t.removeEventListener(e,n,s)}function j(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function v(t,e){e=""+e,t.data!==e&&(t.data=e)}function w(t,e,n,s){t.style.setProperty(e,n,s?"important":"")}function $(t,e,n){t.classList[n?"add":"remove"](e)}let x;function k(t){x=t}function T(t){(function(){if(!x)throw new Error("Function called outside component initialization");return x})().$$.on_mount.push(t)}const M=[],C=[],L=[],H=[],S=Promise.resolve();let _=!1;function B(t){L.push(t)}function P(){const t=new Set;do{for(;M.length;){const t=M.shift();k(t),E(t.$$)}for(;C.length;)C.pop()();for(let e=0;e<L.length;e+=1){const n=L[e];t.has(n)||(n(),t.add(n))}L.length=0}while(M.length);for(;H.length;)H.pop()();_=!1}function E(t){t.fragment&&(t.update(t.dirty),a(t.before_update),t.fragment.p(t.dirty,t.ctx),t.dirty=null,t.after_update.forEach(B))}const I=new Set;let q;function A(){q={r:0,c:[],p:q}}function G(){q.r||a(q.c),q=q.p}function D(t,e){t&&t.i&&(I.delete(t),t.i(e))}function N(t,e,n,s){if(t&&t.o){if(I.has(t))return;I.add(t),q.c.push(()=>{I.delete(t),s&&(n&&t.d(1),s())}),t.o(e)}}function z(t,e,s){const{fragment:l,on_mount:c,on_destroy:r,after_update:i}=t.$$;l.m(e,s),B(()=>{const e=c.map(n).filter(o);r?r.push(...e):a(e),t.$$.on_mount=[]}),i.forEach(B)}function Y(t,e){t.$$.fragment&&(a(t.$$.on_destroy),t.$$.fragment.d(e),t.$$.on_destroy=t.$$.fragment=null,t.$$.ctx={})}function O(t,e){t.$$.dirty||(M.push(t),_||(_=!0,S.then(P)),t.$$.dirty=s()),t.$$.dirty[e]=!0}function R(e,n,o,l,c,r){const i=x;k(e);const p=n.props||{},d=e.$$={fragment:null,ctx:null,props:r,update:t,not_equal:c,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:s(),dirty:null};let u=!1;var h;d.ctx=o?o(e,p,(t,n,s=n)=>(d.ctx&&c(d.ctx[t],d.ctx[t]=s)&&(d.bound[t]&&d.bound[t](s),u&&O(e,t)),n)):p,d.update(),u=!0,a(d.before_update),d.fragment=l(d.ctx),n.target&&(n.hydrate?d.fragment.l((h=n.target,Array.from(h.childNodes))):d.fragment.c(),n.intro&&D(e.$$.fragment),z(e,n.target,n.anchor),P()),k(i)}class W{$destroy(){Y(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(){}}const U=[];const K=function(e,n=t){let s;const a=[];function o(t){if(l(e,t)&&(e=t,s)){const t=!U.length;for(let t=0;t<a.length;t+=1){const n=a[t];n[1](),U.push(n,e)}if(t){for(let t=0;t<U.length;t+=2)U[t][0](U[t+1]);U.length=0}}}return{set:o,update:function(t){o(t(e))},subscribe:function(l,c=t){const r=[l,c];return a.push(r),1===a.length&&(s=n(o)||t),l(e),()=>{const t=a.indexOf(r);-1!==t&&a.splice(t,1),0===a.length&&(s(),s=null)}}}}(function(){let t=location.pathname;"/"!==(t=function(t){const e=Z();return t.startsWith(e)&&(t=t.slice(e.length)),t.endsWith("/")&&(t=t.slice(0,-1)),""===t&&(t="/"),t}(t)).length&&(t=t.slice(1));return t}());function F(t){history.pushState({},"",""===t?Z():t),K.set(t)}function J(t){const e=t.target.closest("a");if(!e)return;const n=e.getAttribute("href");if(n){if(!/^\w+:\/\//.test(n))return t.preventDefault(),/^\/$/.test(n)?F(""):F(n);e.setAttribute("target","_blank")}}function Z(){return(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1)}const Q={html:"Svelte<span>Docs</span>",url:"/"},V=[{title:"Github",url:"https://github.com/alexxnb/svelte-docs"}];function X(t,e,n){const s=Object.create(t);return s.link=e[n],s}function tt(t){var e,n,s,a=t.link.title+"";return{c(){e=g("li"),n=g("a"),s=f(a),j(n,"href",t.link.url),$(n,"active",t.link.url===t.$url)},m(t,a){u(t,e,a),d(e,n),d(n,s)},p(t,e){(t.links||t.$url)&&$(n,"active",e.link.url===e.$url)},d(t){t&&h(e)}}}function et(e){var n,s,a,o,l,c=Q.html+"";let r=V,i=[];for(let t=0;t<r.length;t+=1)i[t]=tt(X(e,r,t));return{c(){n=g("section"),s=g("a"),a=b(),o=g("section"),l=g("ul");for(let t=0;t<i.length;t+=1)i[t].c();j(s,"href",Q.url),j(s,"class","logo")},m(t,e){u(t,n,e),d(n,s),s.innerHTML=c,u(t,a,e),u(t,o,e),d(o,l);for(let t=0;t<i.length;t+=1)i[t].m(l,null)},p(t,e){if(t.links||t.$url){let n;for(r=V,n=0;n<r.length;n+=1){const s=X(e,r,n);i[n]?i[n].p(t,s):(i[n]=tt(s),i[n].c(),i[n].m(l,null))}for(;n<i.length;n+=1)i[n].d(1);i.length=r.length}},i:t,o:t,d(t){t&&(h(n),h(a),h(o)),m(i,t)}}}function nt(t,e,n){let s;return c(t,K,t=>{n("$url",s=t)}),{$url:s}}class st extends W{constructor(t){super(),R(this,t,nt,et,l,[])}}var at=[{title:"Getting Started",url:"start",sub:[]},{title:"Writing docs",url:!1,sub:[{title:"What is MDSv",url:"writing/mdsv"},{title:"Structure",url:"writing/structure"},{title:"Static files",url:"writing/static"}]},{title:"Configuration",url:"config/file",sub:[{title:"basepath",url:"config/basepath"},{title:"pathes",url:"config/pathes"},{title:"incPKG",url:"config/incpkg"},{title:"incCSS",url:"config/inccss"},{title:"preprocess",url:"config/preprocess"}]},{title:"Builtins",url:!1,sub:[{title:"Example",url:"builtins/example"},{title:"Properties",url:"builtins/properties"}]},{title:"Theming",url:"theming",sub:[]},{title:"Publishing",url:!1,sub:[{title:"GitHub Pages",url:"publishing/ghpages"}]}];function ot(t){var e,n,s=t.section.title+"";return{c(){e=g("span"),n=f(s)},m(t,s){u(t,e,s),d(e,n)},p(t,e){t.section&&s!==(s=e.section.title+"")&&v(n,s)},d(t){t&&h(e)}}}function lt(t){var e,n,s,a=t.section.title+"";return{c(){e=g("a"),n=f(a),j(e,"href",s=t.section.url),$(e,"active",t.active)},m(t,s){u(t,e,s),d(e,n)},p(t,o){t.section&&a!==(a=o.section.title+"")&&v(n,a),t.section&&s!==(s=o.section.url)&&j(e,"href",s),t.active&&$(e,"active",o.active)},d(t){t&&h(e)}}}function ct(e){var n;function s(t,e){return e.section.url?lt:ot}var a=s(0,e),o=a(e);return{c(){o.c(),n=f("")},m(t,e){o.m(t,e),u(t,n,e)},p(t,e){a===(a=s(0,e))&&o?o.p(t,e):(o.d(1),(o=a(e))&&(o.c(),o.m(n.parentNode,n)))},i:t,o:t,d(t){o.d(t),t&&h(n)}}}function rt(t,e,n){let{section:s={},active:a=!1}=e;return t.$set=(t=>{"section"in t&&n("section",s=t.section),"active"in t&&n("active",a=t.active)}),{section:s,active:a}}class it extends W{constructor(t){super(),R(this,t,rt,ct,l,["section","active"])}}function pt(t,e,n){const s=Object.create(t);return s.subsection=e[n],s}function dt(t,e,n){const s=Object.create(t);return s.section=e[n],s}function ut(t){var e,n,s=new it({props:{section:t.subsection,active:t.subsection.url===t.$url}});return{c(){e=g("li"),s.$$.fragment.c()},m(t,a){u(t,e,a),z(s,e,null),n=!0},p(t,e){var n={};t.$url&&(n.active=e.subsection.url===e.$url),s.$set(n)},i(t){n||(D(s.$$.fragment,t),n=!0)},o(t){N(s.$$.fragment,t),n=!1},d(t){t&&h(e),Y(s)}}}function ht(t){var e,n,s,a,o=new it({props:{section:t.section,active:t.section.url===t.$url}}),l=t.section.sub.length>0&&function(t){var e,n;let s=t.section.sub,a=[];for(let e=0;e<s.length;e+=1)a[e]=ut(pt(t,s,e));const o=t=>N(a[t],1,1,()=>{a[t]=null});return{c(){e=g("ul");for(let t=0;t<a.length;t+=1)a[t].c()},m(t,s){u(t,e,s);for(let t=0;t<a.length;t+=1)a[t].m(e,null);n=!0},p(t,n){if(t.sections||t.$url){let l;for(s=n.section.sub,l=0;l<s.length;l+=1){const o=pt(n,s,l);a[l]?(a[l].p(t,o),D(a[l],1)):(a[l]=ut(o),a[l].c(),D(a[l],1),a[l].m(e,null))}for(A(),l=s.length;l<a.length;l+=1)o(l);G()}},i(t){if(!n){for(let t=0;t<s.length;t+=1)D(a[t]);n=!0}},o(t){a=a.filter(Boolean);for(let t=0;t<a.length;t+=1)N(a[t]);n=!1},d(t){t&&h(e),m(a,t)}}}(t);return{c(){e=g("li"),o.$$.fragment.c(),n=b(),l&&l.c(),s=b()},m(t,c){u(t,e,c),z(o,e,null),d(e,n),l&&l.m(e,null),d(e,s),a=!0},p(t,e){var n={};t.$url&&(n.active=e.section.url===e.$url),o.$set(n),e.section.sub.length>0&&l.p(t,e)},i(t){a||(D(o.$$.fragment,t),D(l),a=!0)},o(t){N(o.$$.fragment,t),N(l),a=!1},d(t){t&&h(e),Y(o),l&&l.d()}}}function mt(t){var e,n;let s=at,a=[];for(let e=0;e<s.length;e+=1)a[e]=ht(dt(t,s,e));const o=t=>N(a[t],1,1,()=>{a[t]=null});return{c(){e=g("ul");for(let t=0;t<a.length;t+=1)a[t].c()},m(t,s){u(t,e,s);for(let t=0;t<a.length;t+=1)a[t].m(e,null);n=!0},p(t,n){if(t.sections||t.$url){let l;for(s=at,l=0;l<s.length;l+=1){const o=dt(n,s,l);a[l]?(a[l].p(t,o),D(a[l],1)):(a[l]=ht(o),a[l].c(),D(a[l],1),a[l].m(e,null))}for(A(),l=s.length;l<a.length;l+=1)o(l);G()}},i(t){if(!n){for(let t=0;t<s.length;t+=1)D(a[t]);n=!0}},o(t){a=a.filter(Boolean);for(let t=0;t<a.length;t+=1)N(a[t]);n=!1},d(t){t&&h(e),m(a,t)}}}function gt(t,e,n){let s;return c(t,K,t=>{n("$url",s=t)}),{$url:s}}class ft extends W{constructor(t){super(),R(this,t,gt,mt,l,[])}}const bt=()=>({}),yt=()=>({}),jt=()=>({}),vt=()=>({});function wt(t){var e,n,s,a,o;const l=t.$$slots.result,c=r(l,t,vt),m=t.$$slots.code,f=r(m,t,yt);return{c(){e=g("div"),n=g("div"),c&&c.c(),s=b(),a=g("div"),f&&f.c(),j(n,"class","result"),j(a,"class","code"),j(e,"class","example")},l(t){c&&c.l(div0_nodes),f&&f.l(div1_nodes)},m(t,l){u(t,e,l),d(e,n),c&&c.m(n,null),d(e,s),d(e,a),f&&f.m(a,null),o=!0},p(t,e){c&&c.p&&t.$$scope&&c.p(p(l,e,t,jt),i(l,e,vt)),f&&f.p&&t.$$scope&&f.p(p(m,e,t,bt),i(m,e,yt))},i(t){o||(D(c,t),D(f,t),o=!0)},o(t){N(c,t),N(f,t),o=!1},d(t){t&&h(e),c&&c.d(t),f&&f.d(t)}}}function $t(t,e,n){let{$$slots:s={},$$scope:a}=e;return t.$set=(t=>{"$$scope"in t&&n("$$scope",a=t.$$scope)}),{$$slots:s,$$scope:a}}class xt extends W{constructor(t){super(),R(this,t,$t,wt,l,[])}}var kt="/svelte-docs/";function Tt(t){var e,n;return{c(){j(e=g("iframe"),"slot","result"),w(e,"height",t.iframe_height+"px"),j(e,"title","Result"),j(e,"scrolling","no"),j(e,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),j(e,"srcdoc",t.srcdoc),j(e,"class","svelte-y9biys"),n=y(e,"load",t.sendMessage)},m(n,s){u(n,e,s),t.iframe_1_binding(e)},p(t,n){t.iframe_height&&w(e,"height",n.iframe_height+"px")},d(s){s&&h(e),t.iframe_1_binding(null),n()}}}function Mt(t){var e,n,s=t.code.trim()+"";return{c(){e=g("pre"),n=g("code"),j(e,"slot","code"),j(e,"class","hljs svelte-y9biys")},m(t,a){u(t,e,a),d(e,n),n.innerHTML=s},p(t,e){t.code&&s!==(s=e.code.trim()+"")&&(n.innerHTML=s)},d(t){t&&h(e)}}}function Ct(e){var n;return{c(){n=b()},m(t,e){u(t,n,e)},p:t,d(t){t&&h(n)}}}function Lt(t){var e,n=new xt({props:{$$slots:{default:[Ct],code:[Mt],result:[Tt]},$$scope:{ctx:t}}});return{c(){n.$$.fragment.c()},m(t,s){z(n,t,s),e=!0},p(t,e){var s={};(t.$$scope||t.code||t.iframe_height||t.iframe)&&(s.$$scope={changed:t,ctx:e}),n.$set(s)},i(t){e||(D(n.$$.fragment,t),e=!0)},o(t){N(n.$$.fragment,t),e=!1},d(t){Y(n,t)}}}let Ht=1;function St(t,e,n){let s,{name:a,code:o}=e,l=Ht++,c=70;const r=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${kt}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",function(t){t.data.iframe_id&&t.data.iframe_id===l&&t.data.hasOwnProperty("HEIGHT")&&n("iframe_height",c=t.data.HEIGHT)}),t.$set=(t=>{"name"in t&&n("name",a=t.name),"code"in t&&n("code",o=t.code)}),{name:a,code:o,iframe:s,iframe_height:c,srcdoc:r,sendMessage:function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},iframe_1_binding:function(t){C[t?"unshift":"push"](()=>{n("iframe",s=t)})}}}class _t extends W{constructor(t){super(),R(this,t,St,Lt,l,["name","code"])}}function Bt(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,v,w,$,x,k,T,M,C,L,H,S,_,B,P,E,I,q=new _t({props:{name:"Ex_0_2c00f19dbd1f6585d4a7090b533cfdec",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>'}});return{c(){(n=g("h1")).textContent="Welcome",s=b(),(a=g("p")).innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',o=b(),(l=g("blockquote")).innerHTML='<p><strong><div class="svelte-hk3qb6">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',c=b(),(r=g("ul")).innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte\'s features.</p></li> <li><p>Import and use any Svelte components right inside a markup</p></li> <li><p>Documentation building as static files, so you can publish it everywhere</p></li> <li><p>Customizable <a href="theming">themes</a></p></li> <li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',i=b(),(p=g("h2")).textContent="Zero-config",d=b(),(m=g("p")).textContent="Just run:",f=b(),(y=g("pre")).innerHTML='<code class="language-bash">npm init svelte-docs</code>',v=b(),(w=g("p")).innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',$=b(),(x=g("h2")).textContent="Builtins",k=b(),(T=g("h3")).textContent="Examples",M=b(),(C=g("p")).textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",L=b(),q.$$.fragment.c(),H=b(),(S=g("h3")).textContent="Properties",_=b(),(B=g("p")).innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component's <code>*.svelte</code> file.",P=b(),(E=g("dl")).innerHTML="<dt>type</dt><dd><dfn><i>'default'</i>,<i>'error'</i>,<i>'warning'</i></dfn></dd><dd>'default'</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",j(E,"class","properties")},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),u(t,k,e),u(t,T,e),u(t,M,e),u(t,C,e),u(t,L,e),z(q,t,e),u(t,H,e),u(t,S,e),u(t,_,e),u(t,B,e),u(t,P,e),u(t,E,e),I=!0},p:t,i(t){I||(D(q.$$.fragment,t),I=!0)},o(t){N(q.$$.fragment,t),I=!1},d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(v),h(w),h($),h(x),h(k),h(T),h(M),h(C),h(L)),Y(q,t),t&&(h(H),h(S),h(_),h(B),h(P),h(E))}}}function Pt(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,j,v,w,$,x,k,T,M,C,L,H,S,_,B,P,E,I,q,A,G,O,R,W=new _t({props:{name:"Ex_0_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">&nbsp;\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>'}}),U=new _t({props:{name:"Ex_1_df769f2dd1c95be1e32ee728c8e52330",code:'\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n'}}),K=new _t({props:{name:"Ex_2_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),F=new _t({props:{name:"Ex_3_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),J=new _t({props:{name:"Ex_4_df769f2dd1c95be1e32ee728c8e52330",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span>'}});return{c(){(n=g("h1")).textContent="Example code block",s=b(),(a=g("p")).innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=b(),(l=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',c=b(),W.$$.fragment.c(),r=b(),(i=g("h3")).textContent="Hide script and/or style blocks",p=b(),(d=g("p")).innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",m=b(),(f=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',y=b(),U.$$.fragment.c(),j=b(),(v=g("h3")).textContent="Import in examples",w=b(),($=g("p")).innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",x=b(),K.$$.fragment.c(),k=b(),(T=g("p")).textContent="Also you can import any local file by relative path according documents directory root:",M=b(),F.$$.fragment.c(),C=b(),(L=g("p")).innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',H=b(),(S=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:{\n    <span class="hljs-string">\'./Button.svelte\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>,\n    <span class="hljs-string">\'my-button-package\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>\n},\n...</code>',_=b(),J.$$.fragment.c(),B=b(),(P=g("h3")).textContent="Styling",E=b(),(I=g("p")).innerHTML="Styles of the documentation site doesn't affect on the Example's result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",q=b(),(A=g("p")).innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',G=b(),(O=g("p")).innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component."},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),z(W,t,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),z(U,t,e),u(t,j,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),z(K,t,e),u(t,k,e),u(t,T,e),u(t,M,e),z(F,t,e),u(t,C,e),u(t,L,e),u(t,H,e),u(t,S,e),u(t,_,e),z(J,t,e),u(t,B,e),u(t,P,e),u(t,E,e),u(t,I,e),u(t,q,e),u(t,A,e),u(t,G,e),u(t,O,e),R=!0},p:t,i(t){R||(D(W.$$.fragment,t),D(U.$$.fragment,t),D(K.$$.fragment,t),D(F.$$.fragment,t),D(J.$$.fragment,t),R=!0)},o(t){N(W.$$.fragment,t),N(U.$$.fragment,t),N(K.$$.fragment,t),N(F.$$.fragment,t),N(J.$$.fragment,t),R=!1},d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c)),Y(W,t),t&&(h(r),h(i),h(p),h(d),h(m),h(f),h(y)),Y(U,t),t&&(h(j),h(v),h(w),h($),h(x)),Y(K,t),t&&(h(k),h(T),h(M)),Y(F,t),t&&(h(C),h(L),h(H),h(S),h(_)),Y(J,t),t&&(h(B),h(P),h(E),h(I),h(q),h(A),h(G),h(O))}}}function Et(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,v,w,$,x,k,T,M,C,L,H,S,_,B,P,E,I,q,A,G,D,N,z,Y,O,R,W;return{c(){(n=g("h1")).textContent="Properties",s=b(),(a=g("p")).textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=b(),(l=g("p")).innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",c=b(),(r=g("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',i=b(),(p=g("p")).textContent="There are four properties:",d=b(),(m=g("ol")).innerHTML="<li><em>name</em> - it hasn't default value, so it is not optional. Probably it should be string type, but who knows.</li> <li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> <li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> <li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like '20px'.</li>",f=b(),(y=g("p")).textContent="So lets create fancy table of properties for this component:",v=b(),(w=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | \'text\',\'number\',\'range\',\'date\'(\'text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code>',$=b(),(x=g("dl")).innerHTML="<dt class=\"required\">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>'text'</i>,<i>'number'</i>,<i>'range'</i>,<i>'date'</i></dfn></dd><dd>'text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>",k=b(),(T=g("p")).textContent="Now user of your component will know all about its properties.",M=b(),(C=g("h3")).textContent="Describing property",L=b(),(H=g("ul")).innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> <li><p>If property may have one of the defined values, list them separated by commas: <code>'a','b','c'</code></p></li> <li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>'a','b','c'/bool</code></p></li> <li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number('foo')</code></p></li>",S=b(),(_=g("h3")).textContent="Autogenerated properties",B=b(),(P=g("p")).innerHTML="Another way to describre properties, retrieve it right from the Svelte component. But you should add special comment lines above each property. Let's change our <em>Input.svelte</em> and add comment for each properties:",E=b(),(I=g("pre")).innerHTML='<code class="language-html">// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-comment">/* Name of the input | string */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/* Type of the input | \'text\',\'number\',\'range\',\'date\' */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-comment">/* Should the input be disabled | bool */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/* Size of the input | number/string */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',q=b(),(A=g("p")).textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",G=b(),(D=g("p")).textContent="Then just place a path to the this component inside Properties code block:",N=b(),(z=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code>',Y=b(),(O=g("p")).textContent="And get the result:",R=b(),(W=g("dl")).innerHTML="<dt class=\"required\">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>'text'</i>,<i>'number'</i>,<i>'range'</i>,<i>'date'</i></dfn></dd><dd>'text'</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>",j(x,"class","properties"),j(W,"class","properties")},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),u(t,k,e),u(t,T,e),u(t,M,e),u(t,C,e),u(t,L,e),u(t,H,e),u(t,S,e),u(t,_,e),u(t,B,e),u(t,P,e),u(t,E,e),u(t,I,e),u(t,q,e),u(t,A,e),u(t,G,e),u(t,D,e),u(t,N,e),u(t,z,e),u(t,Y,e),u(t,O,e),u(t,R,e),u(t,W,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(v),h(w),h($),h(x),h(k),h(T),h(M),h(C),h(L),h(H),h(S),h(_),h(B),h(P),h(E),h(I),h(q),h(A),h(G),h(D),h(N),h(z),h(Y),h(O),h(R),h(W))}}}function It(e){var n,s,a,o,l,c,r,i,p;return{c(){(n=g("h1")).textContent="Basepath option",s=b(),(a=g("p")).innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=b(),(l=g("p")).innerHTML='By default <code>basepath</code> is equal <code>\'/\'</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',c=b(),(r=g("p")).innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=b(),(p=g("blockquote")).innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: '/name-of-your-repo/'</code>.</p>"},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p))}}}function qt(e){var n,s,a;return{c(){(n=g("h1")).textContent="Configuration",s=b(),(a=g("p")).innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a))}}}function At(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,j,v;return{c(){(n=g("h1")).textContent="incCSS option",s=b(),(a=g("p")).textContent="If you want to use global CSS styles for result in the Example code block. You can easy include them with this option.",o=b(),(l=g("p")).textContent="Suppose you have following structure of your project:",c=b(),(r=g("pre")).innerHTML='<code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   ├── counter.css\n│   └── Counter.svelte\n└── ...</code>',i=b(),(p=g("p")).innerHTML="Add <em>global css</em> using <code>incCSS</code> option:",d=b(),(m=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">\'./../mycomponent/counter.css\'</span>,\n    ...\n]</code>',f=b(),(y=g("p")).textContent="Same way you can import any CSS from NPM packages(don't forget to install it before):",j=b(),(v=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">\'node_modules/thebestcssframework/styles.min.css\'</span>,\n    ...\n]</code>'},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,j,e),u(t,v,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(j),h(v))}}}function Gt(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,j,v,w,$,x,k,T,M;return{c(){(n=g("h1")).textContent="incPKG option",s=b(),(a=g("p")).innerHTML="If you want use your local components in Examples code block you should link it with vitrual package name in <code>incPKG</code> option.",o=b(),(l=g("p")).textContent="Suppose you have following structure of your project:",c=b(),(r=g("pre")).innerHTML='<code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code>',i=b(),(p=g("p")).innerHTML="And want to import <code>mycomponents/Counter.svelte</code> in your Example code block, you may use relative path(from the docs root) like this:",d=b(),(m=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'./../mycomponent/Counter.svelte\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>',f=b(),(y=g("p")).textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",j=b(),(v=g("p")).innerHTML="So you can add <em>virtual package</em> using <code>incPKG</code> option:",w=b(),($=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incPKG</span>:{\n    ...\n    <span class="hljs-string">"my-counter-package"</span>: <span class="hljs-string">"./../mycomponent/Counter.svelte"</span>,\n    ...\n}</code>',x=b(),(k=g("p")).innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",T=b(),(M=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'my-counter-package\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>'},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,j,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),u(t,k,e),u(t,T,e),u(t,M,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(j),h(v),h(w),h($),h(x),h(k),h(T),h(M))}}}function Dt(e){var n,s,a,o,l,c,r;return{c(){(n=g("h1")).textContent="Pathes option",s=b(),(a=g("p")).textContent="There are two pathes you can change.",o=b(),(l=g("ul")).innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don't use this files in production!</strong></p></li> <li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",c=b(),(r=g("blockquote")).innerHTML="<p>In most cases you don't need to change these options.</p>"},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r))}}}function Nt(e){var n,s,a,o,l,c,r,i,p;return{c(){(n=g("h1")).textContent="Preprocess option",s=b(),(a=g("p")).innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=b(),(l=g("pre")).innerHTML='<code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'svelte-preprocess-markdown\'</span>);\n\n<span class="hljs-built_in">module</span>.exports={\n    ...\n    preprocess: [\n        ...\n        markdown({<span class="hljs-attr">filetype</span>: <span class="hljs-string">\'svelte\'</span>}),\n        ...\n    ]\n    ...\n}</code>',c=b(),(r=g("p")).textContent="Then all your examples will be preprocessed:",i=b(),(p=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = \'World\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, {name}!</span>\n<span class="hljs-code">    ```</span></code>'},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p))}}}function zt(e){var n,s,a,o,l,c,r,i,p,d,m,f,y;return{c(){(n=g("h1")).textContent="Publishing on Github Pages",s=b(),(a=g("p")).innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=b(),(l=g("p")).textContent="To do it just run command in you documents source directory at any time:",c=b(),(r=g("pre")).innerHTML='<code class="language-bash">npm run deploy</code>',i=b(),(p=g("p")).textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=b(),(m=g("blockquote")).innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",f=b(),(y=g("blockquote")).innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>'},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y))}}}function Yt(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,j,v,w,$,x,k,T,M,C,L,H,S,_,B,P,E,I,q;return{c(){(n=g("h1")).textContent="Getting started",s=b(),(a=g("h3")).textContent="Initialize Svelte-docs",o=b(),(l=g("p")).textContent="Just run this command in the root directory of your project:",c=b(),(r=g("pre")).innerHTML='<code class="language-bash">npm init svelte-docs</code>',i=b(),(p=g("p")).textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=b(),(m=g("h3")).textContent="Edit your docs",f=b(),(y=g("p")).textContent="Switch to the created directory, ex.:",j=b(),(v=g("pre")).innerHTML='<code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code>',w=b(),($=g("p")).textContent="Run docs in development mode on the local server:",x=b(),(k=g("pre")).innerHTML='<code class="language-bash">npm run dev</code>',T=b(),(M=g("p")).innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',C=b(),(L=g("p")).innerHTML="Now you can edit files in <code>src/docs</code> directory and page in a browser will be reloaded on each save. ",H=b(),(S=g("h3")).textContent="Build the documentation site",_=b(),(B=g("p")).textContent="As soon as documentation ready for release you need to run the build:",P=b(),(E=g("pre")).innerHTML='<code class="language-bash">npm run build</code>',I=b(),(q=g("p")).innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.'},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,j,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),u(t,k,e),u(t,T,e),u(t,M,e),u(t,C,e),u(t,L,e),u(t,H,e),u(t,S,e),u(t,_,e),u(t,B,e),u(t,P,e),u(t,E,e),u(t,I,e),u(t,q,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(j),h(v),h(w),h($),h(x),h(k),h(T),h(M),h(C),h(L),h(H),h(S),h(_),h(B),h(P),h(E),h(I),h(q))}}}function Ot(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,j,v,w,$,x,k;return{c(){(n=g("h1")).textContent="Theming",s=b(),(a=g("p")).innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=b(),(l=g("h3")).textContent="Themes",c=b(),(r=g("p")).innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=b(),(p=g("h3")).textContent="Colors",d=b(),(m=g("p")).innerHTML="You can change the colors of the current theme by changing custom properties in the <code>src/theme/styles.css</code> file.",f=b(),(y=g("h3")).textContent="Styles",j=b(),(v=g("p")).innerHTML="You can find all styles of the site in the <code>src/theme/styles</code> directory. ",w=b(),($=g("h3")).textContent="Layout",x=b(),(k=g("p")).innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,j,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),u(t,k,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(j),h(v),h(w),h($),h(x),h(k))}}}function Rt(e){var n,s,o,l,c,r,i,p;return{c(){n=g("span"),(s=g("span")).textContent="-",o=b(),l=g("span"),c=f(e.count),r=b(),(i=g("span")).textContent="+",j(s,"class","minus svelte-1kq48qn"),j(l,"class","value svelte-1kq48qn"),j(i,"class","plus svelte-1kq48qn"),j(n,"class","counter svelte-1kq48qn"),p=[y(s,"click",e.click_handler),y(i,"click",e.click_handler_1)]},m(t,e){u(t,n,e),d(n,s),d(n,o),d(n,l),d(l,c),d(n,r),d(n,i)},p(t,e){t.count&&v(c,e.count)},i:t,o:t,d(t){t&&h(n),a(p)}}}function Wt(t,e,n){let s=0;return{count:s,click_handler:t=>n("count",s--,s),click_handler_1:t=>n("count",s++,s)}}class Ut extends W{constructor(t){super(),R(this,t,Wt,Rt,l,[])}}function Kt(e){var n;return{c(){(n=g("blockquote")).innerHTML="<p><em>MDSv is really cool!</em></p>"},m(t,e){u(t,n,e)},p:t,i:t,o:t,d(t){t&&h(n)}}}class Ft extends W{constructor(t){super(),R(this,t,null,Kt,l,[])}}function Jt(t,e,n){const s=Object.create(t);return s.item=e[n],s}function Zt(t){var e,n,s,a=t.item+"";return{c(){e=g("ul"),n=g("li"),s=f(a)},m(t,a){u(t,e,a),d(e,n),d(n,s)},p(t,e){t.items&&a!==(a=e.item+"")&&v(s,a)},d(t){t&&h(e)}}}function Qt(t){var e,n,s,o,l,c,r,i,p,f,j,v,w,$,x,k,T,M,C,L,H,S,_,B,P,E,I,q,A,G,O,R,W,U,K,F,J,Z,Q,V;let X=t.items,tt=[];for(let e=0;e<X.length;e+=1)tt[e]=Zt(Jt(t,X,e));var et=new Ut({}),nt=new Ft({});return{c(){(e=g("h1")).textContent="What is MDSv",n=b(),(s=g("p")).textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",o=b(),(l=g("p")).innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',c=b(),(r=g("p")).textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=b(),(p=g("p")).textContent="This document also wrote in MDSv format, so we can do this right inside the document...",f=b(),(j=g("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">\'item0\'</span>,<span class="hljs-string">\'item1\'</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{ items = [...items,<span class="hljs-string">\'item\'</span>+items.length] }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>{ items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n{#each_2 item as item}\n* {item}\n{/each}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{add}</span>&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{del}</span>&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code>',v=b(),(w=g("p")).textContent="... and get the result:",$=b();for(let t=0;t<tt.length;t+=1)tt[t].c();x=b(),(k=g("button")).textContent="Add Item",T=b(),(M=g("button")).textContent="Del Item",C=b(),(L=g("p")).textContent="Or we can import any Svelte component and use it where we want:",H=b(),(S=g("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from \'./Counter.svelte\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span></code>',_=b(),(B=g("p")).textContent="... and it will work:",P=b(),E=g("p"),(I=g("em")).textContent="The counter:",q=b(),et.$$.fragment.c(),A=b(),(G=g("p")).innerHTML="You even can import other <code>*.md</code> files:",O=b(),(R=g("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from \'./spoiler.md\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code>',W=b(),(U=g("p")).textContent="... and it will be included in the specified place:",K=b(),F=g("p"),(J=g("strong")).textContent="Spoiler:",Z=b(),nt.$$.fragment.c(),V=[y(k,"click",t.add),y(M,"click",t.del)]},m(t,a){u(t,e,a),u(t,n,a),u(t,s,a),u(t,o,a),u(t,l,a),u(t,c,a),u(t,r,a),u(t,i,a),u(t,p,a),u(t,f,a),u(t,j,a),u(t,v,a),u(t,w,a),u(t,$,a);for(let e=0;e<tt.length;e+=1)tt[e].m(t,a);u(t,x,a),u(t,k,a),u(t,T,a),u(t,M,a),u(t,C,a),u(t,L,a),u(t,H,a),u(t,S,a),u(t,_,a),u(t,B,a),u(t,P,a),u(t,E,a),d(E,I),d(E,q),z(et,E,null),u(t,A,a),u(t,G,a),u(t,O,a),u(t,R,a),u(t,W,a),u(t,U,a),u(t,K,a),u(t,F,a),d(F,J),d(F,Z),z(nt,F,null),Q=!0},p(t,e){if(t.items){let n;for(X=e.items,n=0;n<X.length;n+=1){const s=Jt(e,X,n);tt[n]?tt[n].p(t,s):(tt[n]=Zt(s),tt[n].c(),tt[n].m(x.parentNode,x))}for(;n<tt.length;n+=1)tt[n].d(1);tt.length=X.length}},i(t){Q||(D(et.$$.fragment,t),D(nt.$$.fragment,t),Q=!0)},o(t){N(et.$$.fragment,t),N(nt.$$.fragment,t),Q=!1},d(t){t&&(h(e),h(n),h(s),h(o),h(l),h(c),h(r),h(i),h(p),h(f),h(j),h(v),h(w),h($)),m(tt,t),t&&(h(x),h(k),h(T),h(M),h(C),h(L),h(H),h(S),h(_),h(B),h(P),h(E)),Y(et),t&&(h(A),h(G),h(O),h(R),h(W),h(U),h(K),h(F)),Y(nt),a(V)}}}function Vt(t,e,n){let s=["item0","item1"];return{items:s,add:function(){n("items",s=[...s,"item"+s.length])},del:function(){n("items",s=s.slice(0,-1))}}}function Xt(e){var n,s,a,o,l,c,r,i,p,d,m;return{c(){(n=g("h1")).textContent="Static files",s=b(),(a=g("p")).innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/pages/static</code> directory.",o=b(),(l=g("p")).innerHTML="For example, if you placed image in the <code>src/pages/static/great-success.png</code> then you can include it by following code:",c=b(),(r=g("pre")).innerHTML='<code class="language-markdown">![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code>',i=b(),(p=g("p")).textContent="... and get image on your page:",d=b(),(m=g("p")).innerHTML='<img src="static/great-success.png" alt="Great Success">;'},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m))}}}function te(e){var n,s,a,o,l,c,r,i,p,d,m,f,y,j,v,w,$,x,k,T,M,C,L,H,S,_,B,P,E,I,q,A,G,D,N,z,Y,O,R,W,U,K,F;return{c(){(n=g("h1")).textContent="Structure",s=b(),(a=g("p")).innerHTML="In common cases you should edit <code>*.md</code> files in the <code>src/docs</code> directory. There are several files and directories:",o=b(),(l=g("ul")).innerHTML="<li><strong>pages</strong> - all pages of your documentation are stored in this directory, except start page</li> <li><strong>static</strong> - place here any static assets using in your documentation. Files, images, icons and etc.</li> <li><strong>topbar.md</strong> - file to customize logo and links on the topbar of the site</li> <li><strong>sections.md</strong> - representation of the documentation contents links</li> <li><strong>start.md</strong> - root page of the documentation</li>",c=b(),(r=g("h2")).textContent="Routing",i=b(),(p=g("p")).innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/docs/pages</code> directory:",d=b(),(m=g("pre")).innerHTML='<code class="language-bash">src                         <span class="hljs-comment">#  URL path part:</span>\n└── docs                    <span class="hljs-comment">#    ex: http://mydocs.com/install,</span>\n    ├── pages               <span class="hljs-comment">#        http://mydocs.com/component/button</span>\n    │   ├── components      <span class="hljs-comment">#</span>\n    │   │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    │   ├── install.md      <span class="hljs-comment">#  install</span>\n    └── start.md            <span class="hljs-comment">#  / </span></code>',f=b(),(y=g("h2")).textContent="sections.md",j=b(),(v=g("p")).textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",w=b(),($=g("p")).textContent="Let's look on example:",x=b(),(k=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-bullet">\n* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',T=b(),(M=g("p")).innerHTML="As you can see it is just an 1 or 2-level list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/docs/pages</code> directory. ",C=b(),(L=g("p")).innerHTML="URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/docs/pages/components/button.md</code> file. Please see <em>Routing</em> section on this page for more info about URL.",H=b(),(S=g("p")).textContent="External URLs will be opened in new window.",_=b(),(B=g("h2")).textContent="topbar.md",P=b(),(E=g("p")).textContent="There you can change logo's text and add links on topbar of the documentation site.",I=b(),(q=g("p")).textContent="Common example of its structure:",A=b(),(G=g("pre")).innerHTML='<code class="language-markdown"><span class="hljs-section"># My*Lib* #</span>\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ \n<span class="hljs-bullet">* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',D=b(),(N=g("p")).innerHTML="Logo's text is situated between <code>#</code> marks (like a <em>h1</em> paragraph in markdown). The text of logo will have primary color of current theme, but the text between <code>*</code> marks will be of secondary color. ",z=b(),(Y=g("p")).innerHTML="Second part of the <code>topbar.md</code> is a single-level list of links. There are same rules than in <code>sections.md</code> above.",O=b(),(R=g("h2")).textContent="start.md",W=b(),(U=g("p")).innerHTML='This is just a root page of your documentation, which will be available at <a href="https://mydocs.com/">https://mydocs.com/</a>, or when you user will click on the link to <code>/</code>. ',K=b(),(F=g("blockquote")).innerHTML="<p>Don't delete <code>start.md</code> file, it will break the documentation.</p>"},m(t,e){u(t,n,e),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),u(t,c,e),u(t,r,e),u(t,i,e),u(t,p,e),u(t,d,e),u(t,m,e),u(t,f,e),u(t,y,e),u(t,j,e),u(t,v,e),u(t,w,e),u(t,$,e),u(t,x,e),u(t,k,e),u(t,T,e),u(t,M,e),u(t,C,e),u(t,L,e),u(t,H,e),u(t,S,e),u(t,_,e),u(t,B,e),u(t,P,e),u(t,E,e),u(t,I,e),u(t,q,e),u(t,A,e),u(t,G,e),u(t,D,e),u(t,N,e),u(t,z,e),u(t,Y,e),u(t,O,e),u(t,R,e),u(t,W,e),u(t,U,e),u(t,K,e),u(t,F,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s),h(a),h(o),h(l),h(c),h(r),h(i),h(p),h(d),h(m),h(f),h(y),h(j),h(v),h(w),h($),h(x),h(k),h(T),h(M),h(C),h(L),h(H),h(S),h(_),h(B),h(P),h(E),h(I),h(q),h(A),h(G),h(D),h(N),h(z),h(Y),h(O),h(R),h(W),h(U),h(K),h(F))}}}var ee={"/":class extends W{constructor(t){super(),R(this,t,null,Bt,l,[])}},"/builtins/example":class extends W{constructor(t){super(),R(this,t,null,Pt,l,[])}},"/builtins/properties":class extends W{constructor(t){super(),R(this,t,null,Et,l,[])}},"/config/basepath":class extends W{constructor(t){super(),R(this,t,null,It,l,[])}},"/config/file":class extends W{constructor(t){super(),R(this,t,null,qt,l,[])}},"/config/inccss":class extends W{constructor(t){super(),R(this,t,null,At,l,[])}},"/config/incpkg":class extends W{constructor(t){super(),R(this,t,null,Gt,l,[])}},"/config/pathes":class extends W{constructor(t){super(),R(this,t,null,Dt,l,[])}},"/config/preprocess":class extends W{constructor(t){super(),R(this,t,null,Nt,l,[])}},"/publishing/ghpages":class extends W{constructor(t){super(),R(this,t,null,zt,l,[])}},"/start":class extends W{constructor(t){super(),R(this,t,null,Yt,l,[])}},"/theming":class extends W{constructor(t){super(),R(this,t,null,Ot,l,[])}},"/writing/mdsv":class extends W{constructor(t){super(),R(this,t,Vt,Qt,l,[])}},"/writing/static":class extends W{constructor(t){super(),R(this,t,null,Xt,l,[])}},"/writing/structure":class extends W{constructor(t){super(),R(this,t,null,te,l,[])}}};function ne(e){var n,s;return{c(){(n=g("h1")).textContent="Error",s=f("\n\nPage not found")},m(t,e){u(t,n,e),u(t,s,e)},p:t,i:t,o:t,d(t){t&&(h(n),h(s))}}}class se extends W{constructor(t){super(),R(this,t,null,ne,l,[])}}function ae(t){var e,n,s=t.cmp;if(s)var a=new s({});return{c(){e=g("article"),a&&a.$$.fragment.c()},m(t,s){u(t,e,s),a&&z(a,e,null),n=!0},p(t,n){if(s!==(s=n.cmp)){if(a){A();const t=a;N(t.$$.fragment,1,0,()=>{Y(t,1)}),G()}s?((a=new s({})).$$.fragment.c(),D(a.$$.fragment,1),z(a,e,null)):a=null}},i(t){n||(a&&D(a.$$.fragment,t),n=!0)},o(t){a&&N(a.$$.fragment,t),n=!1},d(t){t&&h(e),a&&Y(a)}}}function oe(t,e,n){let s,a;return c(t,K,t=>{n("$url",s=t)}),t.$$.update=((t={$url:1})=>{t.$url&&n("cmp",a=function(t){return"/"!==t&&(t=`/${t}`),window.scrollTo(0,0),ee.hasOwnProperty(t)?ee[t]:se}(s))}),{cmp:a}}class le extends W{constructor(t){super(),R(this,t,oe,ae,l,[])}}function ce(e){var n,s,a,o,l,c,r,i,p=new st({}),d=new ft({}),m=new le({});return{c(){n=g("header"),p.$$.fragment.c(),s=b(),a=g("span"),o=b(),l=g("nav"),d.$$.fragment.c(),c=b(),r=g("main"),m.$$.fragment.c(),j(a,"class","showSidebar"),j(a,"tabindex","0")},m(t,e){u(t,n,e),z(p,n,null),u(t,s,e),u(t,a,e),u(t,o,e),u(t,l,e),z(d,l,null),u(t,c,e),u(t,r,e),z(m,r,null),i=!0},p:t,i(t){i||(D(p.$$.fragment,t),D(d.$$.fragment,t),D(m.$$.fragment,t),i=!0)},o(t){N(p.$$.fragment,t),N(d.$$.fragment,t),N(m.$$.fragment,t),i=!1},d(t){t&&h(n),Y(p),t&&(h(s),h(a),h(o),h(l)),Y(d),t&&(h(c),h(r)),Y(m)}}}class re extends W{constructor(t){super(),R(this,t,null,ce,l,[])}}function ie(e){var n,s=new re({});return{c(){s.$$.fragment.c()},m(t,e){z(s,t,e),n=!0},p:t,i(t){n||(D(s.$$.fragment,t),n=!0)},o(t){N(s.$$.fragment,t),n=!1},d(t){Y(s,t)}}}function pe(t){return T(()=>(addEventListener("click",J),function(){removeEventListener("click",J)})),{}}return new class extends W{constructor(t){super(),R(this,t,pe,ie,l,[])}}({target:document.body,props:{}})}();
