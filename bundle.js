var app=function(){"use strict";function n(){}const e=n=>n;function t(n,e){for(const t in e)n[t]=e[t];return n}function s(n){return n()}function a(){return Object.create(null)}function o(n){n.forEach(s)}function l(n){return"function"==typeof n}function c(n,e){return n!=n?e==e:n!==e||n&&"object"==typeof n||"function"==typeof n}function r(n,e,t){n.$$.on_destroy.push(function(n,e){const t=n.subscribe(e);return t.unsubscribe?()=>t.unsubscribe():t}(e,t))}function i(n,e,t){if(n){const s=p(n,e,t);return n[0](s)}}function p(n,e,s){return n[1]?t({},t(e.$$scope.ctx,n[1](s?s(e):{}))):e.$$scope.ctx}function d(n,e,s,a){return n[1]?t({},t(e.$$scope.changed||{},n[1](a?a(s):{}))):e.$$scope.changed||{}}const u="undefined"!=typeof window;let h=u?()=>window.performance.now():()=>Date.now(),m=u?n=>requestAnimationFrame(n):n;const f=new Set;let g,y=!1;function b(){f.forEach(n=>{n[0](h())||(f.delete(n),n[1]())}),(y=f.size>0)&&m(b)}function j(n){let e;return y||(y=!0,m(b)),{promise:new Promise(t=>{f.add(e=[n,t])}),abort(){f.delete(e)}}}function w(n,e){n.appendChild(e)}function x(n,e,t){n.insertBefore(e,t||null)}function v(n){n.parentNode.removeChild(n)}function $(n){return document.createElement(n)}function k(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function C(n){return document.createTextNode(n)}function S(){return C(" ")}function T(){return C("")}function M(n,e,t,s){return n.addEventListener(e,t,s),()=>n.removeEventListener(e,t,s)}function L(n,e,t){null==t?n.removeAttribute(e):n.getAttribute(e)!==t&&n.setAttribute(e,t)}function _(n,e){e=""+e,n.data!==e&&(n.data=e)}function H(n,e,t,s){n.style.setProperty(e,t,s?"important":"")}class E{constructor(n,e=null){this.e=$("div"),this.a=e,this.u(n)}m(n,e=null){for(let t=0;t<this.n.length;t+=1)x(n,this.n[t],e);this.t=n}u(n){this.e.innerHTML=n,this.n=Array.from(this.e.childNodes)}p(n){this.d(),this.u(n),this.m(this.t,this.a)}d(){this.n.forEach(v)}}let A,P=0,B={};function I(n,e,t,s,a,o,l,c=0){const r=16.666/s;let i="{\n";for(let n=0;n<=1;n+=r){const s=e+(t-e)*o(n);i+=100*n+`%{${l(s,1-s)}}\n`}const p=i+`100% {${l(t,1-t)}}\n}`,d=`__svelte_${function(n){let e=5381,t=n.length;for(;t--;)e=(e<<5)-e^n.charCodeAt(t);return e>>>0}(p)}_${c}`;if(!B[d]){if(!g){const n=$("style");document.head.appendChild(n),g=n.sheet}B[d]=!0,g.insertRule(`@keyframes ${d} ${p}`,g.cssRules.length)}const u=n.style.animation||"";return n.style.animation=`${u?`${u}, `:""}${d} ${s}ms linear ${a}ms 1 both`,P+=1,d}function D(n,e){n.style.animation=(n.style.animation||"").split(", ").filter(e?n=>n.indexOf(e)<0:n=>-1===n.indexOf("__svelte")).join(", "),e&&!--P&&m(()=>{if(P)return;let n=g.cssRules.length;for(;n--;)g.deleteRule(n);B={}})}function q(n){A=n}function G(n){(function(){if(!A)throw new Error("Function called outside component initialization");return A})().$$.on_mount.push(n)}const N=[],O=[],R=[],z=[],Y=Promise.resolve();let U,W=!1;function F(n){R.push(n)}function K(){const n=new Set;do{for(;N.length;){const n=N.shift();q(n),J(n.$$)}for(;O.length;)O.pop()();for(let e=0;e<R.length;e+=1){const t=R[e];n.has(t)||(t(),n.add(t))}R.length=0}while(N.length);for(;z.length;)z.pop()();W=!1}function J(n){null!==n.fragment&&(n.update(n.dirty),o(n.before_update),n.fragment&&n.fragment.p(n.dirty,n.ctx),n.dirty=null,n.after_update.forEach(F))}function Z(n,e,t){n.dispatchEvent(function(n,e){const t=document.createEvent("CustomEvent");return t.initCustomEvent(n,!1,!1,e),t}(`${e?"intro":"outro"}${t}`))}const Q=new Set;let V;function X(){V={r:0,c:[],p:V}}function nn(){V.r||o(V.c),V=V.p}function en(n,e){n&&n.i&&(Q.delete(n),n.i(e))}function tn(n,e,t,s){if(n&&n.o){if(Q.has(n))return;Q.add(n),V.c.push(()=>{Q.delete(n),s&&(t&&n.d(1),s())}),n.o(e)}}const sn={duration:0};function an(t,s,a,c){let r=s(t,a),i=c?0:1,p=null,d=null,u=null;function m(){u&&D(t,u)}function f(n,e){const t=n.b-i;return e*=Math.abs(t),{a:i,b:n.b,d:t,duration:e,start:n.start,end:n.start+e,group:n.group}}function g(s){const{delay:a=0,duration:l=300,easing:c=e,tick:g=n,css:y}=r||sn,b={start:h()+a,b:s};s||(b.group=V,V.r+=1),p?d=b:(y&&(m(),u=I(t,i,s,l,a,c,y)),s&&g(0,1),p=f(b,l),F(()=>Z(t,s,"start")),j(n=>{if(d&&n>d.start&&(p=f(d,l),d=null,Z(t,p.b,"start"),y&&(m(),u=I(t,i,p.b,p.duration,0,c,r.css))),p)if(n>=p.end)g(i=p.b,1-i),Z(t,p.b,"end"),d||(p.b?m():--p.group.r||o(p.group.c)),p=null;else if(n>=p.start){const e=n-p.start;i=p.a+p.d*c(e/p.duration),g(i,1-i)}return!(!p&&!d)}))}return{run(n){l(r)?(U||(U=Promise.resolve()).then(()=>{U=null}),U).then(()=>{r=r(),g(n)}):g(n)},end(){m(),p=d=null}}}function on(n){n&&n.c()}function ln(n,e,t){const{fragment:a,on_mount:c,on_destroy:r,after_update:i}=n.$$;a&&a.m(e,t),F(()=>{const e=c.map(s).filter(l);r?r.push(...e):o(e),n.$$.on_mount=[]}),i.forEach(F)}function cn(n,e){const t=n.$$;null!==t.fragment&&(o(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx={})}function rn(n,e){n.$$.dirty||(N.push(n),W||(W=!0,Y.then(K)),n.$$.dirty=a()),n.$$.dirty[e]=!0}function pn(e,t,s,l,c,r){const i=A;q(e);const p=t.props||{},d=e.$$={fragment:null,ctx:null,props:r,update:n,not_equal:c,bound:a(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:a(),dirty:null};let u=!1;var h;d.ctx=s?s(e,p,(n,t,s=t)=>(d.ctx&&c(d.ctx[n],d.ctx[n]=s)&&(d.bound[n]&&d.bound[n](s),u&&rn(e,n)),t)):p,d.update(),u=!0,o(d.before_update),d.fragment=!!l&&l(d.ctx),t.target&&(t.hydrate?d.fragment&&d.fragment.l((h=t.target,Array.from(h.childNodes))):d.fragment&&d.fragment.c(),t.intro&&en(e.$$.fragment),ln(e,t.target,t.anchor),K()),q(i)}class dn{$destroy(){cn(this,1),this.$destroy=n}$on(n,e){const t=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return t.push(e),()=>{const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}$set(){}}function un(e){let t;return{c(){(t=$("div")).innerHTML='<div class="banner svelte-19i87y2"><p class="svelte-19i87y2"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-19i87y2"></p> \n<p class="svelte-19i87y2">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-19i87y2"><a href="introduction" class="svelte-19i87y2">Introduction</a> \n<a href="getting-started" class="svelte-19i87y2">Getting Started</a></div>',L(t,"class","hero svelte-19i87y2")},m(n,e){x(n,t,e)},p:n,i:n,o:n,d(n){n&&v(t)}}}const hn={fullscreen:!0};class mn extends dn{constructor(n){super(),pn(this,n,null,un,c,{})}}const fn=()=>({}),gn=()=>({}),yn=()=>({}),bn=()=>({});function jn(n){let e,t,s,a,o;const l=n.$$slots.result,c=i(l,n,bn),r=n.$$slots.code,u=i(r,n,gn);return{c(){e=$("div"),t=$("div"),c&&c.c(),s=S(),a=$("div"),u&&u.c(),L(t,"class","result"),L(a,"class","code"),L(e,"class","example")},m(n,l){x(n,e,l),w(e,t),c&&c.m(t,null),w(e,s),w(e,a),u&&u.m(a,null),o=!0},p(n,e){c&&c.p&&n.$$scope&&c.p(d(l,e,n,yn),p(l,e,bn)),u&&u.p&&n.$$scope&&u.p(d(r,e,n,fn),p(r,e,gn))},i(n){o||(en(c,n),en(u,n),o=!0)},o(n){tn(c,n),tn(u,n),o=!1},d(n){n&&v(e),c&&c.d(n),u&&u.d(n)}}}function wn(n,e,t){let{$$slots:s={},$$scope:a}=e;return n.$set=(n=>{"$$scope"in n&&t("$$scope",a=n.$$scope)}),{$$slots:s,$$scope:a}}class xn extends dn{constructor(n){super(),pn(this,n,wn,jn,c,{})}}var vn="/svelte-docs/";function $n(n){let e,t;return{c(){L(e=$("iframe"),"slot","result"),H(e,"height",n.iframe_height+"px"),L(e,"title","Result"),L(e,"scrolling","no"),L(e,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),L(e,"srcdoc",n.srcdoc),L(e,"class","svelte-y9biys"),t=M(e,"load",n.sendMessage)},m(t,s){x(t,e,s),n.iframe_1_binding(e)},p(n,t){n.iframe_height&&H(e,"height",t.iframe_height+"px")},d(s){s&&v(e),n.iframe_1_binding(null),t()}}}function kn(n){let e,t,s=n.code.trim()+"";return{c(){e=$("pre"),t=$("code"),L(e,"slot","code"),L(e,"class","hljs svelte-y9biys")},m(n,a){x(n,e,a),w(e,t),t.innerHTML=s},p(n,e){n.code&&s!==(s=e.code.trim()+"")&&(t.innerHTML=s)},d(n){n&&v(e)}}}function Cn(e){let t;return{c(){t=S()},m(n,e){x(n,t,e)},p:n,d(n){n&&v(t)}}}function Sn(n){let e;const t=new xn({props:{$$slots:{default:[Cn],code:[kn],result:[$n]},$$scope:{ctx:n}}});return{c(){on(t.$$.fragment)},m(n,s){ln(t,n,s),e=!0},p(n,e){const s={};(n.$$scope||n.code||n.iframe_height||n.iframe)&&(s.$$scope={changed:n,ctx:e}),t.$set(s)},i(n){e||(en(t.$$.fragment,n),e=!0)},o(n){tn(t.$$.fragment,n),e=!1},d(n){cn(t,n)}}}let Tn=1;function Mn(n,e,t){let s,{name:a}=e,{code:o}=e,l=Tn++,c=70;const r=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${vn}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",function(n){n.data.iframe_id&&n.data.iframe_id===l&&n.data.hasOwnProperty("HEIGHT")&&t("iframe_height",c=n.data.HEIGHT)}),n.$set=(n=>{"name"in n&&t("name",a=n.name),"code"in n&&t("code",o=n.code)}),{name:a,code:o,iframe:s,iframe_height:c,srcdoc:r,sendMessage:function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},iframe_1_binding:function(n){O[n?"unshift":"push"](()=>{t("iframe",s=n)})}}}class Ln extends dn{constructor(n){super(),pn(this,n,Mn,Sn,c,{name:0,code:0})}}function _n(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w,k,C,T,M,L,_,H,A,P,B,I,D,q,G,N,O;const R=new Ln({props:{name:"Ex_0_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="css">\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span>'}}),z=new Ln({props:{name:"Ex_1_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n</span>'}}),Y=new Ln({props:{name:"Ex_2_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>'}}),U=new Ln({props:{name:"Ex_3_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>'}}),W=new Ln({props:{name:"Ex_4_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span></span>'}});return{c(){(t=$("h1")).textContent="Example code block",s=S(),(a=$("p")).innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=S(),c=S(),on(R.$$.fragment),r=S(),(i=$("h3")).textContent="Hide script and/or style blocks",p=S(),(d=$("p")).innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",u=S(),m=S(),on(z.$$.fragment),f=S(),(g=$("h3")).textContent="Import in examples",y=S(),(b=$("p")).innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",j=S(),on(Y.$$.fragment),w=S(),(k=$("p")).textContent="Also you can import any local file by relative path according documents directory root:",C=S(),on(U.$$.fragment),T=S(),(M=$("p")).innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',L=S(),H=S(),on(W.$$.fragment),A=S(),(P=$("h3")).textContent="Styling",B=S(),(I=$("p")).innerHTML="Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",D=S(),(q=$("p")).innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',G=S(),(N=$("p")).innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component.",l=new E(Hn,c),h=new E(En,m),_=new E(An,H)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),l.m(n,e),x(n,c,e),ln(R,n,e),x(n,r,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e),h.m(n,e),x(n,m,e),ln(z,n,e),x(n,f,e),x(n,g,e),x(n,y,e),x(n,b,e),x(n,j,e),ln(Y,n,e),x(n,w,e),x(n,k,e),x(n,C,e),ln(U,n,e),x(n,T,e),x(n,M,e),x(n,L,e),_.m(n,e),x(n,H,e),ln(W,n,e),x(n,A,e),x(n,P,e),x(n,B,e),x(n,I,e),x(n,D,e),x(n,q,e),x(n,G,e),x(n,N,e),O=!0},p:n,i(n){O||(en(R.$$.fragment,n),en(z.$$.fragment,n),en(Y.$$.fragment,n),en(U.$$.fragment,n),en(W.$$.fragment,n),O=!0)},o(n){tn(R.$$.fragment,n),tn(z.$$.fragment,n),tn(Y.$$.fragment,n),tn(U.$$.fragment,n),tn(W.$$.fragment,n),O=!1},d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&l.d(),n&&v(c),cn(R,n),n&&v(r),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&h.d(),n&&v(m),cn(z,n),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),cn(Y,n),n&&v(w),n&&v(k),n&&v(C),cn(U,n),n&&v(T),n&&v(M),n&&v(L),n&&_.d(),n&&v(H),cn(W,n),n&&v(A),n&&v(P),n&&v(B),n&&v(I),n&&v(D),n&&v(q),n&&v(G),n&&v(N)}}}const Hn='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button&#123;background: red&#125;</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',En='<pre><code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button&#123;background: red&#125;</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',An='<pre><code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:&#123;\n    <span class="hljs-string">\'./Button.svelte\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>,\n    <span class="hljs-string">\'my-button-package\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>\n&#125;,\n...</code></pre>\n';function Pn(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w,k,C,T,M,_,H,A,P,B,I,D,q,G,N,O,R,z,Y,U,W;return{c(){(t=$("h1")).textContent="Properties",s=S(),(a=$("p")).textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=S(),(l=$("p")).innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",c=S(),i=S(),(p=$("p")).textContent="There are four properties:",d=S(),(u=$("ol")).innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",h=S(),(m=$("p")).textContent="So lets create fancy table of properties for this component:",f=S(),y=S(),(b=$("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',j=S(),(w=$("p")).textContent="Now user of your component will know all about its properties.",k=S(),(C=$("h3")).textContent="Describing property",T=S(),(M=$("ul")).innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",_=S(),(H=$("h3")).textContent="Autogenerated properties",A=S(),(P=$("p")).innerHTML='Another way to describre properties, retrieve it right from the Svelte component with <a href="https://devdocs.io/jsdoc/tags-type">JSDoc @type</a> comments. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:',B=S(),D=S(),(q=$("p")).textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",G=S(),(N=$("p")).textContent="Then just place a path to the this component inside Properties code block:",O=S(),z=S(),(Y=$("p")).textContent="And get the result:",U=S(),(W=$("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',r=new E(Bn,i),g=new E(In,y),L(b,"class","properties"),I=new E(Dn,D),R=new E(qn,z),L(W,"class","properties")},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),r.m(n,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e),x(n,h,e),x(n,m,e),x(n,f,e),g.m(n,e),x(n,y,e),x(n,b,e),x(n,j,e),x(n,w,e),x(n,k,e),x(n,C,e),x(n,T,e),x(n,M,e),x(n,_,e),x(n,H,e),x(n,A,e),x(n,P,e),x(n,B,e),I.m(n,e),x(n,D,e),x(n,q,e),x(n,G,e),x(n,N,e),x(n,O,e),R.m(n,e),x(n,z,e),x(n,Y,e),x(n,U,e),x(n,W,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&r.d(),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&g.d(),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(T),n&&v(M),n&&v(_),n&&v(H),n&&v(A),n&&v(P),n&&v(B),n&&I.d(),n&&v(D),n&&v(q),n&&v(G),n&&v(N),n&&v(O),n&&R.d(),n&&v(z),n&&v(Y),n&&v(U),n&&v(W)}}}const Bn='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',In='<pre><code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | \'text\',\'number\',\'range\',\'date\'(\'text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Dn='<pre><code class="language-html">// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-comment">/** @type &#123;string&#125; Name of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/** @type &#123;(\'text\',\'number\',\'range\',\'date\')&#125; Type of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-comment">/** \n     * Should the input be disabled\n     * @type &#123;bool&#125; \n     */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/** @type &#123;(number|string)&#125; Size of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',qn='<pre><code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function Gn(e){let t,s,a,o,l,c,r,i,p;return{c(){(t=$("h1")).textContent="Basepath option",s=S(),(a=$("p")).innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=S(),(l=$("p")).innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',c=S(),(r=$("p")).innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=S(),(p=$("blockquote")).innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>"},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),x(n,r,e),x(n,i,e),x(n,p,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&v(r),n&&v(i),n&&v(p)}}}function Nn(e){let t,s,a;return{c(){(t=$("h1")).textContent="Configuration",s=S(),(a=$("p")).innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a)}}}function On(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g;return{c(){(t=$("h1")).textContent="incCSS option",s=S(),(a=$("p")).textContent="If you want to use global CSS styles for result in the Example code block. You can easy include them with this option.",o=S(),(l=$("p")).textContent="Suppose you have following structure of your project:",c=S(),i=S(),(p=$("p")).innerHTML="Add <em>global css</em> using <code>incCSS</code> option:",d=S(),h=S(),(m=$("p")).textContent="Same way you can import any CSS from NPM packages(don't forget to install it before):",f=S(),r=new E(Rn,i),u=new E(zn,h),g=new E(Yn,null)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),r.m(n,e),x(n,i,e),x(n,p,e),x(n,d,e),u.m(n,e),x(n,h,e),x(n,m,e),x(n,f,e),g.m(n,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&r.d(),n&&v(i),n&&v(p),n&&v(d),n&&u.d(),n&&v(h),n&&v(m),n&&v(f),n&&g.d()}}}const Rn='<pre><code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   ├── counter.css\n│   └── Counter.svelte\n└── ...</code></pre>\n',zn='<pre><code class="language-javascript">incCSS: [\n    ...\n    <span class="hljs-string">\'./../mycomponent/counter.css\'</span>,\n    ...\n]</code></pre>\n',Yn='<pre><code class="language-javascript">incCSS: [\n    ...\n    <span class="hljs-string">\'node_modules/thebestcssframework/styles.min.css\'</span>,\n    ...\n]</code></pre>\n';function Un(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w,k,C;return{c(){(t=$("h1")).textContent="incPKG option",s=S(),(a=$("p")).innerHTML="If you want use your local components in Examples code block you should link it with vitrual package name in <code>incPKG</code> option.",o=S(),(l=$("p")).textContent="Suppose you have following structure of your project:",c=S(),i=S(),(p=$("p")).innerHTML="And want to import <code>mycomponents/Counter.svelte</code> in your Example code block, you may use relative path(from the docs root) like this:",d=S(),h=S(),(m=$("p")).textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",f=S(),(g=$("p")).innerHTML="So you can add <em>virtual package</em> using <code>incPKG</code> option:",y=S(),j=S(),(w=$("p")).innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",k=S(),r=new E(Wn,i),u=new E(Fn,h),b=new E(Kn,j),C=new E(Jn,null)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),r.m(n,e),x(n,i,e),x(n,p,e),x(n,d,e),u.m(n,e),x(n,h,e),x(n,m,e),x(n,f,e),x(n,g,e),x(n,y,e),b.m(n,e),x(n,j,e),x(n,w,e),x(n,k,e),C.m(n,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&r.d(),n&&v(i),n&&v(p),n&&v(d),n&&u.d(),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&b.d(),n&&v(j),n&&v(w),n&&v(k),n&&C.d()}}}const Wn='<pre><code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code></pre>\n',Fn='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'./../mycomponent/Counter.svelte\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Kn='<pre><code class="language-javascript">incPKG:&#123;\n    ...\n    <span class="hljs-string">"my-counter-package"</span>: <span class="hljs-string">"./../mycomponent/Counter.svelte"</span>,\n    ...\n&#125;</code></pre>\n',Jn='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'my-counter-package\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function Zn(e){let t,s,a,o,l,c,r;return{c(){(t=$("h1")).textContent="Pathes option",s=S(),(a=$("p")).textContent="There are two pathes you can change.",o=S(),(l=$("ul")).innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",c=S(),(r=$("blockquote")).innerHTML="<p>In most cases you don&#39;t need to change these options.</p>"},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),x(n,r,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&v(r)}}}function Qn(e){let t,s,a,o,l,c,r,i,p;return{c(){(t=$("h1")).textContent="Preprocess option",s=S(),(a=$("p")).innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=S(),c=S(),(r=$("p")).textContent="Then all your examples will be preprocessed:",i=S(),l=new E(Vn,c),p=new E(Xn,null)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),l.m(n,e),x(n,c,e),x(n,r,e),x(n,i,e),p.m(n,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&l.d(),n&&v(c),n&&v(r),n&&v(i),n&&p.d()}}}const Vn='<pre><code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'svelte-preprocess-markdown\'</span>);\n\n<span class="hljs-built_in">module</span>.exports=&#123;\n    ...\n    preprocess: [\n        ...\n        markdown(&#123;<span class="hljs-attr">filetype</span>: <span class="hljs-string">\'svelte\'</span>&#125;),\n        ...\n    ]\n    ...\n&#125;</code></pre>\n',Xn='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = \'World\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, &#123;name&#125;!</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function ne(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w,k,C,T,M,L,_,H,A,P,B,I,D;return{c(){(t=$("h1")).textContent="Getting started",s=S(),(a=$("h3")).textContent="Initialize Svelte-docs",o=S(),(l=$("p")).textContent="Just run this command in the root directory of your project:",c=S(),i=S(),(p=$("p")).textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=S(),(u=$("h3")).textContent="Edit your docs",h=S(),(m=$("p")).textContent="Switch to the created directory, ex.:",f=S(),y=S(),(b=$("p")).textContent="Run docs in development mode on the local server:",j=S(),k=S(),(C=$("p")).innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',T=S(),(M=$("p")).innerHTML="Now you can edit files in <code>src/pages</code> directory and browser will be reloaded on each save. ",L=S(),(_=$("h3")).textContent="Build the documentation site",H=S(),(A=$("p")).textContent="As soon as documentation ready for release you need to run the build:",P=S(),I=S(),(D=$("p")).innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.',r=new E(ee,i),g=new E(te,y),w=new E(se,k),B=new E(ae,I)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),r.m(n,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e),x(n,h,e),x(n,m,e),x(n,f,e),g.m(n,e),x(n,y,e),x(n,b,e),x(n,j,e),w.m(n,e),x(n,k,e),x(n,C,e),x(n,T,e),x(n,M,e),x(n,L,e),x(n,_,e),x(n,H,e),x(n,A,e),x(n,P,e),B.m(n,e),x(n,I,e),x(n,D,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&r.d(),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&g.d(),n&&v(y),n&&v(b),n&&v(j),n&&w.d(),n&&v(k),n&&v(C),n&&v(T),n&&v(M),n&&v(L),n&&v(_),n&&v(H),n&&v(A),n&&v(P),n&&B.d(),n&&v(I),n&&v(D)}}}const ee='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n',te='<pre><code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code></pre>\n',se='<pre><code class="language-bash">npm run dev</code></pre>\n',ae='<pre><code class="language-bash">npm run build</code></pre>\n';function oe(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w,k,C,T,M,_,H,A,P,B,I,D,q;const G=new Ln({props:{name:"Ex_0_9753583d5391f3de0f3ee9487b6cf8d9",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>'}});return{c(){(t=$("h1")).textContent="Introdcing",s=S(),(a=$("h2")).textContent="Features",o=S(),(l=$("p")).innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',c=S(),(r=$("blockquote")).innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',i=S(),(p=$("ul")).innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',d=S(),(u=$("h2")).textContent="Zero-config",h=S(),(m=$("p")).textContent="Just run:",f=S(),y=S(),(b=$("p")).innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',j=S(),(w=$("h2")).textContent="Builtins",k=S(),(C=$("h3")).textContent="Examples",T=S(),(M=$("p")).textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",_=S(),on(G.$$.fragment),H=S(),(A=$("h3")).textContent="Properties",P=S(),(B=$("p")).innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component&#39;s <code>*.svelte</code> file.",I=S(),(D=$("dl")).innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",g=new E(le,y),L(D,"class","properties")},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),x(n,r,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e),x(n,h,e),x(n,m,e),x(n,f,e),g.m(n,e),x(n,y,e),x(n,b,e),x(n,j,e),x(n,w,e),x(n,k,e),x(n,C,e),x(n,T,e),x(n,M,e),x(n,_,e),ln(G,n,e),x(n,H,e),x(n,A,e),x(n,P,e),x(n,B,e),x(n,I,e),x(n,D,e),q=!0},p:n,i(n){q||(en(G.$$.fragment,n),q=!0)},o(n){tn(G.$$.fragment,n),q=!1},d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&v(r),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&g.d(),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(T),n&&v(M),n&&v(_),cn(G,n),n&&v(H),n&&v(A),n&&v(P),n&&v(B),n&&v(I),n&&v(D)}}}const le='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n';function ce(e){let t,s,a,o,l,c,r,i,p,d,u,h,m;return{c(){(t=$("h1")).textContent="Publishing on Github Pages",s=S(),(a=$("p")).innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=S(),(l=$("p")).textContent="To do it just run command in you documents source directory at any time:",c=S(),i=S(),(p=$("p")).textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=S(),(u=$("blockquote")).innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",h=S(),(m=$("blockquote")).innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>',r=new E(re,i)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),r.m(n,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e),x(n,h,e),x(n,m,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&r.d(),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m)}}}const re='<pre><code class="language-bash">npm run deploy</code></pre>\n';function ie(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w;return{c(){(t=$("h1")).textContent="Theming",s=S(),(a=$("p")).innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=S(),(l=$("h3")).textContent="Themes",c=S(),(r=$("p")).innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=S(),(p=$("h3")).textContent="Colors",d=S(),(u=$("p")).innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",h=S(),(m=$("h3")).textContent="Styles",f=S(),(g=$("p")).innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",y=S(),(b=$("h3")).textContent="Layout",j=S(),(w=$("p")).innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),x(n,r,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e),x(n,h,e),x(n,m,e),x(n,f,e),x(n,g,e),x(n,y,e),x(n,b,e),x(n,j,e),x(n,w,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&v(r),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w)}}}function pe(e){let t,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,j,w,k,C,T,M,L,_,H,A,P,B,I,D,q,G,N,O,R,z,Y,U,W,F,K,J;return{c(){(t=$("h1")).textContent="Includes",s=S(),(a=$("p")).innerHTML="In the <code>src/includes</code> directory live little MDSv components which you can include in any page you want. There are some default files used by theme:",o=S(),(l=$("h3")).textContent="sidebar.md",c=S(),(r=$("p")).textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",i=S(),(p=$("p")).textContent="Let's look on example:",d=S(),h=S(),(m=$("p")).innerHTML="Usually it is just a list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/pages</code> directory. ",f=S(),(g=$("p")).innerHTML='URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/pages/components/button.md</code> file. Please see <a href="writing/routing">Routing</a> section for more info about URL.',y=S(),(b=$("p")).textContent="External URLs will be opened in new window.",j=S(),(w=$("h3")).textContent="logo.md",k=S(),(C=$("p")).textContent="Commonly used for showing any logotype.  Just write something like:",T=S(),L=S(),(_=$("p")).textContent="Or you can use an image as your logotype:",H=S(),P=S(),(B=$("h3")).textContent="topbar.md",I=S(),(D=$("p")).textContent="Play with right section of the topbar. For example add some links there:",q=S(),N=S(),(O=$("h3")).textContent="error.md",R=S(),(z=$("p")).textContent="Just an error message which will be shown when user requests unexistent URL.",Y=S(),(U=$("h2")).textContent="Custom includes",W=S(),(F=$("p")).innerHTML="You are free to create any <code>*.md</code> files which you can to include on any page you want using special import path:",K=S(),u=new E(de,h),M=new E(ue,L),A=new E(he,P),G=new E(me,N),J=new E(fe,null)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),x(n,r,e),x(n,i,e),x(n,p,e),x(n,d,e),u.m(n,e),x(n,h,e),x(n,m,e),x(n,f,e),x(n,g,e),x(n,y,e),x(n,b,e),x(n,j,e),x(n,w,e),x(n,k,e),x(n,C,e),x(n,T,e),M.m(n,e),x(n,L,e),x(n,_,e),x(n,H,e),A.m(n,e),x(n,P,e),x(n,B,e),x(n,I,e),x(n,D,e),x(n,q,e),G.m(n,e),x(n,N,e),x(n,O,e),x(n,R,e),x(n,z,e),x(n,Y,e),x(n,U,e),x(n,W,e),x(n,F,e),x(n,K,e),J.m(n,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&v(r),n&&v(i),n&&v(p),n&&v(d),n&&u.d(),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(T),n&&M.d(),n&&v(L),n&&v(_),n&&v(H),n&&A.d(),n&&v(P),n&&v(B),n&&v(I),n&&v(D),n&&v(q),n&&G.d(),n&&v(N),n&&v(O),n&&v(R),n&&v(z),n&&v(Y),n&&v(U),n&&v(W),n&&v(F),n&&v(K),n&&J.d()}}}const de='<pre><code class="language-markdown"><span class="hljs-bullet">* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',ue='<pre><code class="language-markdown"><span class="hljs-section"># MyComponent #</span></code></pre>\n',he='<pre><code class="language-markdown"><span class="hljs-section"># ![Logo](static/logo.png) #</span></code></pre>\n',me='<pre><code class="language-markdown"><span class="hljs-bullet">* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',fe='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">\'@INCLUDES/banner.md\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Banner</span> /&gt;</span></code></pre>\n';function ge(e){let t,s,a,l,c,r,i,p;return{c(){t=$("span"),(s=$("span")).textContent="-",a=S(),l=$("span"),c=C(e.count),r=S(),(i=$("span")).textContent="+",L(s,"class","minus svelte-1kq48qn"),L(l,"class","value svelte-1kq48qn"),L(i,"class","plus svelte-1kq48qn"),L(t,"class","counter svelte-1kq48qn"),p=[M(s,"click",function(){e.click_handler.apply(this,arguments)}),M(i,"click",function(){e.click_handler_1.apply(this,arguments)})]},m(n,e){x(n,t,e),w(t,s),w(t,a),w(t,l),w(l,c),w(t,r),w(t,i)},p(n,t){e=t,n.count&&_(c,e.count)},i:n,o:n,d(n){n&&v(t),o(p)}}}function ye(n,e,t){let s=0;return{count:s,click_handler:n=>t("count",s--,s),click_handler_1:n=>t("count",s++,s)}}class be extends dn{constructor(n){super(),pn(this,n,ye,ge,c,{})}}function je(e){let t;return{c(){(t=$("blockquote")).innerHTML="<p><em>MDSv is really cool!</em></p>"},m(n,e){x(n,t,e)},p:n,i:n,o:n,d(n){n&&v(t)}}}class we extends dn{constructor(n){super(),pn(this,n,null,je,c,{})}}function xe(n,e,t){const s=Object.create(n);return s.item=e[t],s}function ve(n){let e,t,s=n.item+"";return{c(){e=$("li"),t=C(s)},m(n,s){x(n,e,s),w(e,t)},p(n,e){n.items&&s!==(s=e.item+"")&&_(t,s)},d(n){n&&v(e)}}}function $e(n){let e,t,s,a,l,c,r,i,p,d,u,h,m,f,g,y,b,j,k,C,T,L,_,H,A,P,B,I,D,q,G,N,O,R,z,Y,U,W,F,K,J,Z=n.items,Q=[];for(let e=0;e<Z.length;e+=1)Q[e]=ve(xe(n,Z,e));const V=new be({}),X=new we({});return{c(){(e=$("h1")).textContent="What is MDSv",t=S(),(s=$("p")).textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",a=S(),(l=$("p")).innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',c=S(),(r=$("p")).textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=S(),(p=$("p")).textContent="This document also wrote in MDSv format, so we can do this right inside the document...",d=S(),h=S(),(m=$("p")).textContent="... and get the result:",f=S(),g=$("ul");for(let n=0;n<Q.length;n+=1)Q[n].c();y=S(),(b=$("button")).textContent="Add Item",j=S(),(k=$("button")).textContent="Del Item",C=S(),(T=$("p")).textContent="Or we can import any Svelte component and use it where we want:",L=S(),H=S(),(A=$("p")).textContent="... and it will work:",P=S(),B=$("p"),(I=$("em")).textContent="The counter:",D=S(),on(V.$$.fragment),q=S(),(G=$("p")).innerHTML="You even can import other <code>*.md</code> files:",N=S(),R=S(),(z=$("p")).textContent="... and it will be included in the specified place:",Y=S(),U=$("p"),(W=$("strong")).textContent="Spoiler:",F=S(),on(X.$$.fragment),u=new E(ke,h),_=new E(Ce,H),O=new E(Se,R),J=[M(b,"click",n.add),M(k,"click",n.del)]},m(n,o){x(n,e,o),x(n,t,o),x(n,s,o),x(n,a,o),x(n,l,o),x(n,c,o),x(n,r,o),x(n,i,o),x(n,p,o),x(n,d,o),u.m(n,o),x(n,h,o),x(n,m,o),x(n,f,o),x(n,g,o);for(let n=0;n<Q.length;n+=1)Q[n].m(g,null);x(n,y,o),x(n,b,o),x(n,j,o),x(n,k,o),x(n,C,o),x(n,T,o),x(n,L,o),_.m(n,o),x(n,H,o),x(n,A,o),x(n,P,o),x(n,B,o),w(B,I),w(B,D),ln(V,B,null),x(n,q,o),x(n,G,o),x(n,N,o),O.m(n,o),x(n,R,o),x(n,z,o),x(n,Y,o),x(n,U,o),w(U,W),w(U,F),ln(X,U,null),K=!0},p(n,e){if(n.items){let t;for(Z=e.items,t=0;t<Z.length;t+=1){const s=xe(e,Z,t);Q[t]?Q[t].p(n,s):(Q[t]=ve(s),Q[t].c(),Q[t].m(g,null))}for(;t<Q.length;t+=1)Q[t].d(1);Q.length=Z.length}},i(n){K||(en(V.$$.fragment,n),en(X.$$.fragment,n),K=!0)},o(n){tn(V.$$.fragment,n),tn(X.$$.fragment,n),K=!1},d(n){n&&v(e),n&&v(t),n&&v(s),n&&v(a),n&&v(l),n&&v(c),n&&v(r),n&&v(i),n&&v(p),n&&v(d),n&&u.d(),n&&v(h),n&&v(m),n&&v(f),n&&v(g),function(n,e){for(let t=0;t<n.length;t+=1)n[t]&&n[t].d(e)}(Q,n),n&&v(y),n&&v(b),n&&v(j),n&&v(k),n&&v(C),n&&v(T),n&&v(L),n&&_.d(),n&&v(H),n&&v(A),n&&v(P),n&&v(B),cn(V),n&&v(q),n&&v(G),n&&v(N),n&&O.d(),n&&v(R),n&&v(z),n&&v(Y),n&&v(U),cn(X),o(J)}}}const ke='<pre><code class="language-svelte"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">\'item0\'</span>,<span class="hljs-string">\'item1\'</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>&#123; items = [...items,<span class="hljs-string">\'item\'</span>+items.length] &#125;\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>&#123; items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">#each</span><span class="javascript"> item <span class="hljs-keyword">as</span> item&#125;</span><span class="xml">\n* </span><span class="javascript">&#123;item&#125;</span><span class="xml">\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">/each</span><span class="javascript">&#125;</span><span class="xml">\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;add&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;del&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></code></pre>\n',Ce='<pre><code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from \'./Counter.svelte\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span> </code></pre>\n',Se='<pre><code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from \'./spoiler.md\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code></pre>\n';function Te(n,e,t){let s=["item0","item1"];return{items:s,add:function(){t("items",s=[...s,"item"+s.length])},del:function(){t("items",s=s.slice(0,-1))}}}function Me(e){let t,s,a,o,l,c,r;return{c(){(t=$("h1")).textContent="Routing",s=S(),(a=$("p")).innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/pages</code> directory:",o=S(),c=S(),(r=$("p")).innerHTML="You can make links anywhere in your docs with URL part based on file hierarchy. For example, if you want create link to the <code>src/pages/components/button.md</code> use <code>components/button</code> as a href attribute of the <code>a</code> element - <code>components/button</code>. Or in markdown write - <code>[Button](component/button)</code>.",l=new E(Le,c)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),l.m(n,e),x(n,c,e),x(n,r,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&l.d(),n&&v(c),n&&v(r)}}}const Le='<pre><code class="language-bash">src                     <span class="hljs-comment">#  URL path part:</span>\n└── pages               <span class="hljs-comment">#</span>\n    ├── components      <span class="hljs-comment">#</span>\n    │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    ├── install.md      <span class="hljs-comment">#  install</span>\n    └── index.md         <span class="hljs-comment">#  / </span>\n</code></pre>\n';function _e(e){let t,s,a,o,l,c,r,i,p,d,u;return{c(){(t=$("h1")).textContent="Pages configuration",s=S(),(a=$("p")).textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=S(),(l=$("h3")).textContent="fullscreen",c=S(),(r=$("p")).innerHTML="By default all pages has a layout with left sidebar. But if you set the <code>fullscreen</code> option this way:",i=S(),d=S(),(u=$("p")).textContent="... page will render without sidebar.",p=new E(He,d)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),x(n,r,e),x(n,i,e),p.m(n,e),x(n,d,e),x(n,u,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&v(r),n&&v(i),n&&p.d(),n&&v(d),n&&v(u)}}}const He='<pre><code class="language-markdown">---\n<span class="hljs-section">fullscreen: true\n---</span>\n... </code></pre>\n';function Ee(e){let t,s,a,o,l,c,r,i,p,d,u;return{c(){(t=$("h1")).textContent="Static files",s=S(),(a=$("p")).innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/pages/static</code> directory.",o=S(),(l=$("p")).innerHTML="For example, if you placed image in the <code>src/pages/static/great-success.png</code> then you can include it by following code:",c=S(),i=S(),(p=$("p")).textContent="... and get image on your page:",d=S(),(u=$("p")).innerHTML='<img src="static/great-success.png" alt="Great Success">;',r=new E(Ae,i)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),x(n,l,e),x(n,c,e),r.m(n,e),x(n,i,e),x(n,p,e),x(n,d,e),x(n,u,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(c),n&&r.d(),n&&v(i),n&&v(p),n&&v(d),n&&v(u)}}}const Ae='<pre><code class="language-markdown">![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code></pre>\n';function Pe(e){let t,s,a,o,l,c,r,i,p;return{c(){(t=$("h1")).textContent="Structure",s=S(),(a=$("p")).textContent="Let's see the structure of the doc's project directory:",o=S(),c=S(),(r=$("p")).innerHTML="It is very simple, sources of you documentation are live in <code>src</code> directory:",i=S(),(p=$("ul")).innerHTML="<li><strong>includes</strong> - there are small pieces of the MDSv code that can be reusable within any document page</li> \n<li><strong>pages</strong> - all pages of your documentation are stored in this directory</li> \n<li><strong>static</strong> - place here any static assets using in your documentation (files, images, icons and etc.)</li> \n<li><strong>theme</strong> - it is CSS and svelte files of the current theme which might be changed for appearance tunning</li>",l=new E(Be,c)},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e),x(n,o,e),l.m(n,e),x(n,c,e),x(n,r,e),x(n,i,e),x(n,p,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&l.d(),n&&v(c),n&&v(r),n&&v(i),n&&v(p)}}}const Be='<pre><code class="language-bash">src\n├── includes\n├── pages\n├── static\n└── theme   \n...\nsvelte-docs.config.js</code></pre>\n';function Ie(e){let t,s,a;return{c(){(t=$("h1")).textContent="Page not found!",s=S(),(a=$("p")).innerHTML='<a href="/">Go to start page</a>',L(t,"class","svelte-aiue6m"),L(a,"class","svelte-aiue6m")},m(n,e){x(n,t,e),x(n,s,e),x(n,a,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a)}}}class De extends dn{constructor(n){super(),pn(this,n,null,Ie,c,{})}}function qe(e){let t;const s=new De({});return{c(){on(s.$$.fragment)},m(n,e){ln(s,n,e),t=!0},p:n,i(n){t||(en(s.$$.fragment,n),t=!0)},o(n){tn(s.$$.fragment,n),t=!1},d(n){cn(s,n)}}}class Ge extends dn{constructor(n){super(),pn(this,n,null,qe,c,{})}}const Ne=[];function Oe(e,t=n){let s;const a=[];function o(n){if(c(e,n)&&(e=n,s)){const n=!Ne.length;for(let n=0;n<a.length;n+=1){const t=a[n];t[1](),Ne.push(t,e)}if(n){for(let n=0;n<Ne.length;n+=2)Ne[n][0](Ne[n+1]);Ne.length=0}}}return{set:o,update:function(n){o(n(e))},subscribe:function(l,c=n){const r=[l,c];return a.push(r),1===a.length&&(s=t(o)||n),l(e),()=>{const n=a.indexOf(r);-1!==n&&a.splice(n,1),0===a.length&&(s(),s=null)}}}}const Re=Oe(function(){let n=location.pathname;return n=function(n){const e=Ue();return n.startsWith(e)&&(n=n.slice(e.length)),n.startsWith("/")&&(n=n.slice(1)),n.endsWith("/")&&(n=n.slice(0,-1)),n}(n)}());function ze(n){history.pushState({},"",""===n?Ue():n),Re.set(n)}function Ye(n){const e=n.target.closest("a");if(!e)return;const t=e.getAttribute("href");if(t){if(!/^\w+:\/\//.test(t))return n.preventDefault(),/^\/$/.test(t)?ze(""):ze(t);e.setAttribute("target","_blank")}}function Ue(){let n=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===n?"/":n}const We=[{url:"",component:mn,meta:hn},{url:"builtins/example",component:class extends dn{constructor(n){super(),pn(this,n,null,_n,c,{})}},meta:{}},{url:"builtins/properties",component:class extends dn{constructor(n){super(),pn(this,n,null,Pn,c,{})}},meta:{}},{url:"config/basepath",component:class extends dn{constructor(n){super(),pn(this,n,null,Gn,c,{})}},meta:{}},{url:"config/file",component:class extends dn{constructor(n){super(),pn(this,n,null,Nn,c,{})}},meta:{}},{url:"config/inccss",component:class extends dn{constructor(n){super(),pn(this,n,null,On,c,{})}},meta:{}},{url:"config/incpkg",component:class extends dn{constructor(n){super(),pn(this,n,null,Un,c,{})}},meta:{}},{url:"config/pathes",component:class extends dn{constructor(n){super(),pn(this,n,null,Zn,c,{})}},meta:{}},{url:"config/preprocess",component:class extends dn{constructor(n){super(),pn(this,n,null,Qn,c,{})}},meta:{}},{url:"getting-started",component:class extends dn{constructor(n){super(),pn(this,n,null,ne,c,{})}},meta:{}},{url:"index",component:mn,meta:hn},{url:"introduction",component:class extends dn{constructor(n){super(),pn(this,n,null,oe,c,{})}},meta:{}},{url:"publishing/ghpages",component:class extends dn{constructor(n){super(),pn(this,n,null,ce,c,{})}},meta:{}},{url:"theming",component:class extends dn{constructor(n){super(),pn(this,n,null,ie,c,{})}},meta:{}},{url:"writing/includes",component:class extends dn{constructor(n){super(),pn(this,n,null,pe,c,{})}},meta:{}},{url:"writing/mdsv",component:class extends dn{constructor(n){super(),pn(this,n,Te,$e,c,{})}},meta:{}},{url:"writing/routing",component:class extends dn{constructor(n){super(),pn(this,n,null,Me,c,{})}},meta:{}},{url:"writing/settings",component:class extends dn{constructor(n){super(),pn(this,n,null,_e,c,{})}},meta:{}},{url:"writing/static",component:class extends dn{constructor(n){super(),pn(this,n,null,Ee,c,{})}},meta:{}},{url:"writing/structure",component:class extends dn{constructor(n){super(),pn(this,n,null,Pe,c,{})}},meta:{}}],Fe=function(e,t,s){const a=!Array.isArray(e),c=a?[e]:e,r=t.length<2;return{subscribe:Oe(s,e=>{let s=!1;const i=[];let p=0,d=n;const u=()=>{if(p)return;d();const s=t(a?i[0]:i,e);r?e(s):d=l(s)?s:n},h=c.map((n,e)=>n.subscribe(n=>{i[e]=n,p&=~(1<<e),s&&u()},()=>{p|=1<<e}));return s=!0,u(),function(){o(h),d()}}).subscribe}}(Re,n=>{const e=We.filter(e=>e.url===n);return e.length>0?e[0]:{url:"404",component:Ge,meta:{fullscreen:!0}}});function Ke(n){let e;return{c(){(e=$("h1")).innerHTML='<a href="/"><img src="static/logo.svg" alt="LOGO" class="svelte-1m9fc3n"></a>'},m(n,t){x(n,e,t)},d(n){n&&v(e)}}}function Je(e){let t,s=""!==e.$current_page.url&&Ke();return{c(){s&&s.c(),t=T()},m(n,e){s&&s.m(n,e),x(n,t,e)},p(n,e){""!==e.$current_page.url?s||((s=Ke()).c(),s.m(t.parentNode,t)):s&&(s.d(1),s=null)},i:n,o:n,d(n){s&&s.d(n),n&&v(t)}}}function Ze(n,e,t){let s;return r(n,Fe,n=>t("$current_page",s=n)),{$current_page:s}}class Qe extends dn{constructor(n){super(),pn(this,n,Ze,Je,c,{})}}function Ve(n){return n<.5?4*n*n*n:.5*Math.pow(2*n-2,3)+1}function Xe(n){return"[object Date]"===Object.prototype.toString.call(n)}function nt(n,e){if(n===e||n!=n)return()=>n;const t=typeof n;if(t!==typeof e||Array.isArray(n)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(n)){const t=e.map((e,t)=>nt(n[t],e));return n=>t.map(e=>e(n))}if("object"===t){if(!n||!e)throw new Error("Object cannot be null");if(Xe(n)&&Xe(e)){n=n.getTime();const t=(e=e.getTime())-n;return e=>new Date(n+e*t)}const t=Object.keys(e),s={};return t.forEach(t=>{s[t]=nt(n[t],e[t])}),n=>{const e={};return t.forEach(t=>{e[t]=s[t](n)}),e}}if("number"===t){const t=e-n;return e=>n+e*t}throw new Error(`Cannot interpolate ${t} values`)}function et(n){let e,t,s;return{c(){(e=$("span")).textContent="Github",L(e,"class","label svelte-bpn430")},m(n,t){x(n,e,t),s=!0},i(n){s||(F(()=>{t||(t=an(e,st,{},!0)),t.run(1)}),s=!0)},o(n){t||(t=an(e,st,{},!1)),t.run(0),s=!1},d(n){n&&v(e),n&&t&&t.end()}}}function tt(n){let e,t,s,a,l,c,r=n.hover&&et();return{c(){e=$("a"),t=k("svg"),s=k("path"),a=S(),r&&r.c(),L(s,"d","M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"),L(t,"viewBox","0 0 24 24"),H(t,"transform","rotate(-"+n.$rotation+"deg)"),L(t,"class","svelte-bpn430"),L(e,"class","github svelte-bpn430"),L(e,"href",n.url),L(e,"target","_blank"),c=[M(e,"mouseenter",n.mEnter),M(e,"mouseleave",n.mLeave)]},m(n,o){x(n,e,o),w(e,t),w(t,s),w(e,a),r&&r.m(e,null),l=!0},p(n,s){l&&!n.$rotation||H(t,"transform","rotate(-"+s.$rotation+"deg)"),s.hover?r?en(r,1):((r=et()).c(),en(r,1),r.m(e,null)):r&&(X(),tn(r,1,1,()=>{r=null}),nn()),l&&!n.url||L(e,"href",s.url)},i(n){l||(en(r),l=!0)},o(n){tn(r),l=!1},d(n){n&&v(e),r&&r.d(),o(c)}}}function st(n){return{delay:0,duration:500,css:n=>`overflow:hide; width: ${50*Ve(n)}px; opacity: ${n}`}}function at(n,s,a){let o,{url:l}=s,{animation:c=!1}=s,i=!1;const p=function(n,s={}){const a=Oe(n);let o,l=n;function c(c,r){if(null==n)return a.set(n=c),Promise.resolve();l=c;let i=o,p=!1,{delay:d=0,duration:u=400,easing:m=e,interpolate:f=nt}=t(t({},s),r);const g=h()+d;let y;return(o=j(e=>{if(e<g)return!0;p||(y=f(n,c),"function"==typeof u&&(u=u(n,c)),p=!0),i&&(i.abort(),i=null);const t=e-g;return t>u?(a.set(n=c),!1):(a.set(n=y(m(t/u))),!0)})).promise}return{set:c,update:(e,t)=>c(e(l,n),t),subscribe:a.subscribe}}(0,{duration:500,easing:Ve});return r(n,p,n=>a("$rotation",o=n)),n.$set=(n=>{"url"in n&&a("url",l=n.url),"animation"in n&&a("animation",c=n.animation)}),n.$$.update=((n={hover:1})=>{n.hover&&function(n,e,t=e){n.set(t)}(p,o=i?100:0)}),{url:l,animation:c,hover:i,mEnter:function(){c&&a("hover",i=!0)},mLeave:function(){a("hover",i=!1)},rotation:p,$rotation:o}}class ot extends dn{constructor(n){super(),pn(this,n,at,tt,c,{url:0,animation:0})}}function lt(e){let t,s,a,o,l;const c=new ot({props:{animation:!0,url:"https://github.com/alexxnb/svelte-docs"}});return{c(){t=$("ul"),(s=$("li")).innerHTML='<a href="getting-started">Docs</a>',a=S(),o=$("li"),on(c.$$.fragment)},m(n,e){x(n,t,e),w(t,s),w(t,a),w(t,o),ln(c,o,null),l=!0},p:n,i(n){l||(en(c.$$.fragment,n),l=!0)},o(n){tn(c.$$.fragment,n),l=!1},d(n){n&&v(t),cn(c)}}}class ct extends dn{constructor(n){super(),pn(this,n,null,lt,c,{})}}function rt(e){let t,s,a,o;const l=new Qe({}),c=new ct({});return{c(){t=$("section"),on(l.$$.fragment),s=S(),a=$("section"),on(c.$$.fragment)},m(n,e){x(n,t,e),ln(l,t,null),x(n,s,e),x(n,a,e),ln(c,a,null),o=!0},p:n,i(n){o||(en(l.$$.fragment,n),en(c.$$.fragment,n),o=!0)},o(n){tn(l.$$.fragment,n),tn(c.$$.fragment,n),o=!1},d(n){n&&v(t),cn(l),n&&v(s),n&&v(a),cn(c)}}}class it extends dn{constructor(n){super(),pn(this,n,null,rt,c,{})}}function pt(e){let t;return{c(){(t=$("ul")).innerHTML='<li><a href="introduction">Introduction</a></li> \n<li><a href="getting-started">Getting Started</a></li> \n<li>Writing docs<ul><li><a href="writing/mdsv">What is MDSv</a></li> \n<li><a href="writing/structure">Structure</a></li> \n<li><a href="writing/includes">Includes</a></li> \n<li><a href="writing/routing">Routing</a></li> \n<li><a href="writing/static">Static files</a></li> \n<li><a href="writing/settings">Page settings</a></li></ul></li> \n<li><a href="config/file">Configuration</a><ul><li><a href="config/basepath">basepath</a></li> \n<li><a href="config/pathes">pathes</a></li> \n<li><a href="config/incpkg">incPKG</a></li> \n<li><a href="config/inccss">incCSS</a></li> \n<li><a href="config/preprocess">preprocess</a></li></ul></li> \n<li>Builtins<ul><li><a href="builtins/example">Example</a></li> \n<li><a href="builtins/properties">Properties</a></li></ul></li> \n<li><a href="theming">Theming</a></li> \n<li>Publishing<ul><li><a href="publishing/ghpages">GitHub Pages</a></li></ul></li>'},m(n,e){x(n,t,e)},p:n,i:n,o:n,d(n){n&&v(t)}}}class dt extends dn{constructor(n){super(),pn(this,n,null,pt,c,{})}}function ut(e){let t;const s=new dt({});return{c(){on(s.$$.fragment)},m(n,e){ln(s,n,e),t=!0},p:n,i(n){t||(en(s.$$.fragment,n),t=!0)},o(n){tn(s.$$.fragment,n),t=!1},d(n){cn(s,n)}}}class ht extends dn{constructor(n){super(),pn(this,n,null,ut,c,{})}}function mt(n){let e,t;var s=n.$current_page.component;if(s)var a=new s({});return{c(){e=$("article"),a&&on(a.$$.fragment)},m(n,s){x(n,e,s),a&&ln(a,e,null),t=!0},p(n,t){if(s!==(s=t.$current_page.component)){if(a){X();const n=a;tn(n.$$.fragment,1,0,()=>{cn(n,1)}),nn()}s?(on((a=new s({})).$$.fragment),en(a.$$.fragment,1),ln(a,e,null)):a=null}},i(n){t||(a&&en(a.$$.fragment,n),t=!0)},o(n){a&&tn(a.$$.fragment,n),t=!1},d(n){n&&v(e),a&&cn(a)}}}function ft(n,e,t){let s;return r(n,Fe,n=>t("$current_page",s=n)),Fe.subscribe(()=>{window.scrollTo(0,0)}),{$current_page:s}}class gt extends dn{constructor(n){super(),pn(this,n,ft,mt,c,{})}}function yt(n){let e,t,s,a,o,c,r;const i=new ht({}),p=new gt({});return{c(){e=$("span"),t=S(),s=$("nav"),on(i.$$.fragment),o=S(),c=$("main"),on(p.$$.fragment),L(e,"class","showSidebar"),L(e,"tabindex","0")},m(n,l){x(n,e,l),x(n,t,l),x(n,s,l),ln(i,s,null),a=function(n){return{destroy:Fe.subscribe(e=>{n.querySelectorAll("a").forEach(n=>{n.getAttribute("href")===e.url?n.classList.add("active"):n.classList.remove("active")})})}}.call(null,s)||{},x(n,o,l),x(n,c,l),ln(p,c,null),r=!0},i(n){r||(en(i.$$.fragment,n),en(p.$$.fragment,n),r=!0)},o(n){tn(i.$$.fragment,n),tn(p.$$.fragment,n),r=!1},d(n){n&&v(e),n&&v(t),n&&v(s),cn(i),a&&l(a.destroy)&&a.destroy(),n&&v(o),n&&v(c),cn(p)}}}function bt(n){let e,t;const s=new gt({});return{c(){e=$("main"),on(s.$$.fragment),L(e,"class","fullscreen")},m(n,a){x(n,e,a),ln(s,e,null),t=!0},i(n){t||(en(s.$$.fragment,n),t=!0)},o(n){tn(s.$$.fragment,n),t=!1},d(n){n&&v(e),cn(s)}}}function jt(n){let e,t,s,a,o,l;const c=new it({}),r=[bt,yt],i=[];function p(n,e){return e.$current_page.meta.fullscreen?0:1}return s=p(0,n),a=i[s]=r[s](n),{c(){e=$("header"),on(c.$$.fragment),t=S(),a.c(),o=T()},m(n,a){x(n,e,a),ln(c,e,null),x(n,t,a),i[s].m(n,a),x(n,o,a),l=!0},p(n,e){let t=s;(s=p(0,e))!==t&&(X(),tn(i[t],1,1,()=>{i[t]=null}),nn(),(a=i[s])||(a=i[s]=r[s](e)).c(),en(a,1),a.m(o.parentNode,o))},i(n){l||(en(c.$$.fragment,n),en(a),l=!0)},o(n){tn(c.$$.fragment,n),tn(a),l=!1},d(n){n&&v(e),cn(c),n&&v(t),i[s].d(n),n&&v(o)}}}function wt(n,e,t){let s;return r(n,Fe,n=>t("$current_page",s=n)),{$current_page:s}}class xt extends dn{constructor(n){super(),pn(this,n,wt,jt,c,{})}}function vt(e){let t;const s=new xt({});return{c(){on(s.$$.fragment)},m(n,e){ln(s,n,e),t=!0},p:n,i(n){t||(en(s.$$.fragment,n),t=!0)},o(n){tn(s.$$.fragment,n),t=!1},d(n){cn(s,n)}}}function $t(n){return G(()=>(addEventListener("click",Ye),function(){removeEventListener("click",Ye)})),{}}return new class extends dn{constructor(n){super(),pn(this,n,$t,vt,c,{})}}({target:document.body,props:{}})}();
