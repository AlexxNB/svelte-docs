var app=function(){"use strict";function t(){}const e=t=>t;function n(t,e){for(const n in e)t[n]=e[n];return t}function s(t){return t()}function a(){return Object.create(null)}function o(t){t.forEach(s)}function l(t){return"function"==typeof t}function c(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function r(t,e,n){t.$$.on_destroy.push(function(t,e){const n=t.subscribe(e);return n.unsubscribe?()=>n.unsubscribe():n}(e,n))}function i(t,e,n,s){if(t){const a=p(t,e,n,s);return t[0](a)}}function p(t,e,s,a){return t[1]&&a?n(s.ctx.slice(),t[1](a(e))):s.ctx}function d(t,e,n,s){if(t[2]&&s){const a=t[2](s(n));if(e.dirty){const t=[],n=Math.max(e.dirty.length,a.length);for(let s=0;s<n;s+=1)t[s]=e.dirty[s]|a[s];return t}return a}return e.dirty}const u="undefined"!=typeof window;let h=u?()=>window.performance.now():()=>Date.now(),m=u?t=>requestAnimationFrame(t):t;const f=new Set;function g(t){f.forEach(e=>{e.c(t)||(f.delete(e),e.f())}),0!==f.size&&m(g)}function y(t){let e;return 0===f.size&&m(g),{promise:new Promise(n=>{f.add(e={c:t,f:n})}),abort(){f.delete(e)}}}function b(t,e){t.appendChild(e)}function w(t,e,n){t.insertBefore(e,n||null)}function j(t){t.parentNode.removeChild(t)}function x(t){return document.createElement(t)}function v(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function $(t){return document.createTextNode(t)}function k(){return $(" ")}function C(){return $("")}function T(t,e,n,s){return t.addEventListener(e,n,s),()=>t.removeEventListener(e,n,s)}function L(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function M(t,e){e=""+e,t.data!==e&&(t.data=e)}function S(t,e,n,s){t.style.setProperty(e,n,s?"important":"")}class H{constructor(t,e=null){this.e=x("div"),this.a=e,this.u(t)}m(t,e=null){for(let n=0;n<this.n.length;n+=1)w(t,this.n[n],e);this.t=t}u(t){this.e.innerHTML=t,this.n=Array.from(this.e.childNodes)}p(t){this.d(),this.u(t),this.m(this.t,this.a)}d(){this.n.forEach(j)}}let E,_,A=0,B={};function I(t,e,n,s,a,o,l,c=0){const r=16.666/s;let i="{\n";for(let t=0;t<=1;t+=r){const s=e+(n-e)*o(t);i+=100*t+`%{${l(s,1-s)}}\n`}const p=i+`100% {${l(n,1-n)}}\n}`,d=`__svelte_${function(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}(p)}_${c}`;if(!B[d]){if(!E){const t=x("style");document.head.appendChild(t),E=t.sheet}B[d]=!0,E.insertRule(`@keyframes ${d} ${p}`,E.cssRules.length)}const u=t.style.animation||"";return t.style.animation=`${u?`${u}, `:""}${d} ${s}ms linear ${a}ms 1 both`,A+=1,d}function P(t,e){t.style.animation=(t.style.animation||"").split(", ").filter(e?t=>t.indexOf(e)<0:t=>-1===t.indexOf("__svelte")).join(", "),e&&!--A&&m(()=>{if(A)return;let t=E.cssRules.length;for(;t--;)E.deleteRule(t);B={}})}function q(t){_=t}function D(t){(function(){if(!_)throw new Error("Function called outside component initialization");return _})().$$.on_mount.push(t)}const G=[],N=[],O=[],Y=[],z=Promise.resolve();let R,U=!1;function W(t){O.push(t)}function F(){const t=new Set;do{for(;G.length;){const t=G.shift();q(t),J(t.$$)}for(;N.length;)N.pop()();for(let e=0;e<O.length;e+=1){const n=O[e];t.has(n)||(n(),t.add(n))}O.length=0}while(G.length);for(;Y.length;)Y.pop()();U=!1}function J(t){null!==t.fragment&&(t.update(),o(t.before_update),t.fragment&&t.fragment.p(t.ctx,t.dirty),t.dirty=[-1],t.after_update.forEach(W))}function K(t,e,n){t.dispatchEvent(function(t,e){const n=document.createEvent("CustomEvent");return n.initCustomEvent(t,!1,!1,e),n}(`${e?"intro":"outro"}${n}`))}const Z=new Set;let V;function Q(){V={r:0,c:[],p:V}}function X(){V.r||o(V.c),V=V.p}function tt(t,e){t&&t.i&&(Z.delete(t),t.i(e))}function et(t,e,n,s){if(t&&t.o){if(Z.has(t))return;Z.add(t),V.c.push(()=>{Z.delete(t),s&&(n&&t.d(1),s())}),t.o(e)}}const nt={duration:0};function st(n,s,a,c){let r=s(n,a),i=c?0:1,p=null,d=null,u=null;function m(){u&&P(n,u)}function f(t,e){const n=t.b-i;return e*=Math.abs(n),{a:i,b:t.b,d:n,duration:e,start:t.start,end:t.start+e,group:t.group}}function g(s){const{delay:a=0,duration:l=300,easing:c=e,tick:g=t,css:b}=r||nt,w={start:h()+a,b:s};s||(w.group=V,V.r+=1),p?d=w:(b&&(m(),u=I(n,i,s,l,a,c,b)),s&&g(0,1),p=f(w,l),W(()=>K(n,s,"start")),y(t=>{if(d&&t>d.start&&(p=f(d,l),d=null,K(n,p.b,"start"),b&&(m(),u=I(n,i,p.b,p.duration,0,c,r.css))),p)if(t>=p.end)g(i=p.b,1-i),K(n,p.b,"end"),d||(p.b?m():--p.group.r||o(p.group.c)),p=null;else if(t>=p.start){const e=t-p.start;i=p.a+p.d*c(e/p.duration),g(i,1-i)}return!(!p&&!d)}))}return{run(t){l(r)?(R||(R=Promise.resolve(),R.then(()=>{R=null})),R).then(()=>{r=r(),g(t)}):g(t)},end(){m(),p=d=null}}}function at(t){t&&t.c()}function ot(t,e,n){const{fragment:a,on_mount:c,on_destroy:r,after_update:i}=t.$$;a&&a.m(e,n),W(()=>{const e=c.map(s).filter(l);r?r.push(...e):o(e),t.$$.on_mount=[]}),i.forEach(W)}function lt(t,e){const n=t.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function ct(t,e){-1===t.$$.dirty[0]&&(G.push(t),U||(U=!0,z.then(F)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function rt(e,n,s,l,c,r,i=[-1]){const p=_;q(e);const d=n.props||{},u=e.$$={fragment:null,ctx:null,props:r,update:t,not_equal:c,bound:a(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(p?p.$$.context:[]),callbacks:a(),dirty:i};let h=!1;u.ctx=s?s(e,d,(t,n,s=n)=>(u.ctx&&c(u.ctx[t],u.ctx[t]=s)&&(u.bound[t]&&u.bound[t](s),h&&ct(e,t)),n)):[],u.update(),h=!0,o(u.before_update),u.fragment=!!l&&l(u.ctx),n.target&&(n.hydrate?u.fragment&&u.fragment.l(function(t){return Array.from(t.childNodes)}(n.target)):u.fragment&&u.fragment.c(),n.intro&&tt(e.$$.fragment),ot(e,n.target,n.anchor),F()),q(p)}class it{$destroy(){lt(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(){}}function pt(e){let n;return{c(){n=x("div"),n.innerHTML='<div class="banner svelte-19i87y2"><p class="svelte-19i87y2"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-19i87y2"></p> \n<p class="svelte-19i87y2">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-19i87y2"><a href="introduction" class="svelte-19i87y2">Introduction</a> \n<a href="getting-started" class="svelte-19i87y2">Getting Started</a></div>',L(n,"class","hero svelte-19i87y2")},m(t,e){w(t,n,e)},p:t,i:t,o:t,d(t){t&&j(n)}}}const dt={fullscreen:!0};class ut extends it{constructor(t){super(),rt(this,t,null,pt,c,{})}}const ht=t=>({}),mt=t=>({}),ft=t=>({}),gt=t=>({});function yt(t){let e,n,s,a,o;const l=t[1].result,c=i(l,t,t[0],gt),r=t[1].code,u=i(r,t,t[0],mt);return{c(){e=x("div"),n=x("div"),c&&c.c(),s=k(),a=x("div"),u&&u.c(),L(n,"class","result"),L(a,"class","code"),L(e,"class","example")},m(t,l){w(t,e,l),b(e,n),c&&c.m(n,null),b(e,s),b(e,a),u&&u.m(a,null),o=!0},p(t,e){c&&c.p&&1&e[0]&&c.p(p(l,t,t[0],gt),d(l,t[0],e,ft)),u&&u.p&&1&e[0]&&u.p(p(r,t,t[0],mt),d(r,t[0],e,ht))},i(t){o||(tt(c,t),tt(u,t),o=!0)},o(t){et(c,t),et(u,t),o=!1},d(t){t&&j(e),c&&c.d(t),u&&u.d(t)}}}function bt(t,e,n){let{$$slots:s={},$$scope:a}=e;return t.$set=t=>{"$$scope"in t&&n(0,a=t.$$scope)},[a,s]}class wt extends it{constructor(t){super(),rt(this,t,bt,yt,c,{})}}var jt="/svelte-docs/";function xt(t){let e,n;return{c(){e=x("iframe"),L(e,"slot","result"),S(e,"height",t[2]+"px"),L(e,"title","Result"),L(e,"scrolling","no"),L(e,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),L(e,"srcdoc",t[3]),L(e,"class","svelte-y9biys"),n=T(e,"load",t[4])},m(n,s){w(n,e,s),t[7](e)},p(t,n){4&n[0]&&S(e,"height",t[2]+"px")},d(s){s&&j(e),t[7](null),n()}}}function vt(t){let e,n,s=t[0].trim()+"";return{c(){e=x("pre"),n=x("code"),L(e,"slot","code"),L(e,"class","hljs svelte-y9biys")},m(t,a){w(t,e,a),b(e,n),n.innerHTML=s},p(t,e){1&e[0]&&s!==(s=t[0].trim()+"")&&(n.innerHTML=s)},d(t){t&&j(e)}}}function $t(e){let n;return{c(){n=k()},m(t,e){w(t,n,e)},p:t,d(t){t&&j(n)}}}function kt(t){let e;const n=new wt({props:{$$slots:{default:[$t],code:[vt],result:[xt]},$$scope:{ctx:t}}});return{c(){at(n.$$.fragment)},m(t,s){ot(n,t,s),e=!0},p(t,e){const s={};263&e[0]&&(s.$$scope={dirty:e,ctx:t}),n.$set(s)},i(t){e||(tt(n.$$.fragment,t),e=!0)},o(t){et(n.$$.fragment,t),e=!1},d(t){lt(n,t)}}}let Ct=1;function Tt(t,e,n){let s,{name:a}=e,{code:o}=e,l=Ct++,c=70;const r=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${jt}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",(function(t){t.data.iframe_id&&t.data.iframe_id===l&&t.data.hasOwnProperty("HEIGHT")&&n(2,c=t.data.HEIGHT)})),t.$set=t=>{"name"in t&&n(5,a=t.name),"code"in t&&n(0,o=t.code)},[o,s,c,r,function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},a,l,function(t){N[t?"unshift":"push"](()=>{n(1,s=t)})}]}class Lt extends it{constructor(t){super(),rt(this,t,Tt,kt,c,{name:5,code:0})}}function Mt(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$,C,T,L,M,S,E,_,A,B,I,P,q,D,G,N,O;const Y=new Lt({props:{name:"Ex_0_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="css">\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span>'}}),z=new Lt({props:{name:"Ex_1_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span></span><span class="javascript">&#123;name&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n</span>'}}),R=new Lt({props:{name:"Ex_2_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>'}}),U=new Lt({props:{name:"Ex_3_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span>'}}),W=new Lt({props:{name:"Ex_4_39fd83e225ff0ad6956224cded64370c",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span></span>'}});return{c(){n=x("h1"),n.textContent="Example code block",s=k(),a=x("p"),a.innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=k(),c=k(),at(Y.$$.fragment),r=k(),i=x("h3"),i.textContent="Hide script and/or style blocks",p=k(),d=x("p"),d.innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",u=k(),m=k(),at(z.$$.fragment),f=k(),g=x("h3"),g.textContent="Import in examples",y=k(),b=x("p"),b.innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",v=k(),at(R.$$.fragment),$=k(),C=x("p"),C.textContent="Also you can import any local file by relative path according documents directory root:",T=k(),at(U.$$.fragment),L=k(),M=x("p"),M.innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',S=k(),_=k(),at(W.$$.fragment),A=k(),B=x("h3"),B.textContent="Styling",I=k(),P=x("p"),P.innerHTML="Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",q=k(),D=x("p"),D.innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',G=k(),N=x("p"),N.innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component.",l=new H(St,c),h=new H(Ht,m),E=new H(Et,_)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),l.m(t,e),w(t,c,e),ot(Y,t,e),w(t,r,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e),h.m(t,e),w(t,m,e),ot(z,t,e),w(t,f,e),w(t,g,e),w(t,y,e),w(t,b,e),w(t,v,e),ot(R,t,e),w(t,$,e),w(t,C,e),w(t,T,e),ot(U,t,e),w(t,L,e),w(t,M,e),w(t,S,e),E.m(t,e),w(t,_,e),ot(W,t,e),w(t,A,e),w(t,B,e),w(t,I,e),w(t,P,e),w(t,q,e),w(t,D,e),w(t,G,e),w(t,N,e),O=!0},p:t,i(t){O||(tt(Y.$$.fragment,t),tt(z.$$.fragment,t),tt(R.$$.fragment,t),tt(U.$$.fragment,t),tt(W.$$.fragment,t),O=!0)},o(t){et(Y.$$.fragment,t),et(z.$$.fragment,t),et(R.$$.fragment,t),et(U.$$.fragment,t),et(W.$$.fragment,t),O=!1},d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&l.d(),t&&j(c),lt(Y,t),t&&j(r),t&&j(i),t&&j(p),t&&j(d),t&&j(u),t&&h.d(),t&&j(m),lt(z,t),t&&j(f),t&&j(g),t&&j(y),t&&j(b),t&&j(v),lt(R,t),t&&j($),t&&j(C),t&&j(T),lt(U,t),t&&j(L),t&&j(M),t&&j(S),t&&E.d(),t&&j(_),lt(W,t),t&&j(A),t&&j(B),t&&j(I),t&&j(P),t&&j(q),t&&j(D),t&&j(G),t&&j(N)}}}const St='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button&#123;background: red&#125;</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Ht='<pre><code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=\'Button\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;&#123;name&#125;&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button&#123;background: red&#125;</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Et='<pre><code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:&#123;\n    <span class="hljs-string">\'./Button.svelte\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>,\n    <span class="hljs-string">\'my-button-package\'</span>: <span class="hljs-string">\'./../mylib/Button.svelte\'</span>\n&#125;,\n...</code></pre>\n';function _t(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$,C,T,M,S,E,_,A,B,I,P,q,D,G,N,O,Y,z,R,U,W;return{c(){n=x("h1"),n.textContent="Properties",s=k(),a=x("p"),a.textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=k(),l=x("p"),l.innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",c=k(),i=k(),p=x("p"),p.textContent="There are four properties:",d=k(),u=x("ol"),u.innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",h=k(),m=x("p"),m.textContent="So lets create fancy table of properties for this component:",f=k(),y=k(),b=x("dl"),b.innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',v=k(),$=x("p"),$.textContent="Now user of your component will know all about its properties.",C=k(),T=x("h3"),T.textContent="Describing property",M=k(),S=x("ul"),S.innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",E=k(),_=x("h3"),_.textContent="Autogenerated properties",A=k(),B=x("p"),B.innerHTML='Another way to describre properties, retrieve it right from the Svelte component with <a href="https://devdocs.io/jsdoc/tags-type">JSDoc @type</a> comments. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:',I=k(),q=k(),D=x("p"),D.textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",G=k(),N=x("p"),N.textContent="Then just place a path to the this component inside Properties code block:",O=k(),z=k(),R=x("p"),R.textContent="And get the result:",U=k(),W=x("dl"),W.innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',r=new H(At,i),g=new H(Bt,y),L(b,"class","properties"),P=new H(It,q),Y=new H(Pt,z),L(W,"class","properties")},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),r.m(t,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e),w(t,h,e),w(t,m,e),w(t,f,e),g.m(t,e),w(t,y,e),w(t,b,e),w(t,v,e),w(t,$,e),w(t,C,e),w(t,T,e),w(t,M,e),w(t,S,e),w(t,E,e),w(t,_,e),w(t,A,e),w(t,B,e),w(t,I,e),P.m(t,e),w(t,q,e),w(t,D,e),w(t,G,e),w(t,N,e),w(t,O,e),Y.m(t,e),w(t,z,e),w(t,R,e),w(t,U,e),w(t,W,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&r.d(),t&&j(i),t&&j(p),t&&j(d),t&&j(u),t&&j(h),t&&j(m),t&&j(f),t&&g.d(),t&&j(y),t&&j(b),t&&j(v),t&&j($),t&&j(C),t&&j(T),t&&j(M),t&&j(S),t&&j(E),t&&j(_),t&&j(A),t&&j(B),t&&j(I),t&&P.d(),t&&j(q),t&&j(D),t&&j(G),t&&j(N),t&&j(O),t&&Y.d(),t&&j(z),t&&j(R),t&&j(U),t&&j(W)}}}const At='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',Bt='<pre><code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | \'text\',\'number\',\'range\',\'date\'(\'text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code></pre>\n',It='<pre><code class="language-html">// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-comment">/** <span class="hljs-doctag">@type <span class="hljs-type">&#123;string&#125;</span> </span>Name of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/** @type &#123;(\'text\',\'number\',\'range\',\'date\')&#125; Type of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">\'text\'</span>;\n    <span class="hljs-comment">/** \n     * Should the input be disabled\n     * @type &#123;bool&#125; \n     */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/** @type &#123;(number|string)&#125; Size of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',Pt='<pre><code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function qt(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$,C,T;return{c(){n=x("h1"),n.textContent="aliases option",s=k(),a=x("p"),a.innerHTML="Option <code>aliases</code> is the list of aliases for you local component&#39;s paths.",o=k(),l=x("p"),l.textContent="Suppose you have following structure of your project:",c=k(),i=k(),p=x("p"),p.innerHTML="And you want to import <code>mycomponents/Counter.svelte</code> in your Example code block(or just in the page), you may use relative path(from the docs root) like this:",d=k(),h=k(),m=x("p"),m.textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",f=k(),g=x("p"),g.innerHTML="So you can add <em>virtual package</em> using <code>aliases</code> option:",y=k(),v=k(),$=x("p"),$.innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",C=k(),r=new H(Dt,i),u=new H(Gt,h),b=new H(Nt,v),T=new H(Ot,null)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),r.m(t,e),w(t,i,e),w(t,p,e),w(t,d,e),u.m(t,e),w(t,h,e),w(t,m,e),w(t,f,e),w(t,g,e),w(t,y,e),b.m(t,e),w(t,v,e),w(t,$,e),w(t,C,e),T.m(t,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&r.d(),t&&j(i),t&&j(p),t&&j(d),t&&u.d(),t&&j(h),t&&j(m),t&&j(f),t&&j(g),t&&j(y),t&&b.d(),t&&j(v),t&&j($),t&&j(C),t&&T.d()}}}const Dt='<pre><code class="language-javascript">my-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code></pre>\n',Gt='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'./../mycomponent/Counter.svelte\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n',Nt='<pre><code class="language-javascript">aliases:&#123;\n    ...\n    <span class="hljs-string">"my-counter-package"</span>: <span class="hljs-string">"./../mycomponent/Counter.svelte"</span>,\n    ...\n&#125;</code></pre>\n',Ot='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from \'my-counter-package\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function Yt(e){let n,s,a,o,l,c,r,i,p;return{c(){n=x("h1"),n.textContent="Basepath option",s=k(),a=x("p"),a.innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=k(),l=x("p"),l.innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',c=k(),r=x("p"),r.innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=k(),p=x("blockquote"),p.innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>"},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e),w(t,i,e),w(t,p,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&j(p)}}}function zt(e){let n,s,a;return{c(){n=x("h1"),n.textContent="Configuration",s=k(),a=x("p"),a.innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a)}}}function Rt(e){let n,s,a,o,l,c,r;return{c(){n=x("h1"),n.textContent="Pathes option",s=k(),a=x("p"),a.textContent="There are two pathes you can change.",o=k(),l=x("ul"),l.innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",c=k(),r=x("blockquote"),r.innerHTML="<p>In most cases you don&#39;t need to change these options.</p>"},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r)}}}function Ut(e){let n,s,a,o,l,c,r,i,p;return{c(){n=x("h1"),n.textContent="Preprocess option",s=k(),a=x("p"),a.innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=k(),c=k(),r=x("p"),r.textContent="Then all your examples will be preprocessed:",i=k(),l=new H(Wt,c),p=new H(Ft,null)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),l.m(t,e),w(t,c,e),w(t,r,e),w(t,i,e),p.m(t,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&l.d(),t&&j(c),t&&j(r),t&&j(i),t&&p.d()}}}const Wt='<pre><code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'svelte-preprocess-markdown\'</span>);\n\n<span class="hljs-built_in">module</span>.exports=&#123;\n    ...\n    preprocess: [\n        ...\n        markdown(&#123;<span class="hljs-attr">filetype</span>: <span class="hljs-string">\'svelte\'</span>&#125;),\n        ...\n    ]\n    ...\n&#125;</code></pre>\n',Ft='<pre><code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = \'World\';</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, &#123;name&#125;!</span>\n<span class="hljs-code">    ```</span></code></pre>\n';function Jt(e){let n,s,a,o,l,c,r,i,p,d,u;return{c(){n=x("h1"),n.textContent="Theme option",s=k(),a=x("p"),a.textContent="Choose theme for documentation site. List of avialable themes you can find on the sidebar.",o=k(),c=k(),r=x("p"),r.textContent="Also you can write path to the local dir here:",i=k(),d=k(),u=x("blockquote"),u.innerHTML='<p>In this case, it should be directory with <a href="theming/custom-theme">valid theme content</a>. </p>',l=new H(Kt,c),p=new H(Zt,d)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),l.m(t,e),w(t,c,e),w(t,r,e),w(t,i,e),p.m(t,e),w(t,d,e),w(t,u,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&l.d(),t&&j(c),t&&j(r),t&&j(i),t&&p.d(),t&&j(d),t&&j(u)}}}const Kt='<pre><code class="language-js">...\ntheme: <span class="hljs-string">\'default\'</span>,\n...</code></pre>\n',Zt='<pre><code class="language-js">...\ntheme: <span class="hljs-string">\'./src/my-own-theme\'</span>,\n...</code></pre>\n';function Vt(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$,C,T,L,M,S,E,_,A,B,I,P,q;return{c(){n=x("h1"),n.textContent="Getting started",s=k(),a=x("h3"),a.textContent="Initialize Svelte-docs",o=k(),l=x("p"),l.textContent="Just run this command in the root directory of your project:",c=k(),i=k(),p=x("p"),p.textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=k(),u=x("h3"),u.textContent="Edit your docs",h=k(),m=x("p"),m.textContent="Switch to the created directory, ex.:",f=k(),y=k(),b=x("p"),b.textContent="Run docs in development mode on the local server:",v=k(),C=k(),T=x("p"),T.innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',L=k(),M=x("p"),M.innerHTML="Now you can edit files in <code>src/pages</code> directory and browser will be reloaded on each save. ",S=k(),E=x("h3"),E.textContent="Build the documentation site",_=k(),A=x("p"),A.textContent="As soon as documentation ready for release you need to run the build:",B=k(),P=k(),q=x("p"),q.innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.',r=new H(Qt,i),g=new H(Xt,y),$=new H(te,C),I=new H(ee,P)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),r.m(t,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e),w(t,h,e),w(t,m,e),w(t,f,e),g.m(t,e),w(t,y,e),w(t,b,e),w(t,v,e),$.m(t,e),w(t,C,e),w(t,T,e),w(t,L,e),w(t,M,e),w(t,S,e),w(t,E,e),w(t,_,e),w(t,A,e),w(t,B,e),I.m(t,e),w(t,P,e),w(t,q,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&r.d(),t&&j(i),t&&j(p),t&&j(d),t&&j(u),t&&j(h),t&&j(m),t&&j(f),t&&g.d(),t&&j(y),t&&j(b),t&&j(v),t&&$.d(),t&&j(C),t&&j(T),t&&j(L),t&&j(M),t&&j(S),t&&j(E),t&&j(_),t&&j(A),t&&j(B),t&&I.d(),t&&j(P),t&&j(q)}}}const Qt='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n',Xt='<pre><code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code></pre>\n',te='<pre><code class="language-bash">npm run dev</code></pre>\n',ee='<pre><code class="language-bash">npm run build</code></pre>\n';function ne(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$,C,T,M,S,E,_,A,B,I,P,q,D;const G=new Lt({props:{name:"Ex_0_9753583d5391f3de0f3ee9487b6cf8d9",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>'}});return{c(){n=x("h1"),n.textContent="Introdcing",s=k(),a=x("h2"),a.textContent="Features",o=k(),l=x("p"),l.innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',c=k(),r=x("blockquote"),r.innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',i=k(),p=x("ul"),p.innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',d=k(),u=x("h2"),u.textContent="Zero-config",h=k(),m=x("p"),m.textContent="Just run:",f=k(),y=k(),b=x("p"),b.innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',v=k(),$=x("h2"),$.textContent="Builtins",C=k(),T=x("h3"),T.textContent="Examples",M=k(),S=x("p"),S.textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",E=k(),at(G.$$.fragment),_=k(),A=x("h3"),A.textContent="Properties",B=k(),I=x("p"),I.innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component&#39;s <code>*.svelte</code> file.",P=k(),q=x("dl"),q.innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",g=new H(se,y),L(q,"class","properties")},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e),w(t,h,e),w(t,m,e),w(t,f,e),g.m(t,e),w(t,y,e),w(t,b,e),w(t,v,e),w(t,$,e),w(t,C,e),w(t,T,e),w(t,M,e),w(t,S,e),w(t,E,e),ot(G,t,e),w(t,_,e),w(t,A,e),w(t,B,e),w(t,I,e),w(t,P,e),w(t,q,e),D=!0},p:t,i(t){D||(tt(G.$$.fragment,t),D=!0)},o(t){et(G.$$.fragment,t),D=!1},d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&j(p),t&&j(d),t&&j(u),t&&j(h),t&&j(m),t&&j(f),t&&g.d(),t&&j(y),t&&j(b),t&&j(v),t&&j($),t&&j(C),t&&j(T),t&&j(M),t&&j(S),t&&j(E),lt(G,t),t&&j(_),t&&j(A),t&&j(B),t&&j(I),t&&j(P),t&&j(q)}}}const se='<pre><code class="language-bash">npm init svelte-docs</code></pre>\n';function ae(e){let n,s,a,o,l,c,r,i,p,d,u,h,m;return{c(){n=x("h1"),n.textContent="Publishing on Github Pages",s=k(),a=x("p"),a.innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=k(),l=x("p"),l.textContent="To do it just run command in you documents source directory at any time:",c=k(),i=k(),p=x("p"),p.textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=k(),u=x("blockquote"),u.innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",h=k(),m=x("blockquote"),m.innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>',r=new H(oe,i)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),r.m(t,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e),w(t,h,e),w(t,m,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&r.d(),t&&j(i),t&&j(p),t&&j(d),t&&j(u),t&&j(h),t&&j(m)}}}const oe='<pre><code class="language-bash">npm run deploy</code></pre>\n';function le(e){let n,s,a,o,l,c,r;return{c(){n=x("h1"),n.textContent="Custom theme",s=k(),a=x("p"),a.innerHTML='You can make your own theme and use its directory path as <a href="config/theme">config.theme</a> value. There are several files which must exist:',o=k(),c=k(),r=x("p"),r.innerHTML='The simplest way is to copy one of the defaut themes and change it as you want. You can find them in the <code>./node_modules/@svelte-docs/themes</code> directory or downaload from the <a href="https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/AlexxNB/svelte-docs/tree/master/packages/themes">Github</a>',l=new H(ce,c)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),l.m(t,e),w(t,c,e),w(t,r,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&l.d(),t&&j(c),t&&j(r)}}}const ce='<pre><code class="language-bash">themedir\n├── components\n|   ├── Layout.svelte        <span class="hljs-comment"># Page layout</span>\n|   ├── Error.svelte         <span class="hljs-comment"># Error page layout</span>\n|   ├── Example.svelte       <span class="hljs-comment"># Example component</span>\n|   └── Properties.svelte    <span class="hljs-comment"># Properties component</span>\n├── info.md                <span class="hljs-comment"># Some info about the theme</span>\n└── style.css                <span class="hljs-comment"># CSS Styles</span></code></pre>\n';function re(e){let n,s,a,o,l,c,r,i,p,d,u;return{c(){n=x("h1"),n.textContent="Examples view CSS",s=k(),a=x("p"),a.innerHTML="Examples view(where the result shows) use CSS styles which are isolated from theme of the site. They are situated in the <code>src/examples.css</code> file. ",o=k(),l=x("h2"),l.textContent="import styles",c=k(),r=x("p"),r.textContent="You can include CSS file from the local directory, npm package or from CDN:",i=k(),d=k(),u=x("blockquote"),u.innerHTML="<p>When you use <code>:global()</code> or <code>@import</code> keywords in one example, they will affect on the all examples, because all examples styles bundeled in the single CSS file.</p>",p=new H(ie,d)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e),w(t,i,e),p.m(t,e),w(t,d,e),w(t,u,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&p.d(),t&&j(d),t&&j(u)}}}const ie='<pre><code class="language-css"><span class="hljs-keyword">@import</span> <span class="hljs-string">\'./../mystyles.css\'</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'./node_modules/my-favorite-css-framework\'</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'https://anycdn.com/my-favorite-css-framework\'</span>;</code></pre>\n';function pe(e){let n,s,a,o,l,c,r;return{c(){n=x("p"),n.innerHTML='Theme based on <a href="https://svelte.dev/docs">offical Svelte documentation site</a>.',s=k(),a=x("p"),a.innerHTML="<em>by Alexey Schebelev</em>",o=k(),l=x("h2"),l.textContent="Theme variables",c=k(),r=x("table"),r.innerHTML="<thead><tr><th>Variable</th> \n<th>Default</th> \n<th>Comment</th></tr></thead> \n<tbody><tr><td><code>--font</code></td> \n<td>&quot;Overpass&quot;, sans-serif</td> \n<td></td></tr> \n<tr><td><code>--font-mono</code></td> \n<td>&quot;Fira Mono&quot;, monospace</td> \n<td></td></tr> \n<tr><td><code>--primary</code></td> \n<td>#ff3e00</td> \n<td></td></tr> \n<tr><td><code>--secondary</code></td> \n<td>#676778</td> \n<td></td></tr> \n<tr><td><code>--dark</code></td> \n<td>#34343d</td> \n<td></td></tr> \n<tr><td><code>--light</code></td> \n<td>#c0c0d8</td> \n<td></td></tr> \n<tr><td><code>--white</code></td> \n<td>#ffffff</td> \n<td></td></tr> \n<tr><td><code>--code</code></td> \n<td>#f6fafd</td> \n<td></td></tr> \n<tr><td><code>--text</code></td> \n<td>--dark</td> \n<td></td></tr> \n<tr><td><code>--text-sidebar</code></td> \n<td>#d4d4d4</td> \n<td></td></tr> \n<tr><td><code>--text-sidebar-links</code></td> \n<td>--white</td> \n<td></td></tr> \n<tr><td><code>--topbar-height</code></td> \n<td>50px</td> \n<td></td></tr> \n<tr><td><code>--sidebar-width</code></td> \n<td>300px</td> \n<td></td></tr> \n<tr><td><code>--example-border</code></td> \n<td>--light</td> \n<td>Border color of the example block</td></tr> \n<tr><td><code>--props-border</code></td> \n<td>--light</td> \n<td>Colors of the properties block</td></tr> \n<tr><td><code>--props-devider</code></td> \n<td>--code</td> \n<td></td></tr> \n<tr><td><code>--props-types-bg</code></td> \n<td>--code</td> \n<td></td></tr> \n<tr><td><code>--props-types-border</code></td> \n<td>--light</td> \n<td></td></tr> \n<tr><td><code>--props-types-text</code></td> \n<td>--hl-keyword</td> \n<td></td></tr> \n<tr><td><code>--props-oneof-text</code></td> \n<td>--hl-string</td> \n<td></td></tr> \n<tr><td><code>--props-default-text</code></td> \n<td>--light</td> \n<td></td></tr> \n<tr><td><code>--hl-background</code></td> \n<td>--code</td> \n<td>Code highlighting colors</td></tr> \n<tr><td><code>--hl-text</code></td> \n<td>#505050</td> \n<td></td></tr> \n<tr><td><code>--hl-comment</code></td> \n<td>#8da4bc</td> \n<td></td></tr> \n<tr><td><code>--hl-keyword</code></td> \n<td>#3c87b9</td> \n<td></td></tr> \n<tr><td><code>--hl-string</code></td> \n<td>#a18851</td> \n<td></td></tr> \n<tr><td><code>--hl-number</code></td> \n<td>#76a562</td> \n<td></td></tr> \n<tr><td><code>--hl-name</code></td> \n<td>#c36031</td> \n<td></td></tr> \n<tr><td><code>--hl-attr</code></td> \n<td>#a18851</td> \n<td></td></tr> \n<tr><td><code>--hl-builtin</code></td> \n<td>#505050</td> \n<td></td></tr></tbody>"},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r)}}}class de extends it{constructor(t){super(),rt(this,t,null,pe,c,{})}}function ue(e){let n,s,a;const o=new de({});return{c(){n=x("h1"),n.textContent="Default",s=k(),at(o.$$.fragment)},m(t,e){w(t,n,e),w(t,s,e),ot(o,t,e),a=!0},p:t,i(t){a||(tt(o.$$.fragment,t),a=!0)},o(t){et(o.$$.fragment,t),a=!1},d(t){t&&j(n),t&&j(s),lt(o,t)}}}function he(e){let n,s,a,o,l,c,r,i,p,d,u;return{c(){n=x("h1"),n.textContent="Theme tuning",s=k(),a=x("p"),a.textContent="Each theme allows to tune some predefined CSS variables which are listed in themes descriptions.",o=k(),l=x("p"),l.innerHTML="Add values you want to change into the <code>src/theme.css</code> as shown below:",c=k(),i=k(),p=x("p"),p.textContent="Also you may write your own CSS styles there, they will overwrite default styles for same selectors:",d=k(),r=new H(me,i),u=new H(fe,null)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),r.m(t,e),w(t,i,e),w(t,p,e),w(t,d,e),u.m(t,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&r.d(),t&&j(i),t&&j(p),t&&j(d),t&&u.d()}}}const me='<pre><code class="language-css"><span class="hljs-selector-pseudo">:root</span>&#123;\n    <span class="hljs-attribute">--primary</span>: <span class="hljs-number">#009225</span>;\n    <span class="hljs-attribute">--secondary</span>: <span class="hljs-number">#3f3f70</span>;\n&#125;</code></pre>\n',fe='<pre><code class="language-css"><span class="hljs-selector-tag">h1</span>&#123;\n    <span class="hljs-attribute">color</span>: red;\n    <span class="hljs-attribute">text-transform</span>: uppercase;\n&#125;</code></pre>\n';function ge(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$;return{c(){n=x("h1"),n.textContent="Theming",s=k(),a=x("p"),a.innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=k(),l=x("h3"),l.textContent="Themes",c=k(),r=x("p"),r.innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=k(),p=x("h3"),p.textContent="Colors",d=k(),u=x("p"),u.innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",h=k(),m=x("h3"),m.textContent="Styles",f=k(),g=x("p"),g.innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",y=k(),b=x("h3"),b.textContent="Layout",v=k(),$=x("p"),$.innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e),w(t,h,e),w(t,m,e),w(t,f,e),w(t,g,e),w(t,y,e),w(t,b,e),w(t,v,e),w(t,$,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&j(p),t&&j(d),t&&j(u),t&&j(h),t&&j(m),t&&j(f),t&&j(g),t&&j(y),t&&j(b),t&&j(v),t&&j($)}}}function ye(e){let n,s,a,o,l,c,r,i,p,d,u,h,m,f,g,y,b,v,$,C,T,L,M,S,E,_,A,B,I,P,q,D,G,N,O,Y,z,R,U,W,F,J,K;return{c(){n=x("h1"),n.textContent="Includes",s=k(),a=x("p"),a.innerHTML="In the <code>src/includes</code> directory live little MDSv components which you can include in any page you want. There are some default files used by theme:",o=k(),l=x("h3"),l.textContent="sidebar.md",c=k(),r=x("p"),r.textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",i=k(),p=x("p"),p.textContent="Let's look on example:",d=k(),h=k(),m=x("p"),m.innerHTML="Usually it is just a list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/pages</code> directory. ",f=k(),g=x("p"),g.innerHTML='URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/pages/components/button.md</code> file. Please see <a href="writing/routing">Routing</a> section for more info about URL.',y=k(),b=x("p"),b.textContent="External URLs will be opened in new window.",v=k(),$=x("h3"),$.textContent="logo.md",C=k(),T=x("p"),T.textContent="Commonly used for showing any logotype.  Just write something like:",L=k(),S=k(),E=x("p"),E.textContent="Or you can use an image as your logotype:",_=k(),B=k(),I=x("h3"),I.textContent="topbar.md",P=k(),q=x("p"),q.textContent="Play with right section of the topbar. For example add some links there:",D=k(),N=k(),O=x("h3"),O.textContent="error.md",Y=k(),z=x("p"),z.textContent="Just an error message which will be shown when user requests unexistent URL.",R=k(),U=x("h2"),U.textContent="Custom includes",W=k(),F=x("p"),F.innerHTML="You are free to create any <code>*.md</code> files which you can to include on any page you want using special import path:",J=k(),u=new H(be,h),M=new H(we,S),A=new H(je,B),G=new H(xe,N),K=new H(ve,null)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e),w(t,i,e),w(t,p,e),w(t,d,e),u.m(t,e),w(t,h,e),w(t,m,e),w(t,f,e),w(t,g,e),w(t,y,e),w(t,b,e),w(t,v,e),w(t,$,e),w(t,C,e),w(t,T,e),w(t,L,e),M.m(t,e),w(t,S,e),w(t,E,e),w(t,_,e),A.m(t,e),w(t,B,e),w(t,I,e),w(t,P,e),w(t,q,e),w(t,D,e),G.m(t,e),w(t,N,e),w(t,O,e),w(t,Y,e),w(t,z,e),w(t,R,e),w(t,U,e),w(t,W,e),w(t,F,e),w(t,J,e),K.m(t,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&j(p),t&&j(d),t&&u.d(),t&&j(h),t&&j(m),t&&j(f),t&&j(g),t&&j(y),t&&j(b),t&&j(v),t&&j($),t&&j(C),t&&j(T),t&&j(L),t&&M.d(),t&&j(S),t&&j(E),t&&j(_),t&&A.d(),t&&j(B),t&&j(I),t&&j(P),t&&j(q),t&&j(D),t&&G.d(),t&&j(N),t&&j(O),t&&j(Y),t&&j(z),t&&j(R),t&&j(U),t&&j(W),t&&j(F),t&&j(J),t&&K.d()}}}const be='<pre><code class="language-markdown"><span class="hljs-bullet">* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',we='<pre><code class="language-markdown"><span class="hljs-section"># MyComponent #</span></code></pre>\n',je='<pre><code class="language-markdown"><span class="hljs-section"># ![Logo](static/logo.png) #</span></code></pre>\n',xe='<pre><code class="language-markdown"><span class="hljs-bullet">* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code></pre>\n',ve='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n    <span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">\'@INCLUDES/banner.md\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Banner</span> /&gt;</span></code></pre>\n';function $e(e){let n,s,a,l,c,r,i,p;return{c(){n=x("span"),s=x("span"),s.textContent="-",a=k(),l=x("span"),c=$(e[0]),r=k(),i=x("span"),i.textContent="+",L(s,"class","minus svelte-1kq48qn"),L(l,"class","value svelte-1kq48qn"),L(i,"class","plus svelte-1kq48qn"),L(n,"class","counter svelte-1kq48qn"),p=[T(s,"click",(function(){e[1].apply(this,arguments)})),T(i,"click",(function(){e[2].apply(this,arguments)}))]},m(t,e){w(t,n,e),b(n,s),b(n,a),b(n,l),b(l,c),b(n,r),b(n,i)},p(t,n){e=t,1&n[0]&&M(c,e[0])},i:t,o:t,d(t){t&&j(n),o(p)}}}function ke(t,e,n){let s=0;return[s,t=>n(0,s--,s),t=>n(0,s++,s)]}class Ce extends it{constructor(t){super(),rt(this,t,ke,$e,c,{})}}function Te(e){let n;return{c(){n=x("blockquote"),n.innerHTML="<p><em>MDSv is really cool!</em></p>"},m(t,e){w(t,n,e)},p:t,i:t,o:t,d(t){t&&j(n)}}}class Le extends it{constructor(t){super(),rt(this,t,null,Te,c,{})}}function Me(t,e,n){const s=t.slice();return s[3]=e[n],s}function Se(t){let e,n,s=t[3]+"";return{c(){e=x("li"),n=$(s)},m(t,s){w(t,e,s),b(e,n)},p(t,e){1&e[0]&&s!==(s=t[3]+"")&&M(n,s)},d(t){t&&j(e)}}}function He(t){let e,n,s,a,l,c,r,i,p,d,u,h,m,f,g,y,v,$,C,L,M,S,E,_,A,B,I,P,q,D,G,N,O,Y,z,R,U,W,F,J,K,Z=t[0],V=[];for(let e=0;e<Z.length;e+=1)V[e]=Se(Me(t,Z,e));const Q=new Ce({}),X=new Le({});return{c(){e=x("h1"),e.textContent="What is MDSv",n=k(),s=x("p"),s.textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",a=k(),l=x("p"),l.innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',c=k(),r=x("p"),r.textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=k(),p=x("p"),p.textContent="This document also wrote in MDSv format, so we can do this right inside the document...",d=k(),h=k(),m=x("p"),m.textContent="... and get the result:",f=k(),g=x("ul");for(let t=0;t<V.length;t+=1)V[t].c();y=k(),v=x("button"),v.textContent="Add Item",$=k(),C=x("button"),C.textContent="Del Item",L=k(),M=x("p"),M.textContent="Or we can import any Svelte component and use it where we want:",S=k(),_=k(),A=x("p"),A.textContent="... and it will work:",B=k(),I=x("p"),P=x("em"),P.textContent="The counter:",q=k(),at(Q.$$.fragment),D=k(),G=x("p"),G.innerHTML="You even can import other <code>*.md</code> files:",N=k(),Y=k(),z=x("p"),z.textContent="... and it will be included in the specified place:",R=k(),U=x("p"),W=x("strong"),W.textContent="Spoiler:",F=k(),at(X.$$.fragment),u=new H(Ee,h),E=new H(_e,_),O=new H(Ae,Y),K=[T(v,"click",t[1]),T(C,"click",t[2])]},m(t,o){w(t,e,o),w(t,n,o),w(t,s,o),w(t,a,o),w(t,l,o),w(t,c,o),w(t,r,o),w(t,i,o),w(t,p,o),w(t,d,o),u.m(t,o),w(t,h,o),w(t,m,o),w(t,f,o),w(t,g,o);for(let t=0;t<V.length;t+=1)V[t].m(g,null);w(t,y,o),w(t,v,o),w(t,$,o),w(t,C,o),w(t,L,o),w(t,M,o),w(t,S,o),E.m(t,o),w(t,_,o),w(t,A,o),w(t,B,o),w(t,I,o),b(I,P),b(I,q),ot(Q,I,null),w(t,D,o),w(t,G,o),w(t,N,o),O.m(t,o),w(t,Y,o),w(t,z,o),w(t,R,o),w(t,U,o),b(U,W),b(U,F),ot(X,U,null),J=!0},p(t,e){if(1&e[0]){let n;for(Z=t[0],n=0;n<Z.length;n+=1){const s=Me(t,Z,n);V[n]?V[n].p(s,e):(V[n]=Se(s),V[n].c(),V[n].m(g,null))}for(;n<V.length;n+=1)V[n].d(1);V.length=Z.length}},i(t){J||(tt(Q.$$.fragment,t),tt(X.$$.fragment,t),J=!0)},o(t){et(Q.$$.fragment,t),et(X.$$.fragment,t),J=!1},d(t){t&&j(e),t&&j(n),t&&j(s),t&&j(a),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&j(p),t&&j(d),t&&u.d(),t&&j(h),t&&j(m),t&&j(f),t&&j(g),function(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}(V,t),t&&j(y),t&&j(v),t&&j($),t&&j(C),t&&j(L),t&&j(M),t&&j(S),t&&E.d(),t&&j(_),t&&j(A),t&&j(B),t&&j(I),lt(Q),t&&j(D),t&&j(G),t&&j(N),t&&O.d(),t&&j(Y),t&&j(z),t&&j(R),t&&j(U),lt(X),o(K)}}}const Ee='<pre><code class="language-svelte"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">\'item0\'</span>,<span class="hljs-string">\'item1\'</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>&#123; items = [...items,<span class="hljs-string">\'item\'</span>+items.length] &#125;\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>&#123; items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">#each</span><span class="javascript"> item <span class="hljs-keyword">as</span> item&#125;</span><span class="xml">\n* </span><span class="javascript">&#123;item&#125;</span><span class="xml">\n</span><span class="javascript">&#123;</span><span class="hljs-keyword">/each</span><span class="javascript">&#125;</span><span class="xml">\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;add&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=</span></span><span class="javascript">&#123;del&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></code></pre>\n',_e='<pre><code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from \'./Counter.svelte\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span> </code></pre>\n',Ae='<pre><code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from \'./spoiler.md\';</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code></pre>\n';function Be(t,e,n){let s=["item0","item1"];return[s,function(){n(0,s=[...s,"item"+s.length])},function(){n(0,s=s.slice(0,-1))}]}function Ie(e){let n,s,a,o,l,c,r;return{c(){n=x("h1"),n.textContent="Routing",s=k(),a=x("p"),a.innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/pages</code> directory:",o=k(),c=k(),r=x("p"),r.innerHTML="You can make links anywhere in your docs with URL part based on file hierarchy. For example, if you want create link to the <code>src/pages/components/button.md</code> use <code>components/button</code> as a href attribute of the <code>a</code> element - <code>components/button</code>. Or in markdown write - <code>[Button](component/button)</code>.",l=new H(Pe,c)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),l.m(t,e),w(t,c,e),w(t,r,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&l.d(),t&&j(c),t&&j(r)}}}const Pe='<pre><code class="language-bash">src                     <span class="hljs-comment">#  URL path part:</span>\n└── pages               <span class="hljs-comment">#</span>\n    ├── components      <span class="hljs-comment">#</span>\n    │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    ├── install.md      <span class="hljs-comment">#  install</span>\n    └── index.md         <span class="hljs-comment">#  / </span>\n</code></pre>\n';function qe(e){let n,s,a,o,l,c,r,i,p,d,u;return{c(){n=x("h1"),n.textContent="Pages configuration",s=k(),a=x("p"),a.textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=k(),l=x("h3"),l.textContent="fullscreen",c=k(),r=x("p"),r.innerHTML="By default all pages has a layout with left sidebar. But if you set the <code>fullscreen</code> option this way:",i=k(),d=k(),u=x("p"),u.textContent="... page will render without sidebar.",p=new H(De,d)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),w(t,r,e),w(t,i,e),p.m(t,e),w(t,d,e),w(t,u,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&j(r),t&&j(i),t&&p.d(),t&&j(d),t&&j(u)}}}const De='<pre><code class="language-markdown">---\n<span class="hljs-section">fullscreen: true\n---</span>\n... </code></pre>\n';function Ge(e){let n,s,a,o,l,c,r,i,p,d,u;return{c(){n=x("h1"),n.textContent="Static files",s=k(),a=x("p"),a.innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/static</code> directory.",o=k(),l=x("p"),l.innerHTML="For example, if you placed image in the <code>src/static/great-success.png</code> then you can include it by following code:",c=k(),i=k(),p=x("p"),p.textContent="... and get image on your page:",d=k(),u=x("p"),u.innerHTML='<img src="static/great-success.png" alt="Great Success">;',r=new H(Ne,i)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),w(t,l,e),w(t,c,e),r.m(t,e),w(t,i,e),w(t,p,e),w(t,d,e),w(t,u,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&j(l),t&&j(c),t&&r.d(),t&&j(i),t&&j(p),t&&j(d),t&&j(u)}}}const Ne='<pre><code class="language-markdown">![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code></pre>\n';function Oe(e){let n,s,a,o,l,c,r,i,p;return{c(){n=x("h1"),n.textContent="Structure",s=k(),a=x("p"),a.textContent="Let's see the structure of the doc's project directory:",o=k(),c=k(),r=x("p"),r.innerHTML="It is very simple, sources of you documentation are live in <code>src</code> directory:",i=k(),p=x("ul"),p.innerHTML="<li><strong>includes</strong> - there are small pieces of the MDSv code that can be reusable within any document page</li> \n<li><strong>pages</strong> - all pages of your documentation are stored in this directory</li> \n<li><strong>static</strong> - place here any static assets using in your documentation (files, images, icons and etc.)</li> \n<li><strong>examples.css</strong> - it is styles using within examples</li> \n<li><strong>theme.css</strong> - tune current documentation theme with variables, add new styles or <code>@import</code> any css file.</li>",l=new H(Ye,c)},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e),w(t,o,e),l.m(t,e),w(t,c,e),w(t,r,e),w(t,i,e),w(t,p,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a),t&&j(o),t&&l.d(),t&&j(c),t&&j(r),t&&j(i),t&&j(p)}}}const Ye='<pre><code class="language-bash">src\n├── includes\n├── pages\n├── static\n├── examples.css   \n└── theme.css   \n...\nsvelte-docs.config.js</code></pre>\n';function ze(e){let n,s,a;return{c(){n=x("h1"),n.textContent="Page not found!",s=k(),a=x("p"),a.innerHTML='<a href="/">Go to start page</a>',L(n,"class","svelte-aiue6m"),L(a,"class","svelte-aiue6m")},m(t,e){w(t,n,e),w(t,s,e),w(t,a,e)},p:t,i:t,o:t,d(t){t&&j(n),t&&j(s),t&&j(a)}}}class Re extends it{constructor(t){super(),rt(this,t,null,ze,c,{})}}function Ue(e){let n;const s=new Re({});return{c(){at(s.$$.fragment)},m(t,e){ot(s,t,e),n=!0},p:t,i(t){n||(tt(s.$$.fragment,t),n=!0)},o(t){et(s.$$.fragment,t),n=!1},d(t){lt(s,t)}}}class We extends it{constructor(t){super(),rt(this,t,null,Ue,c,{})}}const Fe=[];function Je(e,n=t){let s;const a=[];function o(t){if(c(e,t)&&(e=t,s)){const t=!Fe.length;for(let t=0;t<a.length;t+=1){const n=a[t];n[1](),Fe.push(n,e)}if(t){for(let t=0;t<Fe.length;t+=2)Fe[t][0](Fe[t+1]);Fe.length=0}}}return{set:o,update:function(t){o(t(e))},subscribe:function(l,c=t){const r=[l,c];return a.push(r),1===a.length&&(s=n(o)||t),l(e),()=>{const t=a.indexOf(r);-1!==t&&a.splice(t,1),0===a.length&&(s(),s=null)}}}}const Ke=Je(function(){let t=location.pathname;return t=function(t){const e=Qe();t.startsWith(e)&&(t=t.slice(e.length));t.startsWith("/")&&(t=t.slice(1));t.endsWith("/")&&(t=t.slice(0,-1));return t}(t),t}());function Ze(t){history.pushState({},"",""===t?Qe():t),Ke.set(t)}function Ve(t){const e=t.target.closest("a");if(!e)return;const n=e.getAttribute("href");if(n){if(!/^\w+:\/\//.test(n))return t.preventDefault(),/^\/$/.test(n)?Ze(""):Ze(n);e.setAttribute("target","_blank")}}function Qe(){let t=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===t?"/":t}const Xe=[{url:"",component:ut,meta:dt},{url:"builtins/example",component:class extends it{constructor(t){super(),rt(this,t,null,Mt,c,{})}},meta:{}},{url:"builtins/properties",component:class extends it{constructor(t){super(),rt(this,t,null,_t,c,{})}},meta:{}},{url:"config/aliases",component:class extends it{constructor(t){super(),rt(this,t,null,qt,c,{})}},meta:{}},{url:"config/basepath",component:class extends it{constructor(t){super(),rt(this,t,null,Yt,c,{})}},meta:{}},{url:"config/file",component:class extends it{constructor(t){super(),rt(this,t,null,zt,c,{})}},meta:{}},{url:"config/pathes",component:class extends it{constructor(t){super(),rt(this,t,null,Rt,c,{})}},meta:{}},{url:"config/preprocess",component:class extends it{constructor(t){super(),rt(this,t,null,Ut,c,{})}},meta:{}},{url:"config/theme",component:class extends it{constructor(t){super(),rt(this,t,null,Jt,c,{})}},meta:{}},{url:"getting-started",component:class extends it{constructor(t){super(),rt(this,t,null,Vt,c,{})}},meta:{}},{url:"index",component:ut,meta:dt},{url:"introduction",component:class extends it{constructor(t){super(),rt(this,t,null,ne,c,{})}},meta:{}},{url:"publishing/ghpages",component:class extends it{constructor(t){super(),rt(this,t,null,ae,c,{})}},meta:{}},{url:"theming/custom-theme",component:class extends it{constructor(t){super(),rt(this,t,null,le,c,{})}},meta:{}},{url:"theming/examples",component:class extends it{constructor(t){super(),rt(this,t,null,re,c,{})}},meta:{}},{url:"theming/list/default",component:class extends it{constructor(t){super(),rt(this,t,null,ue,c,{})}},meta:{}},{url:"theming/theme-tuning",component:class extends it{constructor(t){super(),rt(this,t,null,he,c,{})}},meta:{}},{url:"theming",component:class extends it{constructor(t){super(),rt(this,t,null,ge,c,{})}},meta:{}},{url:"writing/includes",component:class extends it{constructor(t){super(),rt(this,t,null,ye,c,{})}},meta:{}},{url:"writing/mdsv",component:class extends it{constructor(t){super(),rt(this,t,Be,He,c,{})}},meta:{}},{url:"writing/routing",component:class extends it{constructor(t){super(),rt(this,t,null,Ie,c,{})}},meta:{}},{url:"writing/settings",component:class extends it{constructor(t){super(),rt(this,t,null,qe,c,{})}},meta:{}},{url:"writing/static",component:class extends it{constructor(t){super(),rt(this,t,null,Ge,c,{})}},meta:{}},{url:"writing/structure",component:class extends it{constructor(t){super(),rt(this,t,null,Oe,c,{})}},meta:{}}],tn=function(e,n,s){const a=!Array.isArray(e),c=a?[e]:e,r=n.length<2;return{subscribe:Je(s,e=>{let s=!1;const i=[];let p=0,d=t;const u=()=>{if(p)return;d();const s=n(a?i[0]:i,e);r?e(s):d=l(s)?s:t},h=c.map((t,e)=>t.subscribe(t=>{i[e]=t,p&=~(1<<e),s&&u()},()=>{p|=1<<e}));return s=!0,u(),function(){o(h),d()}}).subscribe}}(Ke,t=>{const e=Xe.filter(e=>e.url===t);return e.length>0?e[0]:{url:"404",component:We,meta:{fullscreen:!0}}});function en(t){let e;return{c(){e=x("h1"),e.innerHTML='<a href="/"><img src="static/logo.svg" alt="LOGO" class="svelte-1m9fc3n"></a>'},m(t,n){w(t,e,n)},d(t){t&&j(e)}}}function nn(e){let n,s=""!==e[0].url&&en();return{c(){s&&s.c(),n=C()},m(t,e){s&&s.m(t,e),w(t,n,e)},p(t,e){""!==t[0].url?s||(s=en(),s.c(),s.m(n.parentNode,n)):s&&(s.d(1),s=null)},i:t,o:t,d(t){s&&s.d(t),t&&j(n)}}}function sn(t,e,n){let s;return r(t,tn,t=>n(0,s=t)),[s]}class an extends it{constructor(t){super(),rt(this,t,sn,nn,c,{})}}function on(t){return t<.5?4*t*t*t:.5*Math.pow(2*t-2,3)+1}function ln(t){return"[object Date]"===Object.prototype.toString.call(t)}function cn(t,e){if(t===e||t!=t)return()=>t;const n=typeof t;if(n!==typeof e||Array.isArray(t)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(t)){const n=e.map((e,n)=>cn(t[n],e));return t=>n.map(e=>e(t))}if("object"===n){if(!t||!e)throw new Error("Object cannot be null");if(ln(t)&&ln(e)){t=t.getTime();const n=(e=e.getTime())-t;return e=>new Date(t+e*n)}const n=Object.keys(e),s={};return n.forEach(n=>{s[n]=cn(t[n],e[n])}),t=>{const e={};return n.forEach(n=>{e[n]=s[n](t)}),e}}if("number"===n){const n=e-t;return e=>t+e*n}throw new Error(`Cannot interpolate ${n} values`)}function rn(t){let e,n,s;return{c(){e=x("span"),e.textContent="Github",L(e,"class","label svelte-bpn430")},m(t,n){w(t,e,n),s=!0},i(t){s||(W(()=>{n||(n=st(e,dn,{},!0)),n.run(1)}),s=!0)},o(t){n||(n=st(e,dn,{},!1)),n.run(0),s=!1},d(t){t&&j(e),t&&n&&n.end()}}}function pn(t){let e,n,s,a,l,c=t[1]&&rn();return{c(){e=x("a"),n=v("svg"),s=v("path"),c&&c.c(),L(s,"d","M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"),L(n,"viewBox","0 0 24 24"),S(n,"transform","rotate(-"+t[2]+"deg)"),L(n,"class","svelte-bpn430"),L(e,"class","github svelte-bpn430"),L(e,"href",t[0]),L(e,"target","_blank"),l=[T(e,"mouseenter",t[3]),T(e,"mouseleave",t[4])]},m(t,o){w(t,e,o),b(e,n),b(n,s),c&&c.m(e,null),a=!0},p(t,s){(!a||4&s[0])&&S(n,"transform","rotate(-"+t[2]+"deg)"),t[1]?c?tt(c,1):(c=rn(),c.c(),tt(c,1),c.m(e,null)):c&&(Q(),et(c,1,1,()=>{c=null}),X()),(!a||1&s[0])&&L(e,"href",t[0])},i(t){a||(tt(c),a=!0)},o(t){et(c),a=!1},d(t){t&&j(e),c&&c.d(),o(l)}}}function dn(t){return{delay:0,duration:500,css:t=>`overflow:hide; width: ${50*on(t)}px; opacity: ${t}`}}function un(t,s,a){let o,{url:l}=s,{animation:c=!1}=s,i=!1;const p=function(t,s={}){const a=Je(t);let o,l=t;function c(c,r){if(null==t)return a.set(t=c),Promise.resolve();l=c;let i=o,p=!1,{delay:d=0,duration:u=400,easing:m=e,interpolate:f=cn}=n(n({},s),r);const g=h()+d;let b;return o=y(e=>{if(e<g)return!0;p||(b=f(t,c),"function"==typeof u&&(u=u(t,c)),p=!0),i&&(i.abort(),i=null);const n=e-g;return n>u?(a.set(t=c),!1):(a.set(t=b(m(n/u))),!0)}),o.promise}return{set:c,update:(e,n)=>c(e(l,t),n),subscribe:a.subscribe}}(0,{duration:500,easing:on});return r(t,p,t=>a(2,o=t)),t.$set=t=>{"url"in t&&a(0,l=t.url),"animation"in t&&a(6,c=t.animation)},t.$$.update=()=>{2&t.$$.dirty[0]&&function(t,e,n=e){t.set(n)}(p,o=i?100:0)},[l,i,o,function(){c&&a(1,i=!0)},function(){a(1,i=!1)},p,c]}class hn extends it{constructor(t){super(),rt(this,t,un,pn,c,{url:0,animation:6})}}function mn(e){let n,s,a,o,l;const c=new hn({props:{animation:!0,url:"https://github.com/alexxnb/svelte-docs"}});return{c(){n=x("ul"),s=x("li"),s.innerHTML='<a href="getting-started">Docs</a>',a=k(),o=x("li"),at(c.$$.fragment)},m(t,e){w(t,n,e),b(n,s),b(n,a),b(n,o),ot(c,o,null),l=!0},p:t,i(t){l||(tt(c.$$.fragment,t),l=!0)},o(t){et(c.$$.fragment,t),l=!1},d(t){t&&j(n),lt(c)}}}class fn extends it{constructor(t){super(),rt(this,t,null,mn,c,{})}}function gn(e){let n,s,a,o;const l=new an({}),c=new fn({});return{c(){n=x("section"),at(l.$$.fragment),s=k(),a=x("section"),at(c.$$.fragment)},m(t,e){w(t,n,e),ot(l,n,null),w(t,s,e),w(t,a,e),ot(c,a,null),o=!0},p:t,i(t){o||(tt(l.$$.fragment,t),tt(c.$$.fragment,t),o=!0)},o(t){et(l.$$.fragment,t),et(c.$$.fragment,t),o=!1},d(t){t&&j(n),lt(l),t&&j(s),t&&j(a),lt(c)}}}class yn extends it{constructor(t){super(),rt(this,t,null,gn,c,{})}}function bn(e){let n;return{c(){n=x("ul"),n.innerHTML='<li><a href="introduction">Introduction</a></li> \n<li><a href="getting-started">Getting Started</a></li> \n<li>Writing docs<ul><li><a href="writing/mdsv">What is MDSv</a></li> \n<li><a href="writing/structure">Structure</a></li> \n<li><a href="writing/includes">Includes</a></li> \n<li><a href="writing/routing">Routing</a></li> \n<li><a href="writing/static">Static files</a></li> \n<li><a href="writing/settings">Page settings</a></li></ul></li> \n<li><a href="config/file">Configuration</a><ul><li><a href="config/basepath">basepath</a></li> \n<li><a href="config/theme">theme</a></li> \n<li><a href="config/pathes">pathes</a></li> \n<li><a href="config/aliases">aliases</a></li> \n<li><a href="config/preprocess">preprocess</a></li></ul></li> \n<li>Builtins<ul><li><a href="builtins/example">Example</a></li> \n<li><a href="builtins/properties">Properties</a></li></ul></li> \n<li>Styling<ul><li><a href="theming/theme-tuning">Theme tuning</a></li> \n<li><a href="theming/examples">Examples view</a></li> \n<li><a href="theming/custom-theme">Custom theme</a></li> \n<li>List of themes<ul><li><a href="theming/list/default">Default</a></li></ul></li></ul></li> \n<li>Publishing<ul><li><a href="publishing/ghpages">GitHub Pages</a></li></ul></li>'},m(t,e){w(t,n,e)},p:t,i:t,o:t,d(t){t&&j(n)}}}class wn extends it{constructor(t){super(),rt(this,t,null,bn,c,{})}}function jn(e){let n;const s=new wn({});return{c(){at(s.$$.fragment)},m(t,e){ot(s,t,e),n=!0},p:t,i(t){n||(tt(s.$$.fragment,t),n=!0)},o(t){et(s.$$.fragment,t),n=!1},d(t){lt(s,t)}}}class xn extends it{constructor(t){super(),rt(this,t,null,jn,c,{})}}function vn(t){let e,n;var s=t[0].component;if(s)var a=new s({});return{c(){e=x("article"),a&&at(a.$$.fragment)},m(t,s){w(t,e,s),a&&ot(a,e,null),n=!0},p(t,n){if(s!==(s=t[0].component)){if(a){Q();const t=a;et(t.$$.fragment,1,0,()=>{lt(t,1)}),X()}s?(at((a=new s({})).$$.fragment),tt(a.$$.fragment,1),ot(a,e,null)):a=null}},i(t){n||(a&&tt(a.$$.fragment,t),n=!0)},o(t){a&&et(a.$$.fragment,t),n=!1},d(t){t&&j(e),a&&lt(a)}}}function $n(t,e,n){let s;return r(t,tn,t=>n(0,s=t)),tn.subscribe(()=>{window.scrollTo(0,0)}),[s]}class kn extends it{constructor(t){super(),rt(this,t,$n,vn,c,{})}}function Cn(t){let e,n,s,a,o,c,r;const i=new xn({}),p=new kn({});return{c(){e=x("span"),n=k(),s=x("nav"),at(i.$$.fragment),o=k(),c=x("main"),at(p.$$.fragment),L(e,"class","showSidebar"),L(e,"tabindex","0")},m(t,l){w(t,e,l),w(t,n,l),w(t,s,l),ot(i,s,null),a=Mn.call(null,s)||{},w(t,o,l),w(t,c,l),ot(p,c,null),r=!0},i(t){r||(tt(i.$$.fragment,t),tt(p.$$.fragment,t),r=!0)},o(t){et(i.$$.fragment,t),et(p.$$.fragment,t),r=!1},d(t){t&&j(e),t&&j(n),t&&j(s),lt(i),a&&l(a.destroy)&&a.destroy(),t&&j(o),t&&j(c),lt(p)}}}function Tn(t){let e,n;const s=new kn({});return{c(){e=x("main"),at(s.$$.fragment),L(e,"class","fullscreen")},m(t,a){w(t,e,a),ot(s,e,null),n=!0},i(t){n||(tt(s.$$.fragment,t),n=!0)},o(t){et(s.$$.fragment,t),n=!1},d(t){t&&j(e),lt(s)}}}function Ln(t){let e,n,s,a,o,l;const c=new yn({}),r=[Tn,Cn],i=[];function p(t,e){return t[0].meta.fullscreen?0:1}return s=p(t),a=i[s]=r[s](t),{c(){e=x("header"),at(c.$$.fragment),n=k(),a.c(),o=C()},m(t,a){w(t,e,a),ot(c,e,null),w(t,n,a),i[s].m(t,a),w(t,o,a),l=!0},p(t,e){let n=s;s=p(t),s!==n&&(Q(),et(i[n],1,1,()=>{i[n]=null}),X(),a=i[s],a||(a=i[s]=r[s](t),a.c()),tt(a,1),a.m(o.parentNode,o))},i(t){l||(tt(c.$$.fragment,t),tt(a),l=!0)},o(t){et(c.$$.fragment,t),et(a),l=!1},d(t){t&&j(e),lt(c),t&&j(n),i[s].d(t),t&&j(o)}}}function Mn(t){return{destroy:tn.subscribe(e=>{t.querySelectorAll("a").forEach(t=>{t.getAttribute("href")===e.url?t.classList.add("active"):t.classList.remove("active")})})}}function Sn(t,e,n){let s;return r(t,tn,t=>n(0,s=t)),[s]}class Hn extends it{constructor(t){super(),rt(this,t,Sn,Ln,c,{})}}function En(e){let n;const s=new Hn({});return{c(){at(s.$$.fragment)},m(t,e){ot(s,t,e),n=!0},p:t,i(t){n||(tt(s.$$.fragment,t),n=!0)},o(t){et(s.$$.fragment,t),n=!1},d(t){lt(s,t)}}}function _n(t){return D(()=>(addEventListener("click",Ve),function(){removeEventListener("click",Ve)})),[]}return new class extends it{constructor(t){super(),rt(this,t,_n,En,c,{})}}({target:document.body,props:{}})}();
