var app=function(){"use strict";function n(){}const e=n=>n;function t(n,e){for(const t in e)n[t]=e[t];return n}function s(n){return n()}function a(){return Object.create(null)}function o(n){n.forEach(s)}function l(n){return"function"==typeof n}function r(n,e){return n!=n?e==e:n!==e||n&&"object"==typeof n||"function"==typeof n}function c(n,e,t){n.$$.on_destroy.push(function(n,e){const t=n.subscribe(e);return t.unsubscribe?()=>t.unsubscribe():t}(e,t))}function i(n,e,t){if(n){const s=p(n,e,t);return n[0](s)}}function p(n,e,s){return n[1]?t({},t(e.$$scope.ctx,n[1](s?s(e):{}))):e.$$scope.ctx}function d(n,e,s,a){return n[1]?t({},t(e.$$scope.changed||{},n[1](a?a(s):{}))):e.$$scope.changed||{}}const u="undefined"!=typeof window;let h=u?()=>window.performance.now():()=>Date.now(),m=u?n=>requestAnimationFrame(n):n;const f=new Set;let g,y=!1;function b(){f.forEach(n=>{n[0](h())||(f.delete(n),n[1]())}),(y=f.size>0)&&m(b)}function j(n){let e;return y||(y=!0,m(b)),{promise:new Promise(t=>{f.add(e=[n,t])}),abort(){f.delete(e)}}}function w(n,e){n.appendChild(e)}function $(n,e,t){n.insertBefore(e,t||null)}function v(n){n.parentNode.removeChild(n)}function x(n){return document.createElement(n)}function k(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function C(n){return document.createTextNode(n)}function T(){return C(" ")}function M(){return C("")}function L(n,e,t,s){return n.addEventListener(e,t,s),()=>n.removeEventListener(e,t,s)}function H(n,e,t){null==t?n.removeAttribute(e):n.getAttribute(e)!==t&&n.setAttribute(e,t)}function S(n,e){e=""+e,n.data!==e&&(n.data=e)}function _(n,e,t,s){n.style.setProperty(e,t,s?"important":"")}let E,A=0,B={};function P(n,e,t,s,a,o,l,r=0){const c=16.666/s;let i="{\n";for(let n=0;n<=1;n+=c){const s=e+(t-e)*o(n);i+=100*n+`%{${l(s,1-s)}}\n`}const p=i+`100% {${l(t,1-t)}}\n}`,d=`__svelte_${function(n){let e=5381,t=n.length;for(;t--;)e=(e<<5)-e^n.charCodeAt(t);return e>>>0}(p)}_${r}`;if(!B[d]){if(!g){const n=x("style");document.head.appendChild(n),g=n.sheet}B[d]=!0,g.insertRule(`@keyframes ${d} ${p}`,g.cssRules.length)}const u=n.style.animation||"";return n.style.animation=`${u?`${u}, `:""}${d} ${s}ms linear ${a}ms 1 both`,A+=1,d}function I(n,e){n.style.animation=(n.style.animation||"").split(", ").filter(e?n=>n.indexOf(e)<0:n=>-1===n.indexOf("__svelte")).join(", "),e&&!--A&&m(()=>{if(A)return;let n=g.cssRules.length;for(;n--;)g.deleteRule(n);B={}})}function q(n){E=n}function D(n){(function(){if(!E)throw new Error("Function called outside component initialization");return E})().$$.on_mount.push(n)}const G=[],N=[],O=[],R=[],z=Promise.resolve();let Y,U=!1;function W(n){O.push(n)}function F(){const n=new Set;do{for(;G.length;){const n=G.shift();q(n),K(n.$$)}for(;N.length;)N.pop()();for(let e=0;e<O.length;e+=1){const t=O[e];n.has(t)||(t(),n.add(t))}O.length=0}while(G.length);for(;R.length;)R.pop()();U=!1}function K(n){null!==n.fragment&&(n.update(n.dirty),o(n.before_update),n.fragment&&n.fragment.p(n.dirty,n.ctx),n.dirty=null,n.after_update.forEach(W))}function J(n,e,t){n.dispatchEvent(function(n,e){const t=document.createEvent("CustomEvent");return t.initCustomEvent(n,!1,!1,e),t}(`${e?"intro":"outro"}${t}`))}const Z=new Set;let Q;function V(){Q={r:0,c:[],p:Q}}function X(){Q.r||o(Q.c),Q=Q.p}function nn(n,e){n&&n.i&&(Z.delete(n),n.i(e))}function en(n,e,t,s){if(n&&n.o){if(Z.has(n))return;Z.add(n),Q.c.push(()=>{Z.delete(n),s&&(t&&n.d(1),s())}),n.o(e)}}const tn={duration:0};function sn(t,s,a,r){let c=s(t,a),i=r?0:1,p=null,d=null,u=null;function m(){u&&I(t,u)}function f(n,e){const t=n.b-i;return e*=Math.abs(t),{a:i,b:n.b,d:t,duration:e,start:n.start,end:n.start+e,group:n.group}}function g(s){const{delay:a=0,duration:l=300,easing:r=e,tick:g=n,css:y}=c||tn,b={start:h()+a,b:s};s||(b.group=Q,Q.r+=1),p?d=b:(y&&(m(),u=P(t,i,s,l,a,r,y)),s&&g(0,1),p=f(b,l),W(()=>J(t,s,"start")),j(n=>{if(d&&n>d.start&&(p=f(d,l),d=null,J(t,p.b,"start"),y&&(m(),u=P(t,i,p.b,p.duration,0,r,c.css))),p)if(n>=p.end)g(i=p.b,1-i),J(t,p.b,"end"),d||(p.b?m():--p.group.r||o(p.group.c)),p=null;else if(n>=p.start){const e=n-p.start;i=p.a+p.d*r(e/p.duration),g(i,1-i)}return!(!p&&!d)}))}return{run(n){l(c)?(Y||(Y=Promise.resolve()).then(()=>{Y=null}),Y).then(()=>{c=c(),g(n)}):g(n)},end(){m(),p=d=null}}}function an(n){n&&n.c()}function on(n,e,t){const{fragment:a,on_mount:r,on_destroy:c,after_update:i}=n.$$;a&&a.m(e,t),W(()=>{const e=r.map(s).filter(l);c?c.push(...e):o(e),n.$$.on_mount=[]}),i.forEach(W)}function ln(n,e){const t=n.$$;null!==t.fragment&&(o(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx={})}function rn(n,e){n.$$.dirty||(G.push(n),U||(U=!0,z.then(F)),n.$$.dirty=a()),n.$$.dirty[e]=!0}function cn(e,t,s,l,r,c){const i=E;q(e);const p=t.props||{},d=e.$$={fragment:null,ctx:null,props:c,update:n,not_equal:r,bound:a(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:a(),dirty:null};let u=!1;var h;d.ctx=s?s(e,p,(n,t,s=t)=>(d.ctx&&r(d.ctx[n],d.ctx[n]=s)&&(d.bound[n]&&d.bound[n](s),u&&rn(e,n)),t)):p,d.update(),u=!0,o(d.before_update),d.fragment=!!l&&l(d.ctx),t.target&&(t.hydrate?d.fragment&&d.fragment.l((h=t.target,Array.from(h.childNodes))):d.fragment&&d.fragment.c(),t.intro&&nn(e.$$.fragment),on(e,t.target,t.anchor),F()),q(i)}class pn{$destroy(){ln(this,1),this.$destroy=n}$on(n,e){const t=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return t.push(e),()=>{const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}$set(){}}function dn(e){let t;return{c(){(t=x("div")).innerHTML='<div class="banner svelte-19i87y2"><p class="svelte-19i87y2"><img src="static/logo.svg" alt="Svelte-Docs Logo" class="svelte-19i87y2"></p> \n<p class="svelte-19i87y2">A rapid way to document your Svelte things</p></div> \n<div class="buttons svelte-19i87y2"><a href="introduction" class="svelte-19i87y2">Introduction</a> \n<a href="getting-started" class="svelte-19i87y2">Getting Started</a></div>',H(t,"class","hero svelte-19i87y2")},m(n,e){$(n,t,e)},p:n,i:n,o:n,d(n){n&&v(t)}}}const un={fullscreen:!0};class hn extends pn{constructor(n){super(),cn(this,n,null,dn,r,{})}}const mn=()=>({}),fn=()=>({}),gn=()=>({}),yn=()=>({});function bn(n){let e,t,s,a,o;const l=n.$$slots.result,r=i(l,n,yn),c=n.$$slots.code,u=i(c,n,fn);return{c(){e=x("div"),t=x("div"),r&&r.c(),s=T(),a=x("div"),u&&u.c(),H(t,"class","result"),H(a,"class","code"),H(e,"class","example")},m(n,l){$(n,e,l),w(e,t),r&&r.m(t,null),w(e,s),w(e,a),u&&u.m(a,null),o=!0},p(n,e){r&&r.p&&n.$$scope&&r.p(d(l,e,n,gn),p(l,e,yn)),u&&u.p&&n.$$scope&&u.p(d(c,e,n,mn),p(c,e,fn))},i(n){o||(nn(r,n),nn(u,n),o=!0)},o(n){en(r,n),en(u,n),o=!1},d(n){n&&v(e),r&&r.d(n),u&&u.d(n)}}}function jn(n,e,t){let{$$slots:s={},$$scope:a}=e;return n.$set=(n=>{"$$scope"in n&&t("$$scope",a=n.$$scope)}),{$$slots:s,$$scope:a}}class wn extends pn{constructor(n){super(),cn(this,n,jn,bn,r,{})}}var $n="/svelte-docs/";function vn(n){let e,t;return{c(){H(e=x("iframe"),"slot","result"),_(e,"height",n.iframe_height+"px"),H(e,"title","Result"),H(e,"scrolling","no"),H(e,"sandbox","allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),H(e,"srcdoc",n.srcdoc),H(e,"class","svelte-y9biys"),t=L(e,"load",n.sendMessage)},m(t,s){$(t,e,s),n.iframe_1_binding(e)},p(n,t){n.iframe_height&&_(e,"height",t.iframe_height+"px")},d(s){s&&v(e),n.iframe_1_binding(null),t()}}}function xn(n){let e,t,s=n.code.trim()+"";return{c(){e=x("pre"),t=x("code"),H(e,"slot","code"),H(e,"class","hljs svelte-y9biys")},m(n,a){$(n,e,a),w(e,t),t.innerHTML=s},p(n,e){n.code&&s!==(s=e.code.trim()+"")&&(t.innerHTML=s)},d(n){n&&v(e)}}}function kn(e){let t;return{c(){t=T()},m(n,e){$(n,t,e)},p:n,d(n){n&&v(t)}}}function Cn(n){let e;const t=new wn({props:{$$slots:{default:[kn],code:[xn],result:[vn]},$$scope:{ctx:n}}});return{c(){an(t.$$.fragment)},m(n,s){on(t,n,s),e=!0},p(n,e){const s={};(n.$$scope||n.code||n.iframe_height||n.iframe)&&(s.$$scope={changed:n,ctx:e}),t.$set(s)},i(n){e||(nn(t.$$.fragment,n),e=!0)},o(n){en(t.$$.fragment,n),e=!1},d(n){ln(t,n)}}}let Tn=1;function Mn(n,e,t){let s,{name:a}=e,{code:o}=e,l=Tn++,r=70;const c=`<!doctype html>\n<html style="height: auto !important">\n    <head>\n        <meta charset='utf-8'>\n        <base href='${$n}' />\n        <link rel='stylesheet' href='examples.css'>\n        <scr`+"ipt defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>";return window.addEventListener("message",function(n){n.data.iframe_id&&n.data.iframe_id===l&&n.data.hasOwnProperty("HEIGHT")&&t("iframe_height",r=n.data.HEIGHT)}),n.$set=(n=>{"name"in n&&t("name",a=n.name),"code"in n&&t("code",o=n.code)}),{name:a,code:o,iframe:s,iframe_height:r,srcdoc:c,sendMessage:function(){s.contentWindow.postMessage({COMPONENT:a,iframe_id:l},"*")},iframe_1_binding:function(n){N[n?"unshift":"push"](()=>{t("iframe",s=n)})}}}class Ln extends pn{constructor(n){super(),cn(this,n,Mn,Cn,r,{name:0,code:0})}}function Hn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w,k,C,M,L,H,S,_,E,A,B,P,I,q,D,G,N;const O=new Ln({props:{name:"Ex_0_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">let</span> name=<span class="hljs-string">\'Button\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">&nbsp;\n    <span class="hljs-selector-tag">button</span>&#123;<span class="hljs-attribute">background</span>: red&#125;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>'}}),R=new Ln({props:{name:"Ex_1_39fd83e225ff0ad6956224cded64370c",code:'\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n'}}),z=new Ln({props:{name:"Ex_2_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> &#123;Button&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'svelte-chota\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">primary</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),Y=new Ln({props:{name:"Ex_3_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./../mylib/Button.svelte\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>'}}),U=new Ln({props:{name:"Ex_4_39fd83e225ff0ad6956224cded64370c",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&nbsp;\n    <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'./Button.svelte\'</span>;\n    <span class="hljs-keyword">import</span> Button2 <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-button-package\'</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Button</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">Button2</span> <span class="hljs-attr">error</span>&gt;</span>Button2<span class="hljs-tag">&lt;/<span class="hljs-name">Button2</span>&gt;</span>'}});return{c(){(t=x("h1")).textContent="Example code block",s=T(),(a=x("p")).innerHTML="When you document your Svelte component you want show it in action. You can do it with <em>Example code block</em>. ",o=T(),(l=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=&#39;Button&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',r=T(),an(O.$$.fragment),c=T(),(i=x("h3")).textContent="Hide script and/or style blocks",p=T(),(d=x("p")).innerHTML="Sometimes no need to show what is inside the <em>style</em> or <em>script</em> blocks. You can use <code>script:hide</code> and <code>style:hide</code> modifiers.",u=T(),(h=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example script:hide style:hide</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        let name=&#39;Button&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    &lt;button&gt;{name}&lt;/button&gt;</span>\n\n<span class="hljs-code">    &lt;style&gt;</span>\n<span class="hljs-code">        button{background: red}</span>\n<span class="hljs-code">    &lt;/style&gt;</span>\n<span class="hljs-code">    ```</span></code>',m=T(),an(R.$$.fragment),f=T(),(g=x("h3")).textContent="Import in examples",y=T(),(b=x("p")).innerHTML="You can import any installed NPM package or local file as you usually do inside ordinary <code>*.svelte</code> file.",j=T(),an(z.$$.fragment),w=T(),(k=x("p")).textContent="Also you can import any local file by relative path according documents directory root:",C=T(),an(Y.$$.fragment),M=T(),(L=x("p")).innerHTML='Other way to import local files - using <em>virtual packages</em>(see <a href="config/incpkg">config.incPKG</a>).',H=T(),(S=x("pre")).innerHTML='<code class="language-javascript"><span class="hljs-comment">// svelte-docs.config.js</span>\n...\nincPKG:{\n    <span class="hljs-string">&#39;./Button.svelte&#39;</span>: <span class="hljs-string">&#39;./../mylib/Button.svelte&#39;</span>,\n    <span class="hljs-string">&#39;my-button-package&#39;</span>: <span class="hljs-string">&#39;./../mylib/Button.svelte&#39;</span>\n},\n...</code>',_=T(),an(U.$$.fragment),E=T(),(A=x("h3")).textContent="Styling",B=T(),(P=x("p")).innerHTML="Styles of the documentation site doesn&#39;t affect on the Example&#39;s result. Examples have their own global styles(which will be used by all examples). It is stored in <code>src/theme/examples.css</code> file. ",I=T(),(q=x("p")).innerHTML='Also, you can include global styles from any local file or installed package using <a href="config/inccss">config.incCSS</a> option.',D=T(),(G=x("p")).innerHTML="All styles inside <code>&lt;style&gt;</code> block in Examples are encapsulated like in ordinary Svelte component."},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),on(O,n,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),on(R,n,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),on(z,n,e),$(n,w,e),$(n,k,e),$(n,C,e),on(Y,n,e),$(n,M,e),$(n,L,e),$(n,H,e),$(n,S,e),$(n,_,e),on(U,n,e),$(n,E,e),$(n,A,e),$(n,B,e),$(n,P,e),$(n,I,e),$(n,q,e),$(n,D,e),$(n,G,e),N=!0},p:n,i(n){N||(nn(O.$$.fragment,n),nn(R.$$.fragment,n),nn(z.$$.fragment,n),nn(Y.$$.fragment,n),nn(U.$$.fragment,n),N=!0)},o(n){en(O.$$.fragment,n),en(R.$$.fragment,n),en(z.$$.fragment,n),en(Y.$$.fragment,n),en(U.$$.fragment,n),N=!1},d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),ln(O,n),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),ln(R,n),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),ln(z,n),n&&v(w),n&&v(k),n&&v(C),ln(Y,n),n&&v(M),n&&v(L),n&&v(H),n&&v(S),n&&v(_),ln(U,n),n&&v(E),n&&v(A),n&&v(B),n&&v(P),n&&v(I),n&&v(q),n&&v(D),n&&v(G)}}}function Sn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w,k,C,M,L,S,_,E,A,B,P,I,q,D,G,N,O,R,z,Y,U;return{c(){(t=x("h1")).textContent="Properties",s=T(),(a=x("p")).textContent="Usually all components you want to document have some properties, which should be described. Properties code block allows do it as easy as possible.",o=T(),(l=x("p")).innerHTML="Suppose you have a <em>Input.svelte</em> component with following properties:",r=T(),(c=x("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#39;text&#39;</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',i=T(),(p=x("p")).textContent="There are four properties:",d=T(),(u=x("ol")).innerHTML="<li><em>name</em> - it hasn&#39;t default value, so it is not optional. Probably it should be string type, but who knows.</li> \n<li><em>type</em> - it is string value, optional because has default value. What other values may be used? </li> \n<li><em>disabled</em> - it is simple: optional, type bool, false by default.</li> \n<li><em>size</em> - easy: optional, type number, 1 by default. Nope! Also it could be string like &#39;20px&#39;.</li>",h=T(),(m=x("p")).textContent="So lets create fancy table of properties for this component:",f=T(),(g=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    name | Name of the input | string</span>\n<span class="hljs-code">    type | Type of the input | &#39;text&#39;,&#39;number&#39;,&#39;range&#39;,&#39;date&#39;(&#39;text)</span>\n<span class="hljs-code">    disabled | Should the input be disabled | bool(false)</span>\n<span class="hljs-code">    size | Size of the input | number/string(1)</span>\n<span class="hljs-code">    ```</span></code>',y=T(),(b=x("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',j=T(),(w=x("p")).textContent="Now user of your component will know all about its properties.",k=T(),(C=x("h3")).textContent="Describing property",M=T(),(L=x("ul")).innerHTML="<li><p>Each line of the <em>properties</em> code block must have three parts separated by <code>|</code> sign: <em>name</em> of the property, <em>description</em> and <em>type</em> of the property.</p></li> \n<li><p>If property may have one of the defined values, list them separated by commas: <code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;</code></p></li> \n<li><p>If property may be various types - list them with <code>/</code> separator: <code>number/string/bool</code>,<code>&#39;a&#39;,&#39;b&#39;,&#39;c&#39;/bool</code></p></li> \n<li><p>If property has default value add it in <code>(...)</code> right after <em>types</em>: <code>bool(true)</code>, <code>string/number(&#39;foo&#39;)</code></p></li>",S=T(),(_=x("h3")).textContent="Autogenerated properties",E=T(),(A=x("p")).innerHTML='Another way to describre properties, retrieve it right from the Svelte component with <a href="https://devdocs.io/jsdoc/tags-type">JSDoc @type</a> comments. Let&#39;s change our <em>Input.svelte</em> and add comment for each properties:',B=T(),(P=x("pre")).innerHTML='<code class="language-html">\n// ./../mylib/Input.svelte\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-comment">/** @type {string} Name of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name;\n    <span class="hljs-comment">/** @type {(&#39;text&#39;,&#39;number&#39;,&#39;range&#39;,&#39;date&#39;)} Type of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> type = <span class="hljs-string">&#39;text&#39;</span>;\n    <span class="hljs-comment">/** \n     * Should the input be disabled\n     * @type {bool} \n     */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> disabled = <span class="hljs-literal">false</span>;\n    <span class="hljs-comment">/** @type {(number|string)} Size of the input */</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> size = <span class="hljs-number">1</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code>',I=T(),(q=x("p")).textContent="You should write only description and types in the comments. Property name and default value will be parsed automaticly.",D=T(),(G=x("p")).textContent="Then just place a path to the this component inside Properties code block:",N=T(),(O=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```properties</span>\n<span class="hljs-code">    ./../mylib/Input.svelte</span>\n<span class="hljs-code">    ```</span></code>',R=T(),(z=x("p")).textContent="And get the result:",Y=T(),(U=x("dl")).innerHTML='<dt class="required">name</dt><dd><dfn>string</dfn></dd><dd></dd><dd>Name of the input</dd><dt>type</dt><dd><dfn><i>&#39;text&#39;</i>,<i>&#39;number&#39;</i>,<i>&#39;range&#39;</i>,<i>&#39;date&#39;</i></dfn></dd><dd>&#39;text&#39;</dd><dd>Type of the input</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the input be disabled</dd><dt>size</dt><dd><dfn>number</dfn><dfn>string</dfn></dd><dd>1</dd><dd>Size of the input</dd>',H(b,"class","properties"),H(U,"class","properties")},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),$(n,w,e),$(n,k,e),$(n,C,e),$(n,M,e),$(n,L,e),$(n,S,e),$(n,_,e),$(n,E,e),$(n,A,e),$(n,B,e),$(n,P,e),$(n,I,e),$(n,q,e),$(n,D,e),$(n,G,e),$(n,N,e),$(n,O,e),$(n,R,e),$(n,z,e),$(n,Y,e),$(n,U,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(M),n&&v(L),n&&v(S),n&&v(_),n&&v(E),n&&v(A),n&&v(B),n&&v(P),n&&v(I),n&&v(q),n&&v(D),n&&v(G),n&&v(N),n&&v(O),n&&v(R),n&&v(z),n&&v(Y),n&&v(U)}}}function _n(e){let t,s,a,o,l,r,c,i,p;return{c(){(t=x("h1")).textContent="Basepath option",s=T(),(a=x("p")).innerHTML="Option <code>basepath</code> is a part of URL to the root documentation site. ",o=T(),(l=x("p")).innerHTML='By default <code>basepath</code> is equal <code>&#39;/&#39;</code>, it is mean that documentation will be available by URL like <a href="https://mydocs.com">https://mydocs.com</a> or <a href="https://docs.mysite.com">https://docs.mysite.com</a>. ',r=T(),(c=x("p")).innerHTML='When you need to place documentation in the subdirectory of your existing site, you should change <code>basepath</code> to the value like <code>/subdir/</code>. In this case your documentation will be available by URL like <a href="https://mysite.com/subdir">https://mysite.com/subdir</a>.',i=T(),(p=x("blockquote")).innerHTML="<p>If you plan to publish documentation at the Github Pages of your repository, then set <code>basepath: &#39;/name-of-your-repo/&#39;</code>.</p>"},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p)}}}function En(e){let t,s,a;return{c(){(t=x("h1")).textContent="Configuration",s=T(),(a=x("p")).innerHTML="At the root of the documents sources directory you can find find <code>svelte-docs.config.js</code> file. For more info, see the description of each option by the link on the sidebar."},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a)}}}function An(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g;return{c(){(t=x("h1")).textContent="incCSS option",s=T(),(a=x("p")).textContent="If you want to use global CSS styles for result in the Example code block. You can easy include them with this option.",o=T(),(l=x("p")).textContent="Suppose you have following structure of your project:",r=T(),(c=x("pre")).innerHTML='<code class="language-javascript">\nmy-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   ├── counter.css\n│   └── Counter.svelte\n└── ...</code>',i=T(),(p=x("p")).innerHTML="Add <em>global css</em> using <code>incCSS</code> option:",d=T(),(u=x("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">&#39;./../mycomponent/counter.css&#39;</span>,\n    ...\n]</code>',h=T(),(m=x("p")).textContent="Same way you can import any CSS from NPM packages(don't forget to install it before):",f=T(),(g=x("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incCSS</span>: [\n    ...\n    <span class="hljs-string">&#39;node_modules/thebestcssframework/styles.min.css&#39;</span>,\n    ...\n]</code>'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g)}}}function Bn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w,k,C;return{c(){(t=x("h1")).textContent="incPKG option",s=T(),(a=x("p")).innerHTML="If you want use your local components in Examples code block you should link it with vitrual package name in <code>incPKG</code> option.",o=T(),(l=x("p")).textContent="Suppose you have following structure of your project:",r=T(),(c=x("pre")).innerHTML='<code class="language-javascript">\nmy-project\n├── docs_src\n│   └── ...\n├── mycomponent\n│   └── Counter.svelte\n└── ...</code>',i=T(),(p=x("p")).innerHTML="And want to import <code>mycomponents/Counter.svelte</code> in your Example code block, you may use relative path(from the docs root) like this:",d=T(),(u=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from &#39;./../mycomponent/Counter.svelte&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>',h=T(),(m=x("p")).textContent="But it is not looks good, especially when you will publish your components on NPM and want to teach users how to use it .",f=T(),(g=x("p")).innerHTML="So you can add <em>virtual package</em> using <code>incPKG</code> option:",y=T(),(b=x("pre")).innerHTML='<code class="language-javascript"><span class="hljs-attr">incPKG</span>:{\n    ...\n    <span class="hljs-string">&quot;my-counter-package&quot;</span>: <span class="hljs-string">&quot;./../mycomponent/Counter.svelte&quot;</span>,\n    ...\n}</code>',j=T(),(w=x("p")).innerHTML="And then you can import this <em>virtual package</em> inside of the Example:",k=T(),(C=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">        import Counter from &#39;my-counter-package&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n<span class="hljs-code">    &lt;Counter /&gt;</span>\n<span class="hljs-code">    ```</span></code>'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),$(n,w,e),$(n,k,e),$(n,C,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C)}}}function Pn(e){let t,s,a,o,l,r,c;return{c(){(t=x("h1")).textContent="Pathes option",s=T(),(a=x("p")).textContent="There are two pathes you can change.",o=T(),(l=x("ul")).innerHTML="<li><p><code>pathes.dev</code> - directory, where builded site is stored in development mode when you run command <code>npm run dev</code>. It is nonoptimized version with additional code for debugging during development process. <strong>Don&#39;t use this files in production!</strong></p></li> \n<li><p><code>pathes.build</code> - directory, where stored files of the builded site for production when you run command <code>npm run build</code>. You can deploy these files to the any service, which is support serving of the static files.</p></li>",r=T(),(c=x("blockquote")).innerHTML="<p>In most cases you don&#39;t need to change these options.</p>"},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c)}}}function In(e){let t,s,a,o,l,r,c,i,p;return{c(){(t=x("h1")).textContent="Preprocess option",s=T(),(a=x("p")).innerHTML="You can use any Svelte preprocessor for your Examples code block. Just install it from NPM, import in the <code>svelte-docs.config.file</code> and add to the  <code>preprocess</code> option same way you do in <code>rollup.config.js</code>.",o=T(),(l=x("pre")).innerHTML='<code class="language-javascript"><span class="hljs-keyword">const</span> markdown = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#39;svelte-preprocess-markdown&#39;</span>);\n\n<span class="hljs-built_in">module</span>.exports={\n    ...\n    preprocess: [\n        ...\n        markdown({<span class="hljs-attr">filetype</span>: <span class="hljs-string">&#39;svelte&#39;</span>}),\n        ...\n    ]\n    ...\n}</code>',r=T(),(c=x("p")).textContent="Then all your examples will be preprocessed:",i=T(),(p=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-code">    ```example</span>\n<span class="hljs-code">    &lt;script&gt;</span>\n<span class="hljs-code">    let name = &#39;World&#39;;</span>\n<span class="hljs-code">    &lt;/script&gt;</span>\n\n<span class="hljs-code">    # Hello, {name}!</span>\n<span class="hljs-code">    ```</span></code>'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p)}}}function qn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w,k,C,M,L,H,S,_,E,A,B,P,I;return{c(){(t=x("h1")).textContent="Getting started",s=T(),(a=x("h3")).textContent="Initialize Svelte-docs",o=T(),(l=x("p")).textContent="Just run this command in the root directory of your project:",r=T(),(c=x("pre")).innerHTML='<code class="language-bash">\nnpm init svelte-docs</code>',i=T(),(p=x("p")).textContent="It will ask you about the destination directory for the documents' sources. Then it will download template and theme into the specified directory and install required NPM packages.",d=T(),(u=x("h3")).textContent="Edit your docs",h=T(),(m=x("p")).textContent="Switch to the created directory, ex.:",f=T(),(g=x("pre")).innerHTML='<code class="language-bash"><span class="hljs-built_in">cd</span> docs_srv</code>',y=T(),(b=x("p")).textContent="Run docs in development mode on the local server:",j=T(),(w=x("pre")).innerHTML='<code class="language-bash">\nnpm run dev</code>',k=T(),(C=x("p")).innerHTML='Point your browser on <a href="http://localhost:5000">http://localhost:5000</a> to see your docs in action.',M=T(),(L=x("p")).innerHTML="Now you can edit files in <code>src/pages</code> directory and browser will be reloaded on each save. ",H=T(),(S=x("h3")).textContent="Build the documentation site",_=T(),(E=x("p")).textContent="As soon as documentation ready for release you need to run the build:",A=T(),(B=x("pre")).innerHTML='<code class="language-bash">\nnpm run build</code>',P=T(),(I=x("p")).innerHTML='All needed files will be builded into the <code>__DOCS__/build</code> directory(see <a href="config/pathes">config.pathes</a>). You can upload it to any service which supports static file serving. For convenience, Svelte-Docs have built-in ability to publish site on Github Pages.'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),$(n,w,e),$(n,k,e),$(n,C,e),$(n,M,e),$(n,L,e),$(n,H,e),$(n,S,e),$(n,_,e),$(n,E,e),$(n,A,e),$(n,B,e),$(n,P,e),$(n,I,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(M),n&&v(L),n&&v(H),n&&v(S),n&&v(_),n&&v(E),n&&v(A),n&&v(B),n&&v(P),n&&v(I)}}}function Dn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w,k,C,M,L,S,_,E,A,B,P,I,q;const D=new Ln({props:{name:"Ex_0_9753583d5391f3de0f3ee9487b6cf8d9",code:'\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>My button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>'}});return{c(){(t=x("h1")).textContent="Introdcing",s=T(),(a=x("h2")).textContent="Features",o=T(),(l=x("p")).innerHTML='Svelte-Docs is a rapid way to write documentation for your <a href="https://svelte.dev">Svelte</a> components.',r=T(),(c=x("blockquote")).innerHTML='<p><strong><div class="red svelte-qm6u78">It is an early alpha version of the Svelte-Docs so probably buggy and unstable. It also means that future versions may include breakable changes.</div></strong></p>',i=T(),(p=x("ul")).innerHTML='<li><p>Based on <a href="writing/mdsv">MDSv</a> format, which allows writing documentation in Markdown mixed with Svelte&#39;s features.</p></li> \n<li><p>Import and use any Svelte components right inside a markup</p></li> \n<li><p>Documentation building as static files, so you can publish it everywhere</p></li> \n<li><p>Customizable <a href="theming">themes</a></p></li> \n<li><p>Built-in <a href="publishing/ghpages">deploy</a> on Github Pages</p></li>',d=T(),(u=x("h2")).textContent="Zero-config",h=T(),(m=x("p")).textContent="Just run:",f=T(),(g=x("pre")).innerHTML='<code class="language-bash">\nnpm init svelte-docs</code>',y=T(),(b=x("p")).innerHTML='Then <a href="writing/mdsv">write</a> the documentation and <a href="start">build</a> it into static site.',j=T(),(w=x("h2")).textContent="Builtins",k=T(),(C=x("h3")).textContent="Examples",M=T(),(L=x("p")).textContent="Example block shows how your components work. It provides an encapsulated CSS environment, virtual imports and ability to use any Svelte preprocessor.",S=T(),an(D.$$.fragment),_=T(),(E=x("h3")).textContent="Properties",A=T(),(B=x("p")).innerHTML="Properties block provides a simple way to document properties of your components. It can be written manually or <em>autogenerated</em>  from the component&#39;s <code>*.svelte</code> file.",P=T(),(I=x("dl")).innerHTML="<dt>type</dt><dd><dfn><i>&#39;default&#39;</i>,<i>&#39;error&#39;</i>,<i>&#39;warning&#39;</i></dfn></dd><dd>&#39;default&#39;</dd><dd>Type of the button</dd><dt>disabled</dt><dd><dfn>bool</dfn></dd><dd>false</dd><dd>Should the button be disabled</dd>",H(I,"class","properties")},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),$(n,w,e),$(n,k,e),$(n,C,e),$(n,M,e),$(n,L,e),$(n,S,e),on(D,n,e),$(n,_,e),$(n,E,e),$(n,A,e),$(n,B,e),$(n,P,e),$(n,I,e),q=!0},p:n,i(n){q||(nn(D.$$.fragment,n),q=!0)},o(n){en(D.$$.fragment,n),q=!1},d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(M),n&&v(L),n&&v(S),ln(D,n),n&&v(_),n&&v(E),n&&v(A),n&&v(B),n&&v(P),n&&v(I)}}}function Gn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m;return{c(){(t=x("h1")).textContent="Publishing on Github Pages",s=T(),(a=x("p")).innerHTML="Svelte-docs has built-in publishing tool to deploy builded documentation into <em>gh-pages</em> branch of your current project. ",o=T(),(l=x("p")).textContent="To do it just run command in you documents source directory at any time:",r=T(),(c=x("pre")).innerHTML='<code class="language-bash">\nnpm run deploy</code>',i=T(),(p=x("p")).textContent="Then you should confirm publishing and wait some time while documents will be deployed to the GitHub.",d=T(),(u=x("blockquote")).innerHTML="<p>Your document sources directory or any parent directory should contents <code>.git</code> folder with initialized Github repository.</p>",h=T(),(m=x("blockquote")).innerHTML='<p>You must set the <a href="config/basepath">config.basepath</a> too the value equal <code>/you-repository-name/</code>;</p>'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m)}}}function Nn(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w;return{c(){(t=x("h1")).textContent="Theming",s=T(),(a=x("p")).innerHTML="Svelte-docs supports the customizable appearance. All you need for applying changes to almost every visual aspect of your documentation is located in <code>src/theme</code> dir.",o=T(),(l=x("h3")).textContent="Themes",r=T(),(c=x("p")).innerHTML='At the moment we have only one default theme which is made as a copy of the official <a href="https://svelte.dev/docs">Svelte documentation</a> theme. But feel free to <a href="https://github.com/alexxnb/svelte-docs/pulls">add</a> your fantastic theme to this repository. ',i=T(),(p=x("h3")).textContent="Colors",d=T(),(u=x("p")).innerHTML="To tune the colors of the current theme just edit custom properties in the <code>src/theme/styles.css</code> file.",h=T(),(m=x("h3")).textContent="Styles",f=T(),(g=x("p")).innerHTML="All styles of the site are in the <code>src/theme/styles</code> directory. Any of this <code>*.css</code> files should be imported in the <code>src/theme/styles.css</code> file.",y=T(),(b=x("h3")).textContent="Layout",j=T(),(w=x("p")).innerHTML="You can find Svelte components in the <code>src/theme/components</code> directory. It is the barebone of the documentation site. Change it only if you know what you do."},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),$(n,w,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w)}}}function On(e){let t,s,a,o,l,r,c,i,p,d,u,h,m,f,g,y,b,j,w,k,C,M,L,H,S,_,E,A,B,P,I,q,D,G,N,O,R,z,Y,U,W,F,K;return{c(){(t=x("h1")).textContent="Includes",s=T(),(a=x("p")).innerHTML="In the <code>src/includes</code> directory live little MDSv components which you can include in any page you want. There are some default files used by theme:",o=T(),(l=x("h3")).textContent="sidebar.md",r=T(),(c=x("p")).textContent="This file contains list of content on the left sidebar. This is your documentation's structure reflected in markdown code.",i=T(),(p=x("p")).textContent="Let's look on example:",d=T(),(u=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-bullet">\n* </span>Getting Started\n‎‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎- [<span class="hljs-string">Install</span>](<span class="hljs-link">install</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Components</span>](<span class="hljs-link">components/list</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Button</span>](<span class="hljs-link">components/button</span>)\n‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ - [<span class="hljs-string">Input</span>](<span class="hljs-link">components/input</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',h=T(),(m=x("p")).innerHTML="Usually it is just a list of links or strings. You can freely arrange items as you want, no necessary to reproduce a file structure of the <code>src/pages</code> directory. ",f=T(),(g=x("p")).innerHTML='URL of local pages is an a path to corresponding <code>*.md</code> file. In the example above <code>components/button</code> will link to the page described in <code>src/pages/components/button.md</code> file. Please see <a href="writing/routing">Routing</a> section for more info about URL.',y=T(),(b=x("p")).textContent="External URLs will be opened in new window.",j=T(),(w=x("h3")).textContent="logo.md",k=T(),(C=x("p")).textContent="Commonly used for showing any logotype.  Just write something like:",M=T(),(L=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-section"># MyComponent #</span></code>',H=T(),(S=x("p")).textContent="Or you can use an image as your logotype:",_=T(),(E=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-section"># ![Logo](static/logo.png) #</span></code>',A=T(),(B=x("h3")).textContent="topbar.md",P=T(),(I=x("p")).textContent="There you can manage right section of the topbar. For example add some links there:",q=T(),(D=x("pre")).innerHTML='<code class="language-markdown"><span class="hljs-bullet">\n* </span>[<span class="hljs-string">Home</span>](<span class="hljs-link">/</span>)\n<span class="hljs-bullet">* </span>[<span class="hljs-string">Github</span>](<span class="hljs-link">https://github.com/me/my-svelte-lib</span>)</code>',G=T(),(N=x("h3")).textContent="error.md",O=T(),(R=x("p")).textContent="Just an error message which will be shown when user try to load unexistent URL.",z=T(),(Y=x("h2")).textContent="Custom includes",U=T(),(W=x("p")).innerHTML="You are free to add any <code>*.md</code> files there which you can to include on any page you want using special import path:",F=T(),(K=x("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@INCLUDES/banner.md&#39;</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Banner</span> /&gt;</span></code>'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e),$(n,h,e),$(n,m,e),$(n,f,e),$(n,g,e),$(n,y,e),$(n,b,e),$(n,j,e),$(n,w,e),$(n,k,e),$(n,C,e),$(n,M,e),$(n,L,e),$(n,H,e),$(n,S,e),$(n,_,e),$(n,E,e),$(n,A,e),$(n,B,e),$(n,P,e),$(n,I,e),$(n,q,e),$(n,D,e),$(n,G,e),$(n,N,e),$(n,O,e),$(n,R,e),$(n,z,e),$(n,Y,e),$(n,U,e),$(n,W,e),$(n,F,e),$(n,K,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(w),n&&v(k),n&&v(C),n&&v(M),n&&v(L),n&&v(H),n&&v(S),n&&v(_),n&&v(E),n&&v(A),n&&v(B),n&&v(P),n&&v(I),n&&v(q),n&&v(D),n&&v(G),n&&v(N),n&&v(O),n&&v(R),n&&v(z),n&&v(Y),n&&v(U),n&&v(W),n&&v(F),n&&v(K)}}}function Rn(e){let t,s,a,l,r,c,i,p;return{c(){t=x("span"),(s=x("span")).textContent="-",a=T(),l=x("span"),r=C(e.count),c=T(),(i=x("span")).textContent="+",H(s,"class","minus svelte-1kq48qn"),H(l,"class","value svelte-1kq48qn"),H(i,"class","plus svelte-1kq48qn"),H(t,"class","counter svelte-1kq48qn"),p=[L(s,"click",function(){e.click_handler.apply(this,arguments)}),L(i,"click",function(){e.click_handler_1.apply(this,arguments)})]},m(n,e){$(n,t,e),w(t,s),w(t,a),w(t,l),w(l,r),w(t,c),w(t,i)},p(n,t){e=t,n.count&&S(r,e.count)},i:n,o:n,d(n){n&&v(t),o(p)}}}function zn(n,e,t){let s=0;return{count:s,click_handler:n=>t("count",s--,s),click_handler_1:n=>t("count",s++,s)}}class Yn extends pn{constructor(n){super(),cn(this,n,zn,Rn,r,{})}}function Un(e){let t;return{c(){(t=x("blockquote")).innerHTML="<p><em>MDSv is really cool!</em></p>"},m(n,e){$(n,t,e)},p:n,i:n,o:n,d(n){n&&v(t)}}}class Wn extends pn{constructor(n){super(),cn(this,n,null,Un,r,{})}}function Fn(n,e,t){const s=Object.create(n);return s.item=e[t],s}function Kn(n){let e,t,s,a=n.item+"";return{c(){e=x("ul"),t=x("li"),s=C(a)},m(n,a){$(n,e,a),w(e,t),w(t,s)},p(n,e){n.items&&a!==(a=e.item+"")&&S(s,a)},d(n){n&&v(e)}}}function Jn(n){let e,t,s,a,l,r,c,i,p,d,u,h,m,f,g,y,b,j,k,C,M,H,S,_,E,A,B,P,I,q,D,G,N,O,R,z,Y,U,W,F,K=n.items,J=[];for(let e=0;e<K.length;e+=1)J[e]=Kn(Fn(n,K,e));const Z=new Yn({}),Q=new Wn({});return{c(){(e=x("h1")).textContent="What is MDSv",t=T(),(s=x("p")).textContent="MDSv is a Svelte component written in Markdown syntax. You can import and use any Svelte components right inside the markdown markup.",a=T(),(l=x("p")).innerHTML='For more info please visit the <a href="https://alexxnb.github.io/svelte-preprocess-markdown/">svelte-preprocess-markdown</a> site.',r=T(),(c=x("p")).textContent="Markdown is a fast and comfortable way to write documentation, but MDSv providing full power of Svelte to your docs.",i=T(),(p=x("p")).textContent="This document also wrote in MDSv format, so we can do this right inside the document...",d=T(),(u=x("pre")).innerHTML='<code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"> \n    <span class="hljs-keyword">let</span> items = [<span class="hljs-string">&#39;item0&#39;</span>,<span class="hljs-string">&#39;item1&#39;</span>];\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{ items = [...items,<span class="hljs-string">&#39;item&#39;</span>+items.length] }\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params"></span>) </span>{ items = items.slice(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>) }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n...\n{#each item as item}\n* {item}\n{/each}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{add}</span>&gt;</span>Add Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">on:click</span>=<span class="hljs-string">{del}</span>&gt;</span>Del Item<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code>',h=T(),(m=x("p")).textContent="... and get the result:",f=T();for(let n=0;n<J.length;n+=1)J[n].c();g=T(),(y=x("button")).textContent="Add Item",b=T(),(j=x("button")).textContent="Del Item",k=T(),(C=x("p")).textContent="Or we can import any Svelte component and use it where we want:",M=T(),(H=x("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Counter from &#39;./Counter.svelte&#39;;</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-emphasis">*The counter:*</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> /&gt;</span></span></code>',S=T(),(_=x("p")).textContent="... and it will work:",E=T(),A=x("p"),(B=x("em")).textContent="The counter:",P=T(),an(Z.$$.fragment),I=T(),(q=x("p")).innerHTML="You even can import other <code>*.md</code> files:",D=T(),(G=x("pre")).innerHTML='<code class="language-markdown"><span class="xml"><span class="hljs-comment">&lt;!-- spoiler.md --&gt;</span></span>\n<span class="hljs-quote">&gt; *MDSv is really cool!*</span>\n\n\n<span class="xml"><span class="hljs-comment">&lt;!-- document.md --&gt;</span></span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span>\n<span class="hljs-code">    import Spoiler from &#39;./spoiler.md&#39;;</span>\n<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n\n<span class="hljs-strong">**Spoiler:**</span>\n<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spoiler</span> /&gt;</span></span></code>',N=T(),(O=x("p")).textContent="... and it will be included in the specified place:",R=T(),z=x("p"),(Y=x("strong")).textContent="Spoiler:",U=T(),an(Q.$$.fragment),F=[L(y,"click",n.add),L(j,"click",n.del)]},m(n,o){$(n,e,o),$(n,t,o),$(n,s,o),$(n,a,o),$(n,l,o),$(n,r,o),$(n,c,o),$(n,i,o),$(n,p,o),$(n,d,o),$(n,u,o),$(n,h,o),$(n,m,o),$(n,f,o);for(let e=0;e<J.length;e+=1)J[e].m(n,o);$(n,g,o),$(n,y,o),$(n,b,o),$(n,j,o),$(n,k,o),$(n,C,o),$(n,M,o),$(n,H,o),$(n,S,o),$(n,_,o),$(n,E,o),$(n,A,o),w(A,B),w(A,P),on(Z,A,null),$(n,I,o),$(n,q,o),$(n,D,o),$(n,G,o),$(n,N,o),$(n,O,o),$(n,R,o),$(n,z,o),w(z,Y),w(z,U),on(Q,z,null),W=!0},p(n,e){if(n.items){let t;for(K=e.items,t=0;t<K.length;t+=1){const s=Fn(e,K,t);J[t]?J[t].p(n,s):(J[t]=Kn(s),J[t].c(),J[t].m(g.parentNode,g))}for(;t<J.length;t+=1)J[t].d(1);J.length=K.length}},i(n){W||(nn(Z.$$.fragment,n),nn(Q.$$.fragment,n),W=!0)},o(n){en(Z.$$.fragment,n),en(Q.$$.fragment,n),W=!1},d(n){n&&v(e),n&&v(t),n&&v(s),n&&v(a),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u),n&&v(h),n&&v(m),n&&v(f),function(n,e){for(let t=0;t<n.length;t+=1)n[t]&&n[t].d(e)}(J,n),n&&v(g),n&&v(y),n&&v(b),n&&v(j),n&&v(k),n&&v(C),n&&v(M),n&&v(H),n&&v(S),n&&v(_),n&&v(E),n&&v(A),ln(Z),n&&v(I),n&&v(q),n&&v(D),n&&v(G),n&&v(N),n&&v(O),n&&v(R),n&&v(z),ln(Q),o(F)}}}function Zn(n,e,t){let s=["item0","item1"];return{items:s,add:function(){t("items",s=[...s,"item"+s.length])},del:function(){t("items",s=s.slice(0,-1))}}}function Qn(e){let t,s,a,o,l,r,c;return{c(){(t=x("h1")).textContent="Routing",s=T(),(a=x("p")).innerHTML="<em>Svelte-Docs</em> has built-in routing system based on files structure in the <code>src/pages</code> directory:",o=T(),(l=x("pre")).innerHTML='<code class="language-bash">\nsrc                     <span class="hljs-comment">#  URL path part:</span>\n└── pages               <span class="hljs-comment">#</span>\n    ├── components      <span class="hljs-comment">#</span>\n    │   ├── list.md     <span class="hljs-comment">#  components/list</span>\n    │   ├── button.md   <span class="hljs-comment">#  components/button</span>\n    │   └── input.md    <span class="hljs-comment">#  components/input</span>\n    ├── install.md      <span class="hljs-comment">#  install</span>\n    └── index.md         <span class="hljs-comment">#  / </span></code>',r=T(),(c=x("p")).innerHTML="You can make links anywhere in your docs with URL part based on file hierarchy. For example, if you want to link to the <code>src/pages/components/button.md</code> you should use this href attribute for the <code>a</code> element - <code>components/button</code>. Or in markdown - <code>[Button](component/button)</code>."},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c)}}}function Vn(e){let t,s,a,o,l,r,c,i,p,d,u;return{c(){(t=x("h1")).textContent="Pages configuration",s=T(),(a=x("p")).textContent="You can configure every pages with few parameters in markdown's metatags block at the top of needed pages.",o=T(),(l=x("h3")).textContent="fullscreen",r=T(),(c=x("p")).innerHTML="By default all pages has a layout with left sidebar. But if you set the <code>fullscreen</code> option this way:",i=T(),(p=x("pre")).innerHTML='<code class="language-markdown">\n---\n<span class="hljs-section">fullscreen: true\n---</span>\n... </code>',d=T(),(u=x("p")).textContent="... page will render without sidebar."},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u)}}}function Xn(e){let t,s,a,o,l,r,c,i,p,d,u;return{c(){(t=x("h1")).textContent="Static files",s=T(),(a=x("p")).innerHTML="Any static files used in documents such as images, icons or files for download are stored in <code>src/pages/static</code> directory.",o=T(),(l=x("p")).innerHTML="For example, if you placed image in the <code>src/pages/static/great-success.png</code> then you can include it by following code:",r=T(),(c=x("pre")).innerHTML='<code class="language-markdown">\n![<span class="hljs-string">Great Success</span>](<span class="hljs-link">static/great-success.png</span>);</code>',i=T(),(p=x("p")).textContent="... and get image on your page:",d=T(),(u=x("p")).innerHTML='<img src="static/great-success.png" alt="Great Success">;'},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e),$(n,d,e),$(n,u,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p),n&&v(d),n&&v(u)}}}function ne(e){let t,s,a,o,l,r,c,i,p;return{c(){(t=x("h1")).textContent="Structure",s=T(),(a=x("p")).textContent="Let's see the structure of the doc's project directory:",o=T(),(l=x("pre")).innerHTML='<code class="language-bash">\nsrc\n├── includes\n├── pages\n├── static\n└── theme   \n...\nsvelte-docs.config.js</code>',r=T(),(c=x("p")).innerHTML="It is very simple, sources of you documentation are live in <code>src</code> directory:",i=T(),(p=x("ul")).innerHTML="<li><strong>includes</strong> - there are small pieces of the MDSv code that can be reusable within any document page</li> \n<li><strong>pages</strong> - all pages of your documentation are stored in this directory</li> \n<li><strong>static</strong> - place here any static assets using in your documentation (files, images, icons and etc.)</li> \n<li><strong>theme</strong> - it is CSS and svelte files of the current theme which might be changed for appearance tunning</li>"},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e),$(n,o,e),$(n,l,e),$(n,r,e),$(n,c,e),$(n,i,e),$(n,p,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a),n&&v(o),n&&v(l),n&&v(r),n&&v(c),n&&v(i),n&&v(p)}}}function ee(e){let t,s,a;return{c(){(t=x("h1")).textContent="Page not found!",s=T(),(a=x("p")).innerHTML='<a href="/">Go to start page</a>',H(t,"class","svelte-aiue6m"),H(a,"class","svelte-aiue6m")},m(n,e){$(n,t,e),$(n,s,e),$(n,a,e)},p:n,i:n,o:n,d(n){n&&v(t),n&&v(s),n&&v(a)}}}class te extends pn{constructor(n){super(),cn(this,n,null,ee,r,{})}}function se(e){let t;const s=new te({});return{c(){an(s.$$.fragment)},m(n,e){on(s,n,e),t=!0},p:n,i(n){t||(nn(s.$$.fragment,n),t=!0)},o(n){en(s.$$.fragment,n),t=!1},d(n){ln(s,n)}}}class ae extends pn{constructor(n){super(),cn(this,n,null,se,r,{})}}const oe=[];function le(e,t=n){let s;const a=[];function o(n){if(r(e,n)&&(e=n,s)){const n=!oe.length;for(let n=0;n<a.length;n+=1){const t=a[n];t[1](),oe.push(t,e)}if(n){for(let n=0;n<oe.length;n+=2)oe[n][0](oe[n+1]);oe.length=0}}}return{set:o,update:function(n){o(n(e))},subscribe:function(l,r=n){const c=[l,r];return a.push(c),1===a.length&&(s=t(o)||n),l(e),()=>{const n=a.indexOf(c);-1!==n&&a.splice(n,1),0===a.length&&(s(),s=null)}}}}const re=le(function(){let n=location.pathname;return n=function(n){const e=pe();return n.startsWith(e)&&(n=n.slice(e.length)),n.startsWith("/")&&(n=n.slice(1)),n.endsWith("/")&&(n=n.slice(0,-1)),n}(n)}());function ce(n){history.pushState({},"",""===n?pe():n),re.set(n)}function ie(n){const e=n.target.closest("a");if(!e)return;const t=e.getAttribute("href");if(t){if(!/^\w+:\/\//.test(t))return n.preventDefault(),/^\/$/.test(t)?ce(""):ce(t);e.setAttribute("target","_blank")}}function pe(){let n=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===n?"/":n}const de=[{url:"",component:hn,meta:un},{url:"builtins/example",component:class extends pn{constructor(n){super(),cn(this,n,null,Hn,r,{})}},meta:{}},{url:"builtins/properties",component:class extends pn{constructor(n){super(),cn(this,n,null,Sn,r,{})}},meta:{}},{url:"config/basepath",component:class extends pn{constructor(n){super(),cn(this,n,null,_n,r,{})}},meta:{}},{url:"config/file",component:class extends pn{constructor(n){super(),cn(this,n,null,En,r,{})}},meta:{}},{url:"config/inccss",component:class extends pn{constructor(n){super(),cn(this,n,null,An,r,{})}},meta:{}},{url:"config/incpkg",component:class extends pn{constructor(n){super(),cn(this,n,null,Bn,r,{})}},meta:{}},{url:"config/pathes",component:class extends pn{constructor(n){super(),cn(this,n,null,Pn,r,{})}},meta:{}},{url:"config/preprocess",component:class extends pn{constructor(n){super(),cn(this,n,null,In,r,{})}},meta:{}},{url:"getting-started",component:class extends pn{constructor(n){super(),cn(this,n,null,qn,r,{})}},meta:{}},{url:"index",component:hn,meta:un},{url:"introduction",component:class extends pn{constructor(n){super(),cn(this,n,null,Dn,r,{})}},meta:{}},{url:"publishing/ghpages",component:class extends pn{constructor(n){super(),cn(this,n,null,Gn,r,{})}},meta:{}},{url:"theming",component:class extends pn{constructor(n){super(),cn(this,n,null,Nn,r,{})}},meta:{}},{url:"writing/includes",component:class extends pn{constructor(n){super(),cn(this,n,null,On,r,{})}},meta:{}},{url:"writing/mdsv",component:class extends pn{constructor(n){super(),cn(this,n,Zn,Jn,r,{})}},meta:{}},{url:"writing/routing",component:class extends pn{constructor(n){super(),cn(this,n,null,Qn,r,{})}},meta:{}},{url:"writing/settings",component:class extends pn{constructor(n){super(),cn(this,n,null,Vn,r,{})}},meta:{}},{url:"writing/static",component:class extends pn{constructor(n){super(),cn(this,n,null,Xn,r,{})}},meta:{}},{url:"writing/structure",component:class extends pn{constructor(n){super(),cn(this,n,null,ne,r,{})}},meta:{}}],ue=function(e,t,s){const a=!Array.isArray(e),r=a?[e]:e,c=t.length<2;return{subscribe:le(s,e=>{let s=!1;const i=[];let p=0,d=n;const u=()=>{if(p)return;d();const s=t(a?i[0]:i,e);c?e(s):d=l(s)?s:n},h=r.map((n,e)=>n.subscribe(n=>{i[e]=n,p&=~(1<<e),s&&u()},()=>{p|=1<<e}));return s=!0,u(),function(){o(h),d()}}).subscribe}}(re,n=>{const e=de.filter(e=>e.url===n);return e.length>0?e[0]:{url:"404",component:ae,meta:{fullscreen:!0}}});function he(n){let e;return{c(){(e=x("h1")).innerHTML='<a href="/"><img src="static/logo.svg" alt="LOGO" class="svelte-1m9fc3n"></a>'},m(n,t){$(n,e,t)},d(n){n&&v(e)}}}function me(e){let t,s=""!==e.$current_page.url&&he();return{c(){s&&s.c(),t=M()},m(n,e){s&&s.m(n,e),$(n,t,e)},p(n,e){""!==e.$current_page.url?s||((s=he()).c(),s.m(t.parentNode,t)):s&&(s.d(1),s=null)},i:n,o:n,d(n){s&&s.d(n),n&&v(t)}}}function fe(n,e,t){let s;return c(n,ue,n=>t("$current_page",s=n)),{$current_page:s}}class ge extends pn{constructor(n){super(),cn(this,n,fe,me,r,{})}}function ye(n){return n<.5?4*n*n*n:.5*Math.pow(2*n-2,3)+1}function be(n){return"[object Date]"===Object.prototype.toString.call(n)}function je(n,e){if(n===e||n!=n)return()=>n;const t=typeof n;if(t!==typeof e||Array.isArray(n)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(n)){const t=e.map((e,t)=>je(n[t],e));return n=>t.map(e=>e(n))}if("object"===t){if(!n||!e)throw new Error("Object cannot be null");if(be(n)&&be(e)){n=n.getTime();const t=(e=e.getTime())-n;return e=>new Date(n+e*t)}const t=Object.keys(e),s={};return t.forEach(t=>{s[t]=je(n[t],e[t])}),n=>{const e={};return t.forEach(t=>{e[t]=s[t](n)}),e}}if("number"===t){const t=e-n;return e=>n+e*t}throw new Error(`Cannot interpolate ${t} values`)}function we(n){let e,t,s;return{c(){(e=x("span")).textContent="Github",H(e,"class","label svelte-bpn430")},m(n,t){$(n,e,t),s=!0},i(n){s||(W(()=>{t||(t=sn(e,ve,{},!0)),t.run(1)}),s=!0)},o(n){t||(t=sn(e,ve,{},!1)),t.run(0),s=!1},d(n){n&&v(e),n&&t&&t.end()}}}function $e(n){let e,t,s,a,l,r,c=n.hover&&we();return{c(){e=x("a"),t=k("svg"),s=k("path"),a=T(),c&&c.c(),H(s,"d","M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"),H(t,"viewBox","0 0 24 24"),_(t,"transform","rotate(-"+n.$rotation+"deg)"),H(t,"class","svelte-bpn430"),H(e,"class","github svelte-bpn430"),H(e,"href",n.url),H(e,"target","_blank"),r=[L(e,"mouseenter",n.mEnter),L(e,"mouseleave",n.mLeave)]},m(n,o){$(n,e,o),w(e,t),w(t,s),w(e,a),c&&c.m(e,null),l=!0},p(n,s){l&&!n.$rotation||_(t,"transform","rotate(-"+s.$rotation+"deg)"),s.hover?c?nn(c,1):((c=we()).c(),nn(c,1),c.m(e,null)):c&&(V(),en(c,1,1,()=>{c=null}),X()),l&&!n.url||H(e,"href",s.url)},i(n){l||(nn(c),l=!0)},o(n){en(c),l=!1},d(n){n&&v(e),c&&c.d(),o(r)}}}function ve(n){return{delay:0,duration:500,css:n=>`overflow:hide; width: ${50*ye(n)}px; opacity: ${n}`}}function xe(n,s,a){let o,{url:l}=s,{animation:r=!1}=s,i=!1;const p=function(n,s={}){const a=le(n);let o,l=n;function r(r,c){if(null==n)return a.set(n=r),Promise.resolve();l=r;let i=o,p=!1,{delay:d=0,duration:u=400,easing:m=e,interpolate:f=je}=t(t({},s),c);const g=h()+d;let y;return(o=j(e=>{if(e<g)return!0;p||(y=f(n,r),"function"==typeof u&&(u=u(n,r)),p=!0),i&&(i.abort(),i=null);const t=e-g;return t>u?(a.set(n=r),!1):(a.set(n=y(m(t/u))),!0)})).promise}return{set:r,update:(e,t)=>r(e(l,n),t),subscribe:a.subscribe}}(0,{duration:500,easing:ye});return c(n,p,n=>a("$rotation",o=n)),n.$set=(n=>{"url"in n&&a("url",l=n.url),"animation"in n&&a("animation",r=n.animation)}),n.$$.update=((n={hover:1})=>{n.hover&&function(n,e,t=e){n.set(t)}(p,o=i?100:0)}),{url:l,animation:r,hover:i,mEnter:function(){r&&a("hover",i=!0)},mLeave:function(){a("hover",i=!1)},rotation:p,$rotation:o}}class ke extends pn{constructor(n){super(),cn(this,n,xe,$e,r,{url:0,animation:0})}}function Ce(e){let t,s,a,o,l;const r=new ke({props:{animation:!0,url:"https://github.com/alexxnb/svelte-docs"}});return{c(){t=x("ul"),(s=x("li")).innerHTML='<a href="getting-started">Docs</a>',a=T(),o=x("li"),an(r.$$.fragment)},m(n,e){$(n,t,e),w(t,s),w(t,a),w(t,o),on(r,o,null),l=!0},p:n,i(n){l||(nn(r.$$.fragment,n),l=!0)},o(n){en(r.$$.fragment,n),l=!1},d(n){n&&v(t),ln(r)}}}class Te extends pn{constructor(n){super(),cn(this,n,null,Ce,r,{})}}function Me(e){let t,s,a,o;const l=new ge({}),r=new Te({});return{c(){t=x("section"),an(l.$$.fragment),s=T(),a=x("section"),an(r.$$.fragment)},m(n,e){$(n,t,e),on(l,t,null),$(n,s,e),$(n,a,e),on(r,a,null),o=!0},p:n,i(n){o||(nn(l.$$.fragment,n),nn(r.$$.fragment,n),o=!0)},o(n){en(l.$$.fragment,n),en(r.$$.fragment,n),o=!1},d(n){n&&v(t),ln(l),n&&v(s),n&&v(a),ln(r)}}}class Le extends pn{constructor(n){super(),cn(this,n,null,Me,r,{})}}function He(e){let t;return{c(){(t=x("ul")).innerHTML='<li><a href="introduction">Introduction</a></li> \n<li><a href="getting-started">Getting Started</a></li> \n<li>Writing docs<ul><li><a href="writing/mdsv">What is MDSv</a></li> \n<li><a href="writing/structure">Structure</a></li> \n<li><a href="writing/includes">Includes</a></li> \n<li><a href="writing/routing">Routing</a></li> \n<li><a href="writing/static">Static files</a></li> \n<li><a href="writing/settings">Page settings</a></li></ul></li> \n<li><a href="config/file">Configuration</a><ul><li><a href="config/basepath">basepath</a></li> \n<li><a href="config/pathes">pathes</a></li> \n<li><a href="config/incpkg">incPKG</a></li> \n<li><a href="config/inccss">incCSS</a></li> \n<li><a href="config/preprocess">preprocess</a></li></ul></li> \n<li>Builtins<ul><li><a href="builtins/example">Example</a></li> \n<li><a href="builtins/properties">Properties</a></li></ul></li> \n<li><a href="theming">Theming</a></li> \n<li>Publishing<ul><li><a href="publishing/ghpages">GitHub Pages</a></li></ul></li>'},m(n,e){$(n,t,e)},p:n,i:n,o:n,d(n){n&&v(t)}}}class Se extends pn{constructor(n){super(),cn(this,n,null,He,r,{})}}function _e(e){let t;const s=new Se({});return{c(){an(s.$$.fragment)},m(n,e){on(s,n,e),t=!0},p:n,i(n){t||(nn(s.$$.fragment,n),t=!0)},o(n){en(s.$$.fragment,n),t=!1},d(n){ln(s,n)}}}class Ee extends pn{constructor(n){super(),cn(this,n,null,_e,r,{})}}function Ae(n){let e,t;var s=n.$current_page.component;if(s)var a=new s({});return{c(){e=x("article"),a&&an(a.$$.fragment)},m(n,s){$(n,e,s),a&&on(a,e,null),t=!0},p(n,t){if(s!==(s=t.$current_page.component)){if(a){V();const n=a;en(n.$$.fragment,1,0,()=>{ln(n,1)}),X()}s?(an((a=new s({})).$$.fragment),nn(a.$$.fragment,1),on(a,e,null)):a=null}},i(n){t||(a&&nn(a.$$.fragment,n),t=!0)},o(n){a&&en(a.$$.fragment,n),t=!1},d(n){n&&v(e),a&&ln(a)}}}function Be(n,e,t){let s;return c(n,ue,n=>t("$current_page",s=n)),ue.subscribe(()=>{window.scrollTo(0,0)}),{$current_page:s}}class Pe extends pn{constructor(n){super(),cn(this,n,Be,Ae,r,{})}}function Ie(n){let e,t,s,a,o,r,c;const i=new Ee({}),p=new Pe({});return{c(){e=x("span"),t=T(),s=x("nav"),an(i.$$.fragment),o=T(),r=x("main"),an(p.$$.fragment),H(e,"class","showSidebar"),H(e,"tabindex","0")},m(n,l){$(n,e,l),$(n,t,l),$(n,s,l),on(i,s,null),a=function(n){return{destroy:ue.subscribe(e=>{n.querySelectorAll("a").forEach(n=>{n.getAttribute("href")===e.url?n.classList.add("active"):n.classList.remove("active")})})}}.call(null,s)||{},$(n,o,l),$(n,r,l),on(p,r,null),c=!0},i(n){c||(nn(i.$$.fragment,n),nn(p.$$.fragment,n),c=!0)},o(n){en(i.$$.fragment,n),en(p.$$.fragment,n),c=!1},d(n){n&&v(e),n&&v(t),n&&v(s),ln(i),a&&l(a.destroy)&&a.destroy(),n&&v(o),n&&v(r),ln(p)}}}function qe(n){let e,t;const s=new Pe({});return{c(){e=x("main"),an(s.$$.fragment),H(e,"class","fullscreen")},m(n,a){$(n,e,a),on(s,e,null),t=!0},i(n){t||(nn(s.$$.fragment,n),t=!0)},o(n){en(s.$$.fragment,n),t=!1},d(n){n&&v(e),ln(s)}}}function De(n){let e,t,s,a,o,l;const r=new Le({}),c=[qe,Ie],i=[];function p(n,e){return e.$current_page.meta.fullscreen?0:1}return s=p(0,n),a=i[s]=c[s](n),{c(){e=x("header"),an(r.$$.fragment),t=T(),a.c(),o=M()},m(n,a){$(n,e,a),on(r,e,null),$(n,t,a),i[s].m(n,a),$(n,o,a),l=!0},p(n,e){let t=s;(s=p(0,e))!==t&&(V(),en(i[t],1,1,()=>{i[t]=null}),X(),(a=i[s])||(a=i[s]=c[s](e)).c(),nn(a,1),a.m(o.parentNode,o))},i(n){l||(nn(r.$$.fragment,n),nn(a),l=!0)},o(n){en(r.$$.fragment,n),en(a),l=!1},d(n){n&&v(e),ln(r),n&&v(t),i[s].d(n),n&&v(o)}}}function Ge(n,e,t){let s;return c(n,ue,n=>t("$current_page",s=n)),{$current_page:s}}class Ne extends pn{constructor(n){super(),cn(this,n,Ge,De,r,{})}}function Oe(e){let t;const s=new Ne({});return{c(){an(s.$$.fragment)},m(n,e){on(s,n,e),t=!0},p:n,i(n){t||(nn(s.$$.fragment,n),t=!0)},o(n){en(s.$$.fragment,n),t=!1},d(n){ln(s,n)}}}function Re(n){return D(()=>(addEventListener("click",ie),function(){removeEventListener("click",ie)})),{}}return new class extends pn{constructor(n){super(),cn(this,n,Re,Oe,r,{})}}({target:document.body,props:{}})}();
